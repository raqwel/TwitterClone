2018-07-08 16:47:18,691 [main] INFO  (DfReplaceSchemaTask#begin():92) - +------------------------------------------+
2018-07-08 16:47:18,693 [main] INFO  (DfReplaceSchemaTask#begin():93) - |                                          |
2018-07-08 16:47:18,693 [main] INFO  (DfReplaceSchemaTask#begin():94) - |              ReplaceSchema               |
2018-07-08 16:47:18,699 [main] INFO  (DfReplaceSchemaTask#begin():102) - |                                          |
2018-07-08 16:47:18,699 [main] INFO  (DfReplaceSchemaTask#begin():103) - +------------------------------------------+
2018-07-08 16:47:18,700 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():401) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2018-07-08 16:47:20,775 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 16:47:20,776 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = MySQL
2018-07-08 16:47:20,776 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = 127.0.0.1:3306
2018-07-08 16:47:20,776 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 16:47:20,778 [main] ERROR (DfDBFluteTaskUtil#logException():150) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute DBFlute Task 'ReplaceSchema'.

[Advice]
Check the exception messages and the stack traces.
* * * * * * * * * */
java.lang.IllegalStateException: Class Not Found: JDBC driver MySQL could not be loaded.
	at org.dbflute.helper.jdbc.connection.DfDataSourceHandler.newDriver(DfDataSourceHandler.java:193)
	at org.dbflute.helper.jdbc.connection.DfDataSourceHandler.createConnection(DfDataSourceHandler.java:162)
	at org.dbflute.helper.jdbc.connection.DfDataSourceHandler.processCachedConnection(DfDataSourceHandler.java:154)
	at org.dbflute.helper.jdbc.connection.DfDataSourceHandler.getConnection(DfDataSourceHandler.java:137)
	at org.dbflute.helper.jdbc.connection.DfFittingDataSource.getConnection(DfFittingDataSource.java:44)
	at org.dbflute.helper.jdbc.context.DfSchemaSource.getConnection(DfSchemaSource.java:82)
	at org.dbflute.task.DfReplaceSchemaTask.setupDataSource(DfReplaceSchemaTask.java:130)
	at org.dbflute.task.bs.DfAbstractTexenTask$1.callSetupDataSource(DfAbstractTexenTask.java:113)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.setupDataSource(DfTaskBasicController.java:173)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:75)
	at org.dbflute.task.bs.DfAbstractTexenTask.execute(DfAbstractTexenTask.java:151)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
Caused by: java.lang.ClassNotFoundException: MySQL
	at org.apache.tools.ant.AntClassLoader.findClassInComponents(AntClassLoader.java:1383)
	at org.apache.tools.ant.AntClassLoader.findClass(AntClassLoader.java:1324)
	at org.apache.tools.ant.AntClassLoader.loadClass(AntClassLoader.java:1072)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.dbflute.helper.jdbc.connection.DfDataSourceHandler.newDriver(DfDataSourceHandler.java:189)
	... 26 more
2018-07-08 16:47:20,862 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m02s181ms *Abort

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = MySQL
    url    = 127.0.0.1:3306
    schema = {3306.twitter as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$


_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2018-07-08 16:49:10,808 [main] INFO  (DfReplaceSchemaTask#begin():92) - +------------------------------------------+
2018-07-08 16:49:10,811 [main] INFO  (DfReplaceSchemaTask#begin():93) - |                                          |
2018-07-08 16:49:10,811 [main] INFO  (DfReplaceSchemaTask#begin():94) - |              ReplaceSchema               |
2018-07-08 16:49:10,816 [main] INFO  (DfReplaceSchemaTask#begin():102) - |                                          |
2018-07-08 16:49:10,816 [main] INFO  (DfReplaceSchemaTask#begin():103) - +------------------------------------------+
2018-07-08 16:49:10,817 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():401) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2018-07-08 16:49:11,981 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 16:49:11,981 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 16:49:11,981 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 16:49:11,982 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 16:49:11,991 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2018-07-08 16:49:12,548 [main] INFO  (DfReplaceSchemaTask#setupLazyConnection():144) - ...Being a lazy connection: Failed to connect: url=jdbc:mysql://localhost:3...
2018-07-08 16:49:12,559 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():229) - 
2018-07-08 16:49:12,559 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():230) - * * * * * * * * * * *
2018-07-08 16:49:12,559 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():231) - *                   *
2018-07-08 16:49:12,560 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():232) - * Initialize Schema *
2018-07-08 16:49:12,561 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():233) - *                   *
2018-07-08 16:49:12,561 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():234) - * * * * * * * * * * *
2018-07-08 16:49:12,561 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():236) - *Passed because it's a lazy connection
2018-07-08 16:49:12,562 [main] INFO  (DfCreateSchemaProcess#createSchema():266) - 
2018-07-08 16:49:12,562 [main] INFO  (DfCreateSchemaProcess#createSchema():267) - * * * * * * * * *
2018-07-08 16:49:12,562 [main] INFO  (DfCreateSchemaProcess#createSchema():268) - *               *
2018-07-08 16:49:12,562 [main] INFO  (DfCreateSchemaProcess#createSchema():269) - * Create Schema *
2018-07-08 16:49:12,563 [main] INFO  (DfCreateSchemaProcess#createSchema():270) - *               *
2018-07-08 16:49:12,563 [main] INFO  (DfCreateSchemaProcess#createSchema():271) - * * * * * * * * *
2018-07-08 16:49:12,566 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: replace-schema.sql
2018-07-08 16:49:12,569 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE FAVOLITE
(
 FAVOLITE_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'お気に入りID : お気に入りID',
 USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID
',
 TWEET_ID BIGINT NOT NULL COMMENT 'ツイートID : お気に入りしたツイートID
',
 DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
 REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : お気に入りした時間',
 UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時
',
 PRIMARY KEY (FAVOLITE_ID)
) COMMENT = 'お気に入り'
2018-07-08 16:49:12,570 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#lazyConnectIfNeeds():466) - ...Connecting by main user lazily
2018-07-08 16:49:12,570 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 16:49:12,571 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 16:49:12,643 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 16:49:12,643 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 16:49:12,643 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2018-07-08 16:49:12,655 [main] INFO  (DfSqlFileFireMan#fire():93) - {Create Schema}: success=0 failure=1 *break (in 1 files)
2018-07-08 16:49:12,659 [main] ERROR (DfDBFluteTaskUtil#logException():150) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute DBFlute Task 'ReplaceSchema'.

[Advice]
Check the exception messages and the stack traces.
* * * * * * * * * */
org.dbflute.exception.SQLFailureException: Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute the SQL!

[SQL File]
playsql/replace-schema.sql

[Executed SQL]
/* Create Tables */

CREATE TABLE FAVOLITE
(
 FAVOLITE_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'お気に入りID : お気に入りID',
 USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID
',
 TWEET_ID BIGINT NOT NULL COMMENT 'ツイートID : お気に入りしたツイートID
',
 DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
 REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : お気に入りした時間',
 UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時
',
 PRIMARY KEY (FAVOLITE_ID)
) COMMENT = 'お気に入り'

[SQLState]
42000

[ErrorCode]
1044

[SQLException]
org.dbflute.exception.DfJDBCException
Failed to connect: url=jdbc:mysql://localhost:3306/twitter user=raqwel

[NextException]
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException
Access denied for user 'raqwel'@'%' to database 'twitter'
* * * * * * * * * */
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerBase.throwSQLFailureException(DfSqlFileRunnerBase.java:587)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.execSQL(DfSqlFileRunnerExecute.java:80)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerBase.runTransaction(DfSqlFileRunnerBase.java:122)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileFireMan.processSqlFile(DfSqlFileFireMan.java:173)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileFireMan.fire(DfSqlFileFireMan.java:71)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.createSchema(DfCreateSchemaProcess.java:274)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.execute(DfCreateSchemaProcess.java:143)
	at org.dbflute.task.DfReplaceSchemaTask.createSchema(DfReplaceSchemaTask.java:301)
	at org.dbflute.task.DfReplaceSchemaTask.executeCoreProcess(DfReplaceSchemaTask.java:246)
	at org.dbflute.task.DfReplaceSchemaTask.processReplaceSchema(DfReplaceSchemaTask.java:232)
	at org.dbflute.task.DfReplaceSchemaTask.doExecute(DfReplaceSchemaTask.java:158)
	at org.dbflute.task.bs.DfAbstractTexenTask$1.callActualExecute(DfAbstractTexenTask.java:129)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTexenTask.execute(DfAbstractTexenTask.java:151)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
Caused by: org.dbflute.exception.DfJDBCException: Failed to connect: url=jdbc:mysql://localhost:3306/twitter user=raqwel
	at org.dbflute.helper.jdbc.connection.DfDataSourceHandler.createConnection(DfDataSourceHandler.java:170)
	at org.dbflute.helper.jdbc.connection.DfDataSourceHandler.processCachedConnection(DfDataSourceHandler.java:154)
	at org.dbflute.helper.jdbc.connection.DfDataSourceHandler.getConnection(DfDataSourceHandler.java:137)
	at org.dbflute.helper.jdbc.connection.DfFittingDataSource.getConnection(DfFittingDataSource.java:44)
	at org.dbflute.helper.jdbc.context.DfSchemaSource.getConnection(DfSchemaSource.java:82)
	at org.dbflute.task.DfReplaceSchemaTask.setupDataSource(DfReplaceSchemaTask.java:130)
	at org.dbflute.task.DfReplaceSchemaTask$2.callbackSetupDataSource(DfReplaceSchemaTask.java:325)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.setupDataSource(DfCreateSchemaProcess.java:133)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema.lazyConnectIfNeeds(DfCreateSchemaProcess.java:467)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.execSQL(DfSqlFileRunnerExecute.java:61)
	... 29 more
2018-07-08 16:49:12,771 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s971ms *Abort

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Create Schema}: success=0 failure=1 *break (in 1 files)
  x replace-schema.sql
   >> (failed: Look at the exception message)
    * * * * * *
    * Failure *
    * * * * * *
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2018-07-08 16:51:24,327 [main] INFO  (DfReplaceSchemaTask#begin():92) - +------------------------------------------+
2018-07-08 16:51:24,329 [main] INFO  (DfReplaceSchemaTask#begin():93) - |                                          |
2018-07-08 16:51:24,330 [main] INFO  (DfReplaceSchemaTask#begin():94) - |              ReplaceSchema               |
2018-07-08 16:51:24,335 [main] INFO  (DfReplaceSchemaTask#begin():102) - |                                          |
2018-07-08 16:51:24,335 [main] INFO  (DfReplaceSchemaTask#begin():103) - +------------------------------------------+
2018-07-08 16:51:24,336 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():401) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2018-07-08 16:51:25,225 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 16:51:25,226 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 16:51:25,226 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 16:51:25,226 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 16:51:25,235 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2018-07-08 16:51:25,791 [main] INFO  (DfReplaceSchemaTask#setupLazyConnection():144) - ...Being a lazy connection: Failed to connect: url=jdbc:mysql://localhost:3...
2018-07-08 16:51:25,802 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():229) - 
2018-07-08 16:51:25,802 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():230) - * * * * * * * * * * *
2018-07-08 16:51:25,802 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():231) - *                   *
2018-07-08 16:51:25,803 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():232) - * Initialize Schema *
2018-07-08 16:51:25,804 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():233) - *                   *
2018-07-08 16:51:25,804 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():234) - * * * * * * * * * * *
2018-07-08 16:51:25,804 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():236) - *Passed because it's a lazy connection
2018-07-08 16:51:25,805 [main] INFO  (DfCreateSchemaProcess#createSchema():266) - 
2018-07-08 16:51:25,805 [main] INFO  (DfCreateSchemaProcess#createSchema():267) - * * * * * * * * *
2018-07-08 16:51:25,805 [main] INFO  (DfCreateSchemaProcess#createSchema():268) - *               *
2018-07-08 16:51:25,805 [main] INFO  (DfCreateSchemaProcess#createSchema():269) - * Create Schema *
2018-07-08 16:51:25,806 [main] INFO  (DfCreateSchemaProcess#createSchema():270) - *               *
2018-07-08 16:51:25,806 [main] INFO  (DfCreateSchemaProcess#createSchema():271) - * * * * * * * * *
2018-07-08 16:51:25,810 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: replace-schema.sql
2018-07-08 16:51:25,812 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE FAVOLITE
(
 FAVOLITE_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'お気に入りID : お気に入りID',
 USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID',
 TWEET_ID BIGINT NOT NULL COMMENT 'ツイートID : お気に入りしたツイートID',
 DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
 REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : お気に入りした時間',
 UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
 PRIMARY KEY (FAVOLITE_ID)
) COMMENT = 'お気に入り'
2018-07-08 16:51:25,813 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#lazyConnectIfNeeds():466) - ...Connecting by main user lazily
2018-07-08 16:51:25,813 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 16:51:25,814 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 16:51:25,884 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 16:51:25,884 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 16:51:25,884 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2018-07-08 16:51:25,899 [main] INFO  (DfSqlFileFireMan#fire():93) - {Create Schema}: success=0 failure=1 *break (in 1 files)
2018-07-08 16:51:25,904 [main] ERROR (DfDBFluteTaskUtil#logException():150) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute DBFlute Task 'ReplaceSchema'.

[Advice]
Check the exception messages and the stack traces.
* * * * * * * * * */
org.dbflute.exception.SQLFailureException: Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute the SQL!

[SQL File]
playsql/replace-schema.sql

[Executed SQL]
/* Create Tables */

CREATE TABLE FAVOLITE
(
 FAVOLITE_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'お気に入りID : お気に入りID',
 USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID',
 TWEET_ID BIGINT NOT NULL COMMENT 'ツイートID : お気に入りしたツイートID',
 DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
 REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : お気に入りした時間',
 UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
 PRIMARY KEY (FAVOLITE_ID)
) COMMENT = 'お気に入り'

[SQLState]
42000

[ErrorCode]
1044

[SQLException]
org.dbflute.exception.DfJDBCException
Failed to connect: url=jdbc:mysql://localhost:3306/twitter user=raqwel

[NextException]
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException
Access denied for user 'raqwel'@'%' to database 'twitter'
* * * * * * * * * */
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerBase.throwSQLFailureException(DfSqlFileRunnerBase.java:587)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.execSQL(DfSqlFileRunnerExecute.java:80)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerBase.runTransaction(DfSqlFileRunnerBase.java:122)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileFireMan.processSqlFile(DfSqlFileFireMan.java:173)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileFireMan.fire(DfSqlFileFireMan.java:71)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.createSchema(DfCreateSchemaProcess.java:274)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.execute(DfCreateSchemaProcess.java:143)
	at org.dbflute.task.DfReplaceSchemaTask.createSchema(DfReplaceSchemaTask.java:301)
	at org.dbflute.task.DfReplaceSchemaTask.executeCoreProcess(DfReplaceSchemaTask.java:246)
	at org.dbflute.task.DfReplaceSchemaTask.processReplaceSchema(DfReplaceSchemaTask.java:232)
	at org.dbflute.task.DfReplaceSchemaTask.doExecute(DfReplaceSchemaTask.java:158)
	at org.dbflute.task.bs.DfAbstractTexenTask$1.callActualExecute(DfAbstractTexenTask.java:129)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTexenTask.execute(DfAbstractTexenTask.java:151)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
Caused by: org.dbflute.exception.DfJDBCException: Failed to connect: url=jdbc:mysql://localhost:3306/twitter user=raqwel
	at org.dbflute.helper.jdbc.connection.DfDataSourceHandler.createConnection(DfDataSourceHandler.java:170)
	at org.dbflute.helper.jdbc.connection.DfDataSourceHandler.processCachedConnection(DfDataSourceHandler.java:154)
	at org.dbflute.helper.jdbc.connection.DfDataSourceHandler.getConnection(DfDataSourceHandler.java:137)
	at org.dbflute.helper.jdbc.connection.DfFittingDataSource.getConnection(DfFittingDataSource.java:44)
	at org.dbflute.helper.jdbc.context.DfSchemaSource.getConnection(DfSchemaSource.java:82)
	at org.dbflute.task.DfReplaceSchemaTask.setupDataSource(DfReplaceSchemaTask.java:130)
	at org.dbflute.task.DfReplaceSchemaTask$2.callbackSetupDataSource(DfReplaceSchemaTask.java:325)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.setupDataSource(DfCreateSchemaProcess.java:133)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema.lazyConnectIfNeeds(DfCreateSchemaProcess.java:467)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.execSQL(DfSqlFileRunnerExecute.java:61)
	... 29 more
2018-07-08 16:51:25,995 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s679ms *Abort

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Create Schema}: success=0 failure=1 *break (in 1 files)
  x replace-schema.sql
   >> (failed: Look at the exception message)
    * * * * * *
    * Failure *
    * * * * * *
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2018-07-08 16:58:22,330 [main] INFO  (DfReplaceSchemaTask#begin():92) - +------------------------------------------+
2018-07-08 16:58:22,333 [main] INFO  (DfReplaceSchemaTask#begin():93) - |                                          |
2018-07-08 16:58:22,333 [main] INFO  (DfReplaceSchemaTask#begin():94) - |              ReplaceSchema               |
2018-07-08 16:58:22,338 [main] INFO  (DfReplaceSchemaTask#begin():102) - |                                          |
2018-07-08 16:58:22,339 [main] INFO  (DfReplaceSchemaTask#begin():103) - +------------------------------------------+
2018-07-08 16:58:22,340 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():401) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2018-07-08 16:58:23,104 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 16:58:23,104 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 16:58:23,104 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 16:58:23,105 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 16:58:23,113 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2018-07-08 16:58:23,686 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 8.0.11
2018-07-08 16:58:23,686 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2018-07-08 16:58:23,697 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():229) - 
2018-07-08 16:58:23,697 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():230) - * * * * * * * * * * *
2018-07-08 16:58:23,697 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():231) - *                   *
2018-07-08 16:58:23,698 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():232) - * Initialize Schema *
2018-07-08 16:58:23,698 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():233) - *                   *
2018-07-08 16:58:23,699 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():234) - * * * * * * * * * * *
2018-07-08 16:58:23,710 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2018-07-08 16:58:23,710 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {twitter.$$NoNameSchema$$ as main}
2018-07-08 16:58:23,711 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2018-07-08 16:58:23,770 [main] INFO  (DfCreateSchemaProcess#createSchema():266) - 
2018-07-08 16:58:23,770 [main] INFO  (DfCreateSchemaProcess#createSchema():267) - * * * * * * * * *
2018-07-08 16:58:23,770 [main] INFO  (DfCreateSchemaProcess#createSchema():268) - *               *
2018-07-08 16:58:23,771 [main] INFO  (DfCreateSchemaProcess#createSchema():269) - * Create Schema *
2018-07-08 16:58:23,771 [main] INFO  (DfCreateSchemaProcess#createSchema():270) - *               *
2018-07-08 16:58:23,771 [main] INFO  (DfCreateSchemaProcess#createSchema():271) - * * * * * * * * *
2018-07-08 16:58:23,775 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: replace-schema.sql
2018-07-08 16:58:23,779 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE FAVOLITE
(
 FAVOLITE_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'お気に入りID : お気に入りID',
 USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID',
 TWEET_ID BIGINT NOT NULL COMMENT 'ツイートID : お気に入りしたツイートID',
 DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
 REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : お気に入りした時間',
 UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
 PRIMARY KEY (FAVOLITE_ID)
) COMMENT = 'お気に入り'
2018-07-08 16:58:23,850 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE FOLLOW
(
 FOLLOW_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'フォローID : フォローID',
 FOLLOWEE_ID BIGINT NOT NULL COMMENT 'フォロイーID : フォロイーID
フォローする人の会員IDが入る',
 FOLLOWER_ID BIGINT NOT NULL COMMENT 'フォロワーID : フォロワーID
フォローされる人のIDが入る',
 DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
フォローされているかをT / Fで判定する',
 REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : フォローした日時',
 UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
 PRIMARY KEY (FOLLOW_ID),
 CONSTRAINT UQ_NEW_TABLE_XXX UNIQUE (FOLLOWEE_ID, FOLLOWER_ID)
) COMMENT = 'フォロー'
2018-07-08 16:58:23,869 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE REPLY
(
 REPLY_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'リプライID : リプライID',
 REPLYEE_ID BIGINT NOT NULL COMMENT 'リプライした会員ID : リプライした会員ID',
 REPLYER_ID BIGINT NOT NULL COMMENT 'リプライされた会員ID : リプライされた会員のID',
 REPLYEE_TWEET_ID BIGINT NOT NULL COMMENT 'リプライしたツイートID : リプライしたツイートのID',
 REPLYER_TWEET_ID BIGINT NOT NULL COMMENT 'リプライされたツイートID : リプライされたツイートのID',
 DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ 物理削除は怖いので論理削除を想定',
 REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : リプライした日時',
 UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
 PRIMARY KEY (REPLY_ID)
) COMMENT = 'リプライ'
2018-07-08 16:58:23,889 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE RETWEET
(
 RETWEET_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'リツイートID : リツイートID',
 USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID リツイートする人の会員IDが入る',
 TWEET_ID BIGINT NOT NULL COMMENT 'ツイートID : ツイートID リツイートされるツイートIDが格納される',
 DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ リツイートしたかどうかを見る 一回リツイートして辞めてもう一回リツイートをするときにTにして表示できるようにする',
 REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : 登録日時',
 UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
 PRIMARY KEY (RETWEET_ID),
 CONSTRAINT UQ_NEW_TABLE_XXX UNIQUE (USER_ID, TWEET_ID)
) COMMENT = 'リツイート'
2018-07-08 16:58:23,902 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
 TWEET_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'ツイートID : ツイートID',
 USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID',
 TWEET VARCHAR(140) NOT NULL COMMENT 'ツイート : ツイート 140文字制限されているので最大長140に設定',
 DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ 物理削除は怖いので論理削除を想定',
 REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : ツイートした時間',
 UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
 PRIMARY KEY (TWEET_ID)
) COMMENT = 'ツイート'
2018-07-08 16:58:23,913 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE USER
(
 USER_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員ID',
 USER_NAME VARCHAR(64) NOT NULL COMMENT '会員名称 : 会員名称。
このデータが名前として表示される。',
 MAIL_ADDRESS VARCHAR(256) NOT NULL UNIQUE COMMENT 'メールアドレス : メールアドレス',
 USER_STATUS BIGINT NOT NULL COMMENT '会員ステータス : 会員ステータス
最高3文字で表す予定
',
 BIRTH_DATE DATE COMMENT '誕生日 : 誕生日
時間までは考慮しない
特に入力する必要もないのでNULLを許容する',
 PROFILE_SENTENCE VARCHAR(300) NOT NULL COMMENT 'プロフィール文 : プロフィール文
長いのも困るので300文字',
 REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : 登録日時
ユーザがサービスに登録した日時を格納する',
 UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時
',
 PRIMARY KEY (USER_ID)
) ENGINE = InnoDB COMMENT = '会員 : 会員テーブル' DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci
2018-07-08 16:58:24,021 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE USER_STATUS
(
 USER_STATUS_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ステータスID : 会員ステータスID',
 USER_STATUS VARCHAR(50) NOT NULL COMMENT '会員ステータス : 会員ステータスの区分値
50文字あれば足りると予想',
 DESCRIPTION VARCHAR(200) NOT NULL COMMENT '説明 : 会員ステータスの説明',
 PRIMARY KEY (USER_STATUS_ID),
 CONSTRAINT UQ_NEW_TABLE_XXX UNIQUE (USER_STATUS, DESCRIPTION)
) COMMENT = '会員ステータス'
2018-07-08 16:58:24,030 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE FAVOLITE
 ADD CONSTRAINT FK_FAVOLITE_TWEET FOREIGN KEY (TWEET_ID)
 REFERENCES TWEET (TWEET_ID)
 ON UPDATE RESTRICT
 ON DELETE RESTRICT
2018-07-08 16:58:24,062 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
 ADD CONSTRAINT FK_REPLYEE_TWEET FOREIGN KEY (REPLYEE_TWEET_ID)
 REFERENCES TWEET (TWEET_ID)
 ON UPDATE RESTRICT
 ON DELETE RESTRICT
2018-07-08 16:58:24,082 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
 ADD CONSTRAINT FK_REPLYER_TWEET FOREIGN KEY (REPLYER_TWEET_ID)
 REFERENCES TWEET (TWEET_ID)
 ON UPDATE RESTRICT
 ON DELETE RESTRICT
2018-07-08 16:58:24,120 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE RETWEET
 ADD CONSTRAINT FK_RETWEET_TWEET FOREIGN KEY (TWEET_ID)
 REFERENCES TWEET (TWEET_ID)
 ON UPDATE RESTRICT
 ON DELETE RESTRICT
2018-07-08 16:58:24,144 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FAVOLITE
 ADD CONSTRAINT FK_FAVOLITE_USER FOREIGN KEY (USER_ID)
 REFERENCES USER (USER_ID)
 ON UPDATE RESTRICT
 ON DELETE RESTRICT
2018-07-08 16:58:24,168 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOW
 ADD CONSTRAINT FK_FOLLOWEE_USER FOREIGN KEY (FOLLOWEE_ID)
 REFERENCES USER (USER_ID)
 ON UPDATE RESTRICT
 ON DELETE RESTRICT
2018-07-08 16:58:24,189 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOW
 ADD CONSTRAINT FK_FOLLOWER_USER FOREIGN KEY (FOLLOWER_ID)
 REFERENCES USER (USER_ID)
 ON UPDATE RESTRICT
 ON DELETE RESTRICT
2018-07-08 16:58:24,214 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
 ADD CONSTRAINT FK_REPLYEE_USER FOREIGN KEY (REPLYEE_ID)
 REFERENCES USER (USER_ID)
 ON UPDATE RESTRICT
 ON DELETE RESTRICT
2018-07-08 16:58:24,245 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
 ADD CONSTRAINT FK_REPLYER_USER FOREIGN KEY (REPLYER_ID)
 REFERENCES USER (USER_ID)
 ON UPDATE RESTRICT
 ON DELETE RESTRICT
2018-07-08 16:58:24,272 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE RETWEET
 ADD CONSTRAINT FK_RETWEET_USER FOREIGN KEY (USER_ID)
 REFERENCES USER (USER_ID)
 ON UPDATE RESTRICT
 ON DELETE RESTRICT
2018-07-08 16:58:24,296 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
 ADD CONSTRAINT FK_TWEET_USER FOREIGN KEY (USER_ID)
 REFERENCES USER (USER_ID)
 ON UPDATE RESTRICT
 ON DELETE RESTRICT
2018-07-08 16:58:24,333 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE USER
 ADD CONSTRAINT FK_USER_USER_STATUS FOREIGN KEY (USER_STATUS)
 REFERENCES USER_STATUS (USER_STATUS_ID)
 ON UPDATE RESTRICT
 ON DELETE RESTRICT
2018-07-08 16:58:24,372 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=19 failure=0
2018-07-08 16:58:24,372 [main] INFO  (DfSqlFileFireMan#fire():93) - {Create Schema}: success=19 failure=0 (in 1 files)
2018-07-08 16:58:24,421 [main] INFO  (DfLoadDataProcess#execute():130) - 
2018-07-08 16:58:24,422 [main] INFO  (DfLoadDataProcess#execute():131) - * * * * * * * * * * *
2018-07-08 16:58:24,422 [main] INFO  (DfLoadDataProcess#execute():132) - *                   *
2018-07-08 16:58:24,422 [main] INFO  (DfLoadDataProcess#execute():133) - * Load Data         *
2018-07-08 16:58:24,422 [main] INFO  (DfLoadDataProcess#execute():134) - *                   *
2018-07-08 16:58:24,422 [main] INFO  (DfLoadDataProcess#execute():135) - * * * * * * * * * * *
2018-07-08 16:58:24,441 [main] INFO  (DfTakeFinallyProcess#takeFinally():237) - 
2018-07-08 16:58:24,441 [main] INFO  (DfTakeFinallyProcess#takeFinally():238) - * * * * * * * **
2018-07-08 16:58:24,441 [main] INFO  (DfTakeFinallyProcess#takeFinally():239) - *              *
2018-07-08 16:58:24,441 [main] INFO  (DfTakeFinallyProcess#takeFinally():240) - * Take Finally *
2018-07-08 16:58:24,441 [main] INFO  (DfTakeFinallyProcess#takeFinally():241) - *              *
2018-07-08 16:58:24,441 [main] INFO  (DfTakeFinallyProcess#takeFinally():242) - * * * * * * * **
2018-07-08 16:58:24,446 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: take-finally.sql
2018-07-08 16:58:24,447 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2018-07-08 16:58:24,448 [main] INFO  (DfSqlFileFireMan#fire():93) - {Take Finally}: success=0 failure=0 (in 1 files)
2018-07-08 16:58:24,449 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2018-07-08 16:58:24,458 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m02s140ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql (MySQL 8.0.11)
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Create Schema}: success=19 failure=0 (in 1 files)
  o replace-schema.sql

 {Load Data}: loaded-files=0
  - (no data file)

 {Take Finally}: success=0 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2018-07-08 17:00:04,124 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2018-07-08 17:00:04,126 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2018-07-08 17:00:04,127 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2018-07-08 17:00:04,127 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2018-07-08 17:00:04,127 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2018-07-08 17:00:04,147 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 17:00:04,147 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 17:00:04,147 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 17:00:04,148 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 17:00:04,182 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2018-07-08 17:00:04,183 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2018-07-08 17:00:04,183 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2018-07-08 17:00:04,193 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1535) -  -> no previous (first time)
2018-07-08 17:00:04,210 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2018-07-08 17:00:04,217 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2018-07-08 17:00:04,836 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 8.0.11
2018-07-08 17:00:04,837 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2018-07-08 17:00:04,838 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2018-07-08 17:00:04,840 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2018-07-08 17:00:04,840 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {twitter.$$NoNameSchema$$ as main}
2018-07-08 17:00:04,840 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2018-07-08 17:00:04,851 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'twitter' order by table_name asc
2018-07-08 17:00:04,856 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'twitter' order by table_name asc, column_name asc
2018-07-08 17:00:04,871 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'twitter' and DATA_TYPE = 'datetime'
2018-07-08 17:00:04,884 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2018-07-08 17:00:04,885 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2018-07-08 17:00:04,885 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2018-07-08 17:00:04,885 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.FAVOLITE(TABLE) // お気に入り
2018-07-08 17:00:04,957 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.FOLLOW(TABLE) // フォロー
2018-07-08 17:00:04,987 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.REPLY(TABLE) // リプライ
2018-07-08 17:00:05,008 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.RETWEET(TABLE) // リツイート
2018-07-08 17:00:05,033 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.TWEET(TABLE) // ツイート
2018-07-08 17:00:05,055 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.USER(TABLE) // 会員 : 会員テーブル
2018-07-08 17:00:05,074 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.USER_STATUS(TABLE) // 会員ステータス
2018-07-08 17:00:05,089 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2018-07-08 17:00:05,090 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2018-07-08 17:00:05,090 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 7
2018-07-08 17:00:05,090 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2018-07-08 17:00:05,090 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2018-07-08 17:00:05,091 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2018-07-08 17:00:05,094 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2018-07-08 17:00:05,094 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-demo.xml
2018-07-08 17:00:05,094 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2018-07-08 17:00:05,115 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2018-07-08 17:00:05,125 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 17:00:05,200 [main] INFO  (DfSchemaDiff#setupDocumentAuthorOfNextSchema():419) - *Cannot get git branch of next schema.
java.lang.IllegalArgumentException: The argument 'object' should not be null.
	at org.dbflute.optional.OptionalObject.of(OptionalObject.java:69)
	at org.dbflute.optional.OptionalThing.of(OptionalThing.java:47)
	at org.dbflute.logic.doc.supplement.author.DfDocumentAuthorLogic.getGitBranch(DfDocumentAuthorLogic.java:92)
	at org.dbflute.logic.jdbc.schemadiff.DfSchemaDiff.setupDocumentAuthorOfNextSchema(DfSchemaDiff.java:417)
	at org.dbflute.logic.jdbc.schemadiff.DfSchemaDiff.loadNextSchema(DfSchemaDiff.java:406)
	at org.dbflute.logic.jdbc.schemaxml.DfSchemaXmlSerializer.doLoadNextSchema(DfSchemaXmlSerializer.java:1551)
	at org.dbflute.logic.jdbc.schemaxml.DfSchemaXmlSerializer.loadNextSchema(DfSchemaXmlSerializer.java:1543)
	at org.dbflute.logic.jdbc.schemaxml.DfSchemaXmlSerializer.serialize(DfSchemaXmlSerializer.java:332)
	at org.apache.torque.task.TorqueJDBCTransformTask.doExecute(TorqueJDBCTransformTask.java:127)
	at org.dbflute.task.bs.DfAbstractTask$1.callActualExecute(DfAbstractTask.java:113)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTask.execute(DfAbstractTask.java:135)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.helper.SingleCheckExecutor.executeTargets(SingleCheckExecutor.java:38)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:416)
	at org.apache.tools.ant.taskdefs.CallTarget.execute(CallTarget.java:105)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
2018-07-08 17:00:05,228 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1555) -  -> different from previous (schema diff)
2018-07-08 17:00:05,230 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1557) - ...Serializing schema-diff:
2018-07-08 17:00:05,230 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1558) -   filePath = ./schema/project-history-demo.diffmap
2018-07-08 17:00:05,246 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2018-07-08 17:00:05,257 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s144ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql (MySQL 8.0.11)
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2018-07-08 17:00:05,812 [main] INFO  (TorqueDocumentationTask#begin():187) - +------------------------------------------+
2018-07-08 17:00:05,813 [main] INFO  (TorqueDocumentationTask#begin():188) - |                                          |
2018-07-08 17:00:05,813 [main] INFO  (TorqueDocumentationTask#begin():189) - |                   Doc                    |
2018-07-08 17:00:05,813 [main] INFO  (TorqueDocumentationTask#begin():197) - |                                          |
2018-07-08 17:00:05,814 [main] INFO  (TorqueDocumentationTask#begin():198) - +------------------------------------------+
2018-07-08 17:00:05,830 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 17:00:05,831 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 17:00:05,831 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 17:00:05,831 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 17:00:05,833 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():259) - 
2018-07-08 17:00:05,833 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():260) - * * * * * * * * * * *
2018-07-08 17:00:05,833 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():261) - *                   *
2018-07-08 17:00:05,834 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():262) - *    Schema HTML    *
2018-07-08 17:00:05,834 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():263) - *                   *
2018-07-08 17:00:05,834 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():264) - * * * * * * * * * * *
2018-07-08 17:00:05,924 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 17:00:05,988 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2018-07-08 17:00:06,173 [main] INFO  (Database#doEnableDocumentOutputDirectory():1224) - ...Setting up documentOutputDirectory: ./output/doc
2018-07-08 17:00:06,179 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2018-07-08 17:00:06,179 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2018-07-08 17:00:06,180 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2018-07-08 17:00:06,181 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2018-07-08 17:00:06,181 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2018-07-08 17:00:06,182 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2018-07-08 17:00:06,184 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2018-07-08 17:00:06,184 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2018-07-08 17:00:06,186 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2018-07-08 17:00:06,192 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():233) - ...Loading schema history
2018-07-08 17:00:06,208 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():237) -  -> found history: count=1
2018-07-08 17:00:06,421 [main] INFO  (DfRefreshMan#resolveProjectAutoDetect():105) - *Cannot auto-detect your refresh Eclipse proejct.
2018-07-08 17:00:06,423 [main] INFO  (DfRefreshResourceProcess#show():299) - /===========================================================================
2018-07-08 17:00:06,423 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Refreshing [$$AutoDetect$$] by http://localhost:8386/
2018-07-08 17:00:06,431 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Retrying refreshing by default secondary URL http://localhost:8387/
2018-07-08 17:00:06,433 [main] INFO  (DfRefreshResourceProcess#show():299) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to refresh the resources.

[Project List]
[$$AutoDetect$$]

[Request URL]
http://localhost:8386/

[IOExpception]
ConnectException
Connection refused (Connection refused)
* * * * * * * * * */
2018-07-08 17:00:06,433 [main] INFO  (DfRefreshResourceProcess#show():299) - ==========/
2018-07-08 17:00:06,436 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s635ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2018-07-08 17:00:07,989 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2018-07-08 17:00:07,991 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2018-07-08 17:00:07,991 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2018-07-08 17:00:07,992 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2018-07-08 17:00:07,992 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2018-07-08 17:00:08,010 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 17:00:08,010 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 17:00:08,010 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 17:00:08,010 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 17:00:08,022 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2018-07-08 17:00:08,022 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2018-07-08 17:00:08,045 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 17:00:08,097 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2018-07-08 17:00:08,280 [main] INFO  (Database#doEnableGenerateOutputDirectory():1192) - ...Setting up generateOutputDirectory: ../src/main/java
2018-07-08 17:00:08,282 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2018-07-08 17:00:08,282 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2018-07-08 17:00:08,283 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2018-07-08 17:00:08,284 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2018-07-08 17:00:08,284 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2018-07-08 17:00:08,285 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2018-07-08 17:00:08,287 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2018-07-08 17:00:08,287 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2018-07-08 17:00:08,288 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2018-07-08 17:00:08,298 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2018-07-08 17:00:08,298 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2018-07-08 17:00:08,298 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2018-07-08 17:00:08,299 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2018-07-08 17:00:08,299 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2018-07-08 17:00:08,299 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2018-07-08 17:00:08,299 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2018-07-08 17:00:08,300 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2018-07-08 17:00:08,300 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2018-07-08 17:00:08,300 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2018-07-08 17:00:08,341 [main] INFO  (Database#info():2785) - public void parseAllCommon() {
2018-07-08 17:00:08,343 [main] INFO  (Database#info():2785) -     parse('DBCurrent');
2018-07-08 17:00:08,349 [main] INFO  (Database#info():2785) -     parse('DBFluteConfig');
2018-07-08 17:00:08,361 [main] INFO  (Database#info():2785) -     parse('DBFluteInitializer');
2018-07-08 17:00:08,365 [main] INFO  (Database#info():2785) -     parse('DBMetaInstanceHandler');
2018-07-08 17:00:08,379 [main] INFO  (Database#info():2785) -     parse('EntityDefinedCommonColumn');
2018-07-08 17:00:08,384 [main] INFO  (Database#info():2785) -     parse('ImplementedBehaviorSelector');
2018-07-08 17:00:08,387 [main] INFO  (Database#info():2785) -     parse('ImplementedCommonColumnAutoSetupper');
2018-07-08 17:00:08,393 [main] INFO  (Database#info():2785) -     parse('ImplementedInvokerAssistant');
2018-07-08 17:00:08,399 [main] INFO  (Database#info():2785) -     parse('ImplementedSqlClauseCreator');
2018-07-08 17:00:08,402 [main] INFO  (Database#info():2785) - }
2018-07-08 17:00:08,403 [main] INFO  (Database#info():2785) - public void parseContainerConfig() {
2018-07-08 17:00:08,404 [main] INFO  (Database#info():2785) -     parse('demo/dbflute/allcommon/DBFluteBeansJavaConfig.java')
2018-07-08 17:00:08,413 [main] INFO  (Database#info():2785) - }
2018-07-08 17:00:08,419 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2018-07-08 17:00:08,439 [main] INFO  (DfOldClassHandler#info():1045) - }
2018-07-08 17:00:08,439 [main] INFO  (Database#info():2785) - public void parseTableClass() {
2018-07-08 17:00:08,440 [main] INFO  (Database#info():2785) -     parse('FAVOLITE');
2018-07-08 17:00:08,651 [main] INFO  (Database#info():2785) -     parse('FOLLOW');
2018-07-08 17:00:08,799 [main] INFO  (Database#info():2785) -     parse('REPLY');
2018-07-08 17:00:08,973 [main] INFO  (Database#info():2785) -     parse('RETWEET');
2018-07-08 17:00:09,101 [main] INFO  (Database#info():2785) -     parse('TWEET');
2018-07-08 17:00:09,266 [main] INFO  (Database#info():2785) -     parse('USER');
2018-07-08 17:00:09,434 [main] INFO  (Database#info():2785) -     parse('USER_STATUS');
2018-07-08 17:00:09,504 [main] INFO  (Database#info():2785) - }
2018-07-08 17:00:09,504 [main] INFO  (Database#info():2785) -  
2018-07-08 17:00:09,522 [main] INFO  (DfRefreshMan#resolveProjectAutoDetect():105) - *Cannot auto-detect your refresh Eclipse proejct.
2018-07-08 17:00:09,524 [main] INFO  (DfRefreshResourceProcess#show():299) - /===========================================================================
2018-07-08 17:00:09,524 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Refreshing [$$AutoDetect$$] by http://localhost:8386/
2018-07-08 17:00:09,527 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Retrying refreshing by default secondary URL http://localhost:8387/
2018-07-08 17:00:09,528 [main] INFO  (DfRefreshResourceProcess#show():299) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to refresh the resources.

[Project List]
[$$AutoDetect$$]

[Request URL]
http://localhost:8386/

[IOExpception]
ConnectException
Connection refused (Connection refused)
* * * * * * * * * */
2018-07-08 17:00:09,528 [main] INFO  (DfRefreshResourceProcess#show():299) - ==========/
2018-07-08 17:00:09,532 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s559ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2018-07-08 17:00:10,156 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2018-07-08 17:00:10,158 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2018-07-08 17:00:10,158 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2018-07-08 17:00:10,158 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2018-07-08 17:00:10,158 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2018-07-08 17:00:10,171 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 17:00:10,171 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 17:00:10,171 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 17:00:10,171 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 17:00:10,189 [main] INFO  (DfSqlFileFireMan#fire():93) - {Fired SQL}: success=0 failure=0 (in 0 files)
2018-07-08 17:00:10,196 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s045ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2018-07-08 17:00:10,703 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2018-07-08 17:00:10,704 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2018-07-08 17:00:10,704 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2018-07-08 17:00:10,704 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2018-07-08 17:00:10,704 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2018-07-08 17:00:10,716 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 17:00:10,717 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 17:00:10,717 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 17:00:10,717 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 17:00:10,728 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2018-07-08 17:00:10,728 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2018-07-08 17:00:10,733 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 17:00:10,797 [main] INFO  (DfSqlFileFireMan#fire():93) - {Fired SQL}: success=0 failure=0 (in 0 files)
2018-07-08 17:00:10,818 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2018-07-08 17:00:10,818 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2018-07-08 17:00:10,818 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2018-07-08 17:00:10,818 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2018-07-08 17:00:10,818 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2018-07-08 17:00:10,819 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2018-07-08 17:00:10,819 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2018-07-08 17:00:10,819 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2018-07-08 17:00:10,820 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2018-07-08 17:00:10,946 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1208) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2018-07-08 17:00:10,949 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2018-07-08 17:00:10,955 [main] INFO  (DfOldClassHandler#info():1045) - }
2018-07-08 17:00:10,955 [main] INFO  (Database#info():2785) - public void parseCustomizeEntity() {
2018-07-08 17:00:10,956 [main] INFO  (Database#info():2785) - }
2018-07-08 17:00:10,962 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2018-07-08 17:00:10,964 [main] INFO  (DfRefreshMan#resolveProjectAutoDetect():105) - *Cannot auto-detect your refresh Eclipse proejct.
2018-07-08 17:00:10,965 [main] INFO  (DfRefreshResourceProcess#show():299) - /===========================================================================
2018-07-08 17:00:10,965 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Refreshing [$$AutoDetect$$] by http://localhost:8386/
2018-07-08 17:00:10,966 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Retrying refreshing by default secondary URL http://localhost:8387/
2018-07-08 17:00:10,967 [main] INFO  (DfRefreshResourceProcess#show():299) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to refresh the resources.

[Project List]
[$$AutoDetect$$]

[Request URL]
http://localhost:8386/

[IOExpception]
ConnectException
Connection refused (Connection refused)
* * * * * * * * * */
2018-07-08 17:00:11,024 [main] INFO  (DfRefreshResourceProcess#show():299) - ==========/
2018-07-08 17:00:11,027 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s332ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2018-07-08 17:16:55,924 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2018-07-08 17:16:55,926 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2018-07-08 17:16:55,927 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2018-07-08 17:16:55,927 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2018-07-08 17:16:55,927 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2018-07-08 17:16:55,946 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 17:16:55,947 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 17:16:55,947 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 17:16:55,947 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 17:16:55,983 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2018-07-08 17:16:55,983 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2018-07-08 17:16:55,983 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2018-07-08 17:16:55,993 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 17:16:56,086 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2018-07-08 17:16:56,096 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2018-07-08 17:16:56,771 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 8.0.11
2018-07-08 17:16:56,772 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2018-07-08 17:16:56,773 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2018-07-08 17:16:56,774 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2018-07-08 17:16:56,775 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {twitter.$$NoNameSchema$$ as main}
2018-07-08 17:16:56,775 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2018-07-08 17:16:56,788 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'twitter' order by table_name asc
2018-07-08 17:16:56,795 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'twitter' order by table_name asc, column_name asc
2018-07-08 17:16:56,810 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'twitter' and DATA_TYPE = 'datetime'
2018-07-08 17:16:56,820 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2018-07-08 17:16:56,820 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2018-07-08 17:16:56,820 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2018-07-08 17:16:56,821 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.FAVOLITE(TABLE) // お気に入り
2018-07-08 17:16:56,863 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.FOLLOW(TABLE) // フォロー
2018-07-08 17:16:56,888 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.REPLY(TABLE) // リプライ
2018-07-08 17:16:56,911 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.RETWEET(TABLE) // リツイート
2018-07-08 17:16:56,929 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.TWEET(TABLE) // ツイート
2018-07-08 17:16:56,946 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.USER(TABLE) // 会員 : 会員テーブル
2018-07-08 17:16:56,963 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.USER_STATUS(TABLE) // 会員ステータス
2018-07-08 17:16:56,979 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2018-07-08 17:16:56,979 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2018-07-08 17:16:56,979 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 7
2018-07-08 17:16:56,979 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2018-07-08 17:16:56,979 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2018-07-08 17:16:56,980 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2018-07-08 17:16:56,984 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2018-07-08 17:16:56,985 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-demo.xml
2018-07-08 17:16:56,986 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2018-07-08 17:16:57,014 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2018-07-08 17:16:57,016 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 17:16:57,075 [main] INFO  (DfSchemaDiff#setupDocumentAuthorOfNextSchema():419) - *Cannot get git branch of next schema.
java.lang.IllegalArgumentException: The argument 'object' should not be null.
	at org.dbflute.optional.OptionalObject.of(OptionalObject.java:69)
	at org.dbflute.optional.OptionalThing.of(OptionalThing.java:47)
	at org.dbflute.logic.doc.supplement.author.DfDocumentAuthorLogic.getGitBranch(DfDocumentAuthorLogic.java:92)
	at org.dbflute.logic.jdbc.schemadiff.DfSchemaDiff.setupDocumentAuthorOfNextSchema(DfSchemaDiff.java:417)
	at org.dbflute.logic.jdbc.schemadiff.DfSchemaDiff.loadNextSchema(DfSchemaDiff.java:406)
	at org.dbflute.logic.jdbc.schemaxml.DfSchemaXmlSerializer.doLoadNextSchema(DfSchemaXmlSerializer.java:1551)
	at org.dbflute.logic.jdbc.schemaxml.DfSchemaXmlSerializer.loadNextSchema(DfSchemaXmlSerializer.java:1543)
	at org.dbflute.logic.jdbc.schemaxml.DfSchemaXmlSerializer.serialize(DfSchemaXmlSerializer.java:332)
	at org.apache.torque.task.TorqueJDBCTransformTask.doExecute(TorqueJDBCTransformTask.java:127)
	at org.dbflute.task.bs.DfAbstractTask$1.callActualExecute(DfAbstractTask.java:113)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTask.execute(DfAbstractTask.java:135)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.helper.SingleCheckExecutor.executeTargets(SingleCheckExecutor.java:38)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:416)
	at org.apache.tools.ant.taskdefs.CallTarget.execute(CallTarget.java:105)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
2018-07-08 17:16:57,117 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1565) -  -> same as previous (schema diff)
2018-07-08 17:16:57,118 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2018-07-08 17:16:57,128 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s216ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql (MySQL 8.0.11)
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2018-07-08 17:16:57,670 [main] INFO  (TorqueDocumentationTask#begin():187) - +------------------------------------------+
2018-07-08 17:16:57,672 [main] INFO  (TorqueDocumentationTask#begin():188) - |                                          |
2018-07-08 17:16:57,672 [main] INFO  (TorqueDocumentationTask#begin():189) - |                   Doc                    |
2018-07-08 17:16:57,672 [main] INFO  (TorqueDocumentationTask#begin():197) - |                                          |
2018-07-08 17:16:57,672 [main] INFO  (TorqueDocumentationTask#begin():198) - +------------------------------------------+
2018-07-08 17:16:57,686 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 17:16:57,687 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 17:16:57,687 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 17:16:57,687 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 17:16:57,688 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():259) - 
2018-07-08 17:16:57,688 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():260) - * * * * * * * * * * *
2018-07-08 17:16:57,688 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():261) - *                   *
2018-07-08 17:16:57,688 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():262) - *    Schema HTML    *
2018-07-08 17:16:57,688 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():263) - *                   *
2018-07-08 17:16:57,689 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():264) - * * * * * * * * * * *
2018-07-08 17:16:57,774 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 17:16:57,834 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2018-07-08 17:16:58,014 [main] INFO  (Database#doEnableDocumentOutputDirectory():1224) - ...Setting up documentOutputDirectory: ./output/doc
2018-07-08 17:16:58,023 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2018-07-08 17:16:58,024 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2018-07-08 17:16:58,025 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2018-07-08 17:16:58,027 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2018-07-08 17:16:58,027 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2018-07-08 17:16:58,028 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2018-07-08 17:16:58,029 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2018-07-08 17:16:58,030 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2018-07-08 17:16:58,031 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2018-07-08 17:16:58,037 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():233) - ...Loading schema history
2018-07-08 17:16:58,056 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():237) -  -> found history: count=1
2018-07-08 17:16:58,246 [main] INFO  (DfRefreshMan#resolveProjectAutoDetect():105) - *Cannot auto-detect your refresh Eclipse proejct.
2018-07-08 17:16:58,248 [main] INFO  (DfRefreshResourceProcess#show():299) - /===========================================================================
2018-07-08 17:16:58,248 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Refreshing [$$AutoDetect$$] by http://localhost:8386/
2018-07-08 17:16:58,253 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Retrying refreshing by default secondary URL http://localhost:8387/
2018-07-08 17:16:58,255 [main] INFO  (DfRefreshResourceProcess#show():299) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to refresh the resources.

[Project List]
[$$AutoDetect$$]

[Request URL]
http://localhost:8386/

[IOExpception]
ConnectException
Connection refused (Connection refused)
* * * * * * * * * */
2018-07-08 17:16:58,255 [main] INFO  (DfRefreshResourceProcess#show():299) - ==========/
2018-07-08 17:16:58,259 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s598ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2018-07-08 17:16:59,710 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2018-07-08 17:16:59,712 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2018-07-08 17:16:59,713 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2018-07-08 17:16:59,713 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2018-07-08 17:16:59,713 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2018-07-08 17:16:59,727 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 17:16:59,727 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 17:16:59,727 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 17:16:59,727 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 17:16:59,741 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2018-07-08 17:16:59,741 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2018-07-08 17:16:59,765 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 17:16:59,825 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2018-07-08 17:17:00,019 [main] INFO  (Database#doEnableGenerateOutputDirectory():1192) - ...Setting up generateOutputDirectory: ../src/main/java
2018-07-08 17:17:00,022 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2018-07-08 17:17:00,022 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2018-07-08 17:17:00,023 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2018-07-08 17:17:00,024 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2018-07-08 17:17:00,025 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2018-07-08 17:17:00,026 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2018-07-08 17:17:00,028 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2018-07-08 17:17:00,028 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2018-07-08 17:17:00,030 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2018-07-08 17:17:00,043 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2018-07-08 17:17:00,043 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2018-07-08 17:17:00,043 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2018-07-08 17:17:00,043 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2018-07-08 17:17:00,044 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2018-07-08 17:17:00,044 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2018-07-08 17:17:00,044 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2018-07-08 17:17:00,044 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2018-07-08 17:17:00,044 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2018-07-08 17:17:00,044 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2018-07-08 17:17:00,057 [main] INFO  (Database#info():2785) - public void parseAllCommon() {
2018-07-08 17:17:00,059 [main] INFO  (Database#info():2785) -     parse('DBCurrent');
2018-07-08 17:17:00,067 [main] INFO  (Database#info():2785) -     parse('DBFluteConfig');
2018-07-08 17:17:00,083 [main] INFO  (Database#info():2785) -     parse('DBFluteInitializer');
2018-07-08 17:17:00,088 [main] INFO  (Database#info():2785) -     parse('DBMetaInstanceHandler');
2018-07-08 17:17:00,129 [main] INFO  (Database#info():2785) -     parse('EntityDefinedCommonColumn');
2018-07-08 17:17:00,133 [main] INFO  (Database#info():2785) -     parse('ImplementedBehaviorSelector');
2018-07-08 17:17:00,140 [main] INFO  (Database#info():2785) -     parse('ImplementedCommonColumnAutoSetupper');
2018-07-08 17:17:00,144 [main] INFO  (Database#info():2785) -     parse('ImplementedInvokerAssistant');
2018-07-08 17:17:00,149 [main] INFO  (Database#info():2785) -     parse('ImplementedSqlClauseCreator');
2018-07-08 17:17:00,152 [main] INFO  (Database#info():2785) - }
2018-07-08 17:17:00,152 [main] INFO  (Database#info():2785) - public void parseContainerConfig() {
2018-07-08 17:17:00,153 [main] INFO  (Database#info():2785) -     parse('demo/dbflute/allcommon/DBFluteBeansJavaConfig.java')
2018-07-08 17:17:00,161 [main] INFO  (Database#info():2785) - }
2018-07-08 17:17:00,166 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2018-07-08 17:17:00,197 [main] INFO  (DfOldClassHandler#info():1045) - }
2018-07-08 17:17:00,198 [main] INFO  (Database#info():2785) - public void parseTableClass() {
2018-07-08 17:17:00,199 [main] INFO  (Database#info():2785) -     parse('FAVOLITE');
2018-07-08 17:17:00,411 [main] INFO  (Database#info():2785) -     parse('FOLLOW');
2018-07-08 17:17:00,559 [main] INFO  (Database#info():2785) -     parse('REPLY');
2018-07-08 17:17:00,706 [main] INFO  (Database#info():2785) -     parse('RETWEET');
2018-07-08 17:17:00,815 [main] INFO  (Database#info():2785) -     parse('TWEET');
2018-07-08 17:17:00,972 [main] INFO  (Database#info():2785) -     parse('USER');
2018-07-08 17:17:01,139 [main] INFO  (Database#info():2785) -     parse('USER_STATUS');
2018-07-08 17:17:01,200 [main] INFO  (Database#info():2785) - }
2018-07-08 17:17:01,200 [main] INFO  (Database#info():2785) -  
2018-07-08 17:17:01,209 [main] INFO  (DfRefreshMan#resolveProjectAutoDetect():105) - *Cannot auto-detect your refresh Eclipse proejct.
2018-07-08 17:17:01,210 [main] INFO  (DfRefreshResourceProcess#show():299) - /===========================================================================
2018-07-08 17:17:01,210 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Refreshing [$$AutoDetect$$] by http://localhost:8386/
2018-07-08 17:17:01,211 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Retrying refreshing by default secondary URL http://localhost:8387/
2018-07-08 17:17:01,212 [main] INFO  (DfRefreshResourceProcess#show():299) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to refresh the resources.

[Project List]
[$$AutoDetect$$]

[Request URL]
http://localhost:8386/

[IOExpception]
ConnectException
Connection refused (Connection refused)
* * * * * * * * * */
2018-07-08 17:17:01,213 [main] INFO  (DfRefreshResourceProcess#show():299) - ==========/
2018-07-08 17:17:01,216 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s520ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2018-07-08 17:17:01,824 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2018-07-08 17:17:01,825 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2018-07-08 17:17:01,826 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2018-07-08 17:17:01,826 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2018-07-08 17:17:01,826 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2018-07-08 17:17:01,839 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 17:17:01,839 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 17:17:01,839 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 17:17:01,839 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 17:17:01,857 [main] INFO  (DfSqlFileFireMan#fire():93) - {Fired SQL}: success=0 failure=0 (in 0 files)
2018-07-08 17:17:01,864 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s047ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2018-07-08 17:17:02,398 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2018-07-08 17:17:02,400 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2018-07-08 17:17:02,400 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2018-07-08 17:17:02,400 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2018-07-08 17:17:02,400 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2018-07-08 17:17:02,413 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 17:17:02,413 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 17:17:02,413 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 17:17:02,413 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 17:17:02,422 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2018-07-08 17:17:02,422 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2018-07-08 17:17:02,426 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 17:17:02,492 [main] INFO  (DfSqlFileFireMan#fire():93) - {Fired SQL}: success=0 failure=0 (in 0 files)
2018-07-08 17:17:02,514 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2018-07-08 17:17:02,514 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2018-07-08 17:17:02,514 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2018-07-08 17:17:02,514 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2018-07-08 17:17:02,515 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2018-07-08 17:17:02,515 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2018-07-08 17:17:02,515 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2018-07-08 17:17:02,515 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2018-07-08 17:17:02,517 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2018-07-08 17:17:02,647 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1208) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2018-07-08 17:17:02,649 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2018-07-08 17:17:02,656 [main] INFO  (DfOldClassHandler#info():1045) - }
2018-07-08 17:17:02,656 [main] INFO  (Database#info():2785) - public void parseCustomizeEntity() {
2018-07-08 17:17:02,657 [main] INFO  (Database#info():2785) - }
2018-07-08 17:17:02,663 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2018-07-08 17:17:02,665 [main] INFO  (DfRefreshMan#resolveProjectAutoDetect():105) - *Cannot auto-detect your refresh Eclipse proejct.
2018-07-08 17:17:02,666 [main] INFO  (DfRefreshResourceProcess#show():299) - /===========================================================================
2018-07-08 17:17:02,667 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Refreshing [$$AutoDetect$$] by http://localhost:8386/
2018-07-08 17:17:02,668 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Retrying refreshing by default secondary URL http://localhost:8387/
2018-07-08 17:17:02,669 [main] INFO  (DfRefreshResourceProcess#show():299) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to refresh the resources.

[Project List]
[$$AutoDetect$$]

[Request URL]
http://localhost:8386/

[IOExpception]
ConnectException
Connection refused (Connection refused)
* * * * * * * * * */
2018-07-08 17:17:02,701 [main] INFO  (DfRefreshResourceProcess#show():299) - ==========/
2018-07-08 17:17:02,705 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s315ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2018-07-08 17:20:18,262 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2018-07-08 17:20:18,266 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2018-07-08 17:20:18,266 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2018-07-08 17:20:18,267 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2018-07-08 17:20:18,267 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2018-07-08 17:20:18,285 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 17:20:18,285 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 17:20:18,286 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 17:20:18,286 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 17:20:18,314 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2018-07-08 17:20:18,314 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2018-07-08 17:20:18,314 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2018-07-08 17:20:18,323 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 17:20:18,407 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2018-07-08 17:20:18,416 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2018-07-08 17:20:19,042 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 8.0.11
2018-07-08 17:20:19,043 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2018-07-08 17:20:19,044 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2018-07-08 17:20:19,045 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2018-07-08 17:20:19,046 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {twitter.$$NoNameSchema$$ as main}
2018-07-08 17:20:19,046 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2018-07-08 17:20:19,056 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'twitter' order by table_name asc
2018-07-08 17:20:19,061 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'twitter' order by table_name asc, column_name asc
2018-07-08 17:20:19,074 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'twitter' and DATA_TYPE = 'datetime'
2018-07-08 17:20:19,083 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2018-07-08 17:20:19,083 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2018-07-08 17:20:19,083 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2018-07-08 17:20:19,084 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.FAVOLITE(TABLE) // お気に入り
2018-07-08 17:20:19,122 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.FOLLOW(TABLE) // フォロー
2018-07-08 17:20:19,141 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.REPLY(TABLE) // リプライ
2018-07-08 17:20:19,165 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.RETWEET(TABLE) // リツイート
2018-07-08 17:20:19,180 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.TWEET(TABLE) // ツイート
2018-07-08 17:20:19,193 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.USER(TABLE) // 会員 : 会員テーブル
2018-07-08 17:20:19,207 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.USER_STATUS(TABLE) // 会員ステータス
2018-07-08 17:20:19,219 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2018-07-08 17:20:19,219 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2018-07-08 17:20:19,220 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 7
2018-07-08 17:20:19,220 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2018-07-08 17:20:19,220 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2018-07-08 17:20:19,221 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2018-07-08 17:20:19,223 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2018-07-08 17:20:19,223 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-demo.xml
2018-07-08 17:20:19,223 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2018-07-08 17:20:19,241 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2018-07-08 17:20:19,242 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 17:20:19,287 [main] INFO  (DfSchemaDiff#setupDocumentAuthorOfNextSchema():419) - *Cannot get git branch of next schema.
java.lang.IllegalArgumentException: The argument 'object' should not be null.
	at org.dbflute.optional.OptionalObject.of(OptionalObject.java:69)
	at org.dbflute.optional.OptionalThing.of(OptionalThing.java:47)
	at org.dbflute.logic.doc.supplement.author.DfDocumentAuthorLogic.getGitBranch(DfDocumentAuthorLogic.java:92)
	at org.dbflute.logic.jdbc.schemadiff.DfSchemaDiff.setupDocumentAuthorOfNextSchema(DfSchemaDiff.java:417)
	at org.dbflute.logic.jdbc.schemadiff.DfSchemaDiff.loadNextSchema(DfSchemaDiff.java:406)
	at org.dbflute.logic.jdbc.schemaxml.DfSchemaXmlSerializer.doLoadNextSchema(DfSchemaXmlSerializer.java:1551)
	at org.dbflute.logic.jdbc.schemaxml.DfSchemaXmlSerializer.loadNextSchema(DfSchemaXmlSerializer.java:1543)
	at org.dbflute.logic.jdbc.schemaxml.DfSchemaXmlSerializer.serialize(DfSchemaXmlSerializer.java:332)
	at org.apache.torque.task.TorqueJDBCTransformTask.doExecute(TorqueJDBCTransformTask.java:127)
	at org.dbflute.task.bs.DfAbstractTask$1.callActualExecute(DfAbstractTask.java:113)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTask.execute(DfAbstractTask.java:135)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.helper.SingleCheckExecutor.executeTargets(SingleCheckExecutor.java:38)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:416)
	at org.apache.tools.ant.taskdefs.CallTarget.execute(CallTarget.java:105)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
2018-07-08 17:20:19,367 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1565) -  -> same as previous (schema diff)
2018-07-08 17:20:19,367 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2018-07-08 17:20:19,375 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s125ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql (MySQL 8.0.11)
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2018-07-08 17:20:19,889 [main] INFO  (TorqueDocumentationTask#begin():187) - +------------------------------------------+
2018-07-08 17:20:19,891 [main] INFO  (TorqueDocumentationTask#begin():188) - |                                          |
2018-07-08 17:20:19,891 [main] INFO  (TorqueDocumentationTask#begin():189) - |                   Doc                    |
2018-07-08 17:20:19,891 [main] INFO  (TorqueDocumentationTask#begin():197) - |                                          |
2018-07-08 17:20:19,891 [main] INFO  (TorqueDocumentationTask#begin():198) - +------------------------------------------+
2018-07-08 17:20:19,907 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 17:20:19,907 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 17:20:19,907 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 17:20:19,907 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 17:20:19,908 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():259) - 
2018-07-08 17:20:19,908 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():260) - * * * * * * * * * * *
2018-07-08 17:20:19,909 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():261) - *                   *
2018-07-08 17:20:19,909 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():262) - *    Schema HTML    *
2018-07-08 17:20:19,909 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():263) - *                   *
2018-07-08 17:20:19,909 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():264) - * * * * * * * * * * *
2018-07-08 17:20:19,986 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 17:20:20,047 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2018-07-08 17:20:20,200 [main] INFO  (Database#doEnableDocumentOutputDirectory():1224) - ...Setting up documentOutputDirectory: ./output/doc
2018-07-08 17:20:20,207 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2018-07-08 17:20:20,207 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2018-07-08 17:20:20,208 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2018-07-08 17:20:20,209 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2018-07-08 17:20:20,209 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2018-07-08 17:20:20,210 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2018-07-08 17:20:20,211 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2018-07-08 17:20:20,211 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2018-07-08 17:20:20,213 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2018-07-08 17:20:20,220 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():233) - ...Loading schema history
2018-07-08 17:20:20,238 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():237) -  -> found history: count=1
2018-07-08 17:20:20,431 [main] INFO  (DfRefreshMan#resolveProjectAutoDetect():105) - *Cannot auto-detect your refresh Eclipse proejct.
2018-07-08 17:20:20,432 [main] INFO  (DfRefreshResourceProcess#show():299) - /===========================================================================
2018-07-08 17:20:20,432 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Refreshing [$$AutoDetect$$] by http://localhost:8386/
2018-07-08 17:20:20,437 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Retrying refreshing by default secondary URL http://localhost:8387/
2018-07-08 17:20:20,439 [main] INFO  (DfRefreshResourceProcess#show():299) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to refresh the resources.

[Project List]
[$$AutoDetect$$]

[Request URL]
http://localhost:8386/

[IOExpception]
ConnectException
Connection refused (Connection refused)
* * * * * * * * * */
2018-07-08 17:20:20,439 [main] INFO  (DfRefreshResourceProcess#show():299) - ==========/
2018-07-08 17:20:20,442 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s562ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2018-07-08 17:20:21,937 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2018-07-08 17:20:21,938 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2018-07-08 17:20:21,938 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2018-07-08 17:20:21,939 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2018-07-08 17:20:21,939 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2018-07-08 17:20:21,952 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 17:20:21,953 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 17:20:21,953 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 17:20:21,953 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 17:20:21,965 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2018-07-08 17:20:21,965 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2018-07-08 17:20:22,004 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 17:20:22,083 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2018-07-08 17:20:22,261 [main] INFO  (Database#doEnableGenerateOutputDirectory():1192) - ...Setting up generateOutputDirectory: ../src/main/java
2018-07-08 17:20:22,264 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2018-07-08 17:20:22,265 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2018-07-08 17:20:22,265 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2018-07-08 17:20:22,267 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2018-07-08 17:20:22,267 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2018-07-08 17:20:22,268 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2018-07-08 17:20:22,269 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2018-07-08 17:20:22,269 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2018-07-08 17:20:22,287 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2018-07-08 17:20:22,300 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2018-07-08 17:20:22,300 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2018-07-08 17:20:22,300 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2018-07-08 17:20:22,300 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2018-07-08 17:20:22,301 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2018-07-08 17:20:22,301 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2018-07-08 17:20:22,301 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2018-07-08 17:20:22,301 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2018-07-08 17:20:22,301 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2018-07-08 17:20:22,301 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2018-07-08 17:20:22,312 [main] INFO  (Database#info():2785) - public void parseAllCommon() {
2018-07-08 17:20:22,313 [main] INFO  (Database#info():2785) -     parse('DBCurrent');
2018-07-08 17:20:22,317 [main] INFO  (Database#info():2785) -     parse('DBFluteConfig');
2018-07-08 17:20:22,331 [main] INFO  (Database#info():2785) -     parse('DBFluteInitializer');
2018-07-08 17:20:22,335 [main] INFO  (Database#info():2785) -     parse('DBMetaInstanceHandler');
2018-07-08 17:20:22,350 [main] INFO  (Database#info():2785) -     parse('EntityDefinedCommonColumn');
2018-07-08 17:20:22,353 [main] INFO  (Database#info():2785) -     parse('ImplementedBehaviorSelector');
2018-07-08 17:20:22,359 [main] INFO  (Database#info():2785) -     parse('ImplementedCommonColumnAutoSetupper');
2018-07-08 17:20:22,363 [main] INFO  (Database#info():2785) -     parse('ImplementedInvokerAssistant');
2018-07-08 17:20:22,372 [main] INFO  (Database#info():2785) -     parse('ImplementedSqlClauseCreator');
2018-07-08 17:20:22,376 [main] INFO  (Database#info():2785) - }
2018-07-08 17:20:22,376 [main] INFO  (Database#info():2785) - public void parseContainerConfig() {
2018-07-08 17:20:22,377 [main] INFO  (Database#info():2785) -     parse('demo/dbflute/allcommon/DBFluteBeansJavaConfig.java')
2018-07-08 17:20:22,387 [main] INFO  (Database#info():2785) - }
2018-07-08 17:20:22,392 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2018-07-08 17:20:22,412 [main] INFO  (DfOldClassHandler#info():1045) - }
2018-07-08 17:20:22,412 [main] INFO  (Database#info():2785) - public void parseTableClass() {
2018-07-08 17:20:22,413 [main] INFO  (Database#info():2785) -     parse('FAVOLITE');
2018-07-08 17:20:22,617 [main] INFO  (Database#info():2785) -     parse('FOLLOW');
2018-07-08 17:20:22,749 [main] INFO  (Database#info():2785) -     parse('REPLY');
2018-07-08 17:20:22,895 [main] INFO  (Database#info():2785) -     parse('RETWEET');
2018-07-08 17:20:23,007 [main] INFO  (Database#info():2785) -     parse('TWEET');
2018-07-08 17:20:23,159 [main] INFO  (Database#info():2785) -     parse('USER');
2018-07-08 17:20:23,313 [main] INFO  (Database#info():2785) -     parse('USER_STATUS');
2018-07-08 17:20:23,383 [main] INFO  (Database#info():2785) - }
2018-07-08 17:20:23,383 [main] INFO  (Database#info():2785) -  
2018-07-08 17:20:23,393 [main] INFO  (DfRefreshMan#resolveProjectAutoDetect():105) - *Cannot auto-detect your refresh Eclipse proejct.
2018-07-08 17:20:23,394 [main] INFO  (DfRefreshResourceProcess#show():299) - /===========================================================================
2018-07-08 17:20:23,395 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Refreshing [$$AutoDetect$$] by http://localhost:8386/
2018-07-08 17:20:23,396 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Retrying refreshing by default secondary URL http://localhost:8387/
2018-07-08 17:20:23,398 [main] INFO  (DfRefreshResourceProcess#show():299) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to refresh the resources.

[Project List]
[$$AutoDetect$$]

[Request URL]
http://localhost:8386/

[IOExpception]
ConnectException
Connection refused (Connection refused)
* * * * * * * * * */
2018-07-08 17:20:23,399 [main] INFO  (DfRefreshResourceProcess#show():299) - ==========/
2018-07-08 17:20:23,402 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s479ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2018-07-08 17:20:23,997 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2018-07-08 17:20:24,000 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2018-07-08 17:20:24,000 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2018-07-08 17:20:24,000 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2018-07-08 17:20:24,000 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2018-07-08 17:20:24,014 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 17:20:24,015 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 17:20:24,015 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 17:20:24,015 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 17:20:24,031 [main] INFO  (DfSqlFileFireMan#fire():93) - {Fired SQL}: success=0 failure=0 (in 0 files)
2018-07-08 17:20:24,038 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s049ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2018-07-08 17:20:24,540 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2018-07-08 17:20:24,541 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2018-07-08 17:20:24,542 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2018-07-08 17:20:24,542 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2018-07-08 17:20:24,542 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2018-07-08 17:20:24,554 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 17:20:24,554 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 17:20:24,554 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 17:20:24,554 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 17:20:24,563 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2018-07-08 17:20:24,563 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2018-07-08 17:20:24,575 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 17:20:24,626 [main] INFO  (DfSqlFileFireMan#fire():93) - {Fired SQL}: success=0 failure=0 (in 0 files)
2018-07-08 17:20:24,646 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2018-07-08 17:20:24,646 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2018-07-08 17:20:24,647 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2018-07-08 17:20:24,647 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2018-07-08 17:20:24,647 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2018-07-08 17:20:24,647 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2018-07-08 17:20:24,647 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2018-07-08 17:20:24,647 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2018-07-08 17:20:24,649 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2018-07-08 17:20:24,775 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1208) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2018-07-08 17:20:24,778 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2018-07-08 17:20:24,785 [main] INFO  (DfOldClassHandler#info():1045) - }
2018-07-08 17:20:24,785 [main] INFO  (Database#info():2785) - public void parseCustomizeEntity() {
2018-07-08 17:20:24,786 [main] INFO  (Database#info():2785) - }
2018-07-08 17:20:24,792 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2018-07-08 17:20:24,793 [main] INFO  (DfRefreshMan#resolveProjectAutoDetect():105) - *Cannot auto-detect your refresh Eclipse proejct.
2018-07-08 17:20:24,794 [main] INFO  (DfRefreshResourceProcess#show():299) - /===========================================================================
2018-07-08 17:20:24,794 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Refreshing [$$AutoDetect$$] by http://localhost:8386/
2018-07-08 17:20:24,795 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Retrying refreshing by default secondary URL http://localhost:8387/
2018-07-08 17:20:24,796 [main] INFO  (DfRefreshResourceProcess#show():299) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to refresh the resources.

[Project List]
[$$AutoDetect$$]

[Request URL]
http://localhost:8386/

[IOExpception]
ConnectException
Connection refused (Connection refused)
* * * * * * * * * */
2018-07-08 17:20:24,796 [main] INFO  (DfRefreshResourceProcess#show():299) - ==========/
2018-07-08 17:20:24,854 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s322ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2018-07-08 17:21:50,600 [main] INFO  (DfReplaceSchemaTask#begin():92) - +------------------------------------------+
2018-07-08 17:21:50,602 [main] INFO  (DfReplaceSchemaTask#begin():93) - |                                          |
2018-07-08 17:21:50,603 [main] INFO  (DfReplaceSchemaTask#begin():94) - |              ReplaceSchema               |
2018-07-08 17:21:50,608 [main] INFO  (DfReplaceSchemaTask#begin():102) - |                                          |
2018-07-08 17:21:50,608 [main] INFO  (DfReplaceSchemaTask#begin():103) - +------------------------------------------+
2018-07-08 17:21:50,609 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():401) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2018-07-08 17:21:51,466 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 17:21:51,467 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 17:21:51,467 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 17:21:51,467 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 17:21:51,476 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2018-07-08 17:21:52,074 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 8.0.11
2018-07-08 17:21:52,074 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2018-07-08 17:21:52,086 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():229) - 
2018-07-08 17:21:52,086 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():230) - * * * * * * * * * * *
2018-07-08 17:21:52,086 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():231) - *                   *
2018-07-08 17:21:52,087 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():232) - * Initialize Schema *
2018-07-08 17:21:52,087 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():233) - *                   *
2018-07-08 17:21:52,087 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():234) - * * * * * * * * * * *
2018-07-08 17:21:52,099 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2018-07-08 17:21:52,100 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {twitter.$$NoNameSchema$$ as main}
2018-07-08 17:21:52,100 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2018-07-08 17:21:52,224 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table FAVOLITE
2018-07-08 17:21:52,237 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table FOLLOW
2018-07-08 17:21:52,252 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table REPLY
2018-07-08 17:21:52,265 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table RETWEET
2018-07-08 17:21:52,294 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table FAVOLITE drop foreign key FK_FAVOLITE_TWEET
2018-07-08 17:21:52,307 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table FAVOLITE drop foreign key FK_FAVOLITE_USER
2018-07-08 17:21:52,320 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table FOLLOW drop foreign key FK_FOLLOWEE_USER
2018-07-08 17:21:52,330 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table FOLLOW drop foreign key FK_FOLLOWER_USER
2018-07-08 17:21:52,342 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table REPLY drop foreign key FK_REPLYEE_USER
2018-07-08 17:21:52,353 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table REPLY drop foreign key FK_REPLYEE_TWEET
2018-07-08 17:21:52,365 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table REPLY drop foreign key FK_REPLYER_USER
2018-07-08 17:21:52,377 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table REPLY drop foreign key FK_REPLYER_TWEET
2018-07-08 17:21:52,390 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table RETWEET drop foreign key FK_RETWEET_TWEET
2018-07-08 17:21:52,398 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table RETWEET drop foreign key FK_RETWEET_USER
2018-07-08 17:21:52,409 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table TWEET drop foreign key FK_TWEET_USER
2018-07-08 17:21:52,418 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table USER drop foreign key FK_USER_USER_STATUS
2018-07-08 17:21:52,429 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table FAVOLITE
2018-07-08 17:21:52,436 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table FOLLOW
2018-07-08 17:21:52,444 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table REPLY
2018-07-08 17:21:52,449 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table RETWEET
2018-07-08 17:21:52,457 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table TWEET
2018-07-08 17:21:52,462 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table USER
2018-07-08 17:21:52,470 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table USER_STATUS
2018-07-08 17:21:52,504 [main] INFO  (DfCreateSchemaProcess#createSchema():266) - 
2018-07-08 17:21:52,505 [main] INFO  (DfCreateSchemaProcess#createSchema():267) - * * * * * * * * *
2018-07-08 17:21:52,505 [main] INFO  (DfCreateSchemaProcess#createSchema():268) - *               *
2018-07-08 17:21:52,505 [main] INFO  (DfCreateSchemaProcess#createSchema():269) - * Create Schema *
2018-07-08 17:21:52,505 [main] INFO  (DfCreateSchemaProcess#createSchema():270) - *               *
2018-07-08 17:21:52,505 [main] INFO  (DfCreateSchemaProcess#createSchema():271) - * * * * * * * * *
2018-07-08 17:21:52,510 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: replace-schema.sql
2018-07-08 17:21:52,512 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE FAVOLITE
(
	FAVOLITE_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'お気に入りID : お気に入りID',
	USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID
',
	TWEET_ID BIGINT NOT NULL COMMENT 'ツイートID : お気に入りしたツイートID
',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : お気に入りした時間',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時
',
	PRIMARY KEY (FAVOLITE_ID)
) COMMENT = 'お気に入り'
2018-07-08 17:21:52,556 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE FOLLOW
(
	FOLLOW_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'フォローID : フォローID',
	FOLLOWEE_ID BIGINT NOT NULL COMMENT 'フォロイーID : フォロイーID
フォローする人の会員IDが入る
',
	FOLLOWER_ID BIGINT NOT NULL COMMENT 'フォロワーID : フォロワーID
フォローされる人のIDが入る',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
フォローされているかをT / Fで判定する
',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : フォローした日時',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (FOLLOW_ID),
	CONSTRAINT UQ_NEW_TABLE_XXX UNIQUE (FOLLOWEE_ID, FOLLOWER_ID)
) COMMENT = 'フォロー'
2018-07-08 17:21:52,569 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE REPLY
(
	REPLY_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'リプライID : リプライID',
	REPLYEE_ID BIGINT NOT NULL COMMENT 'リプライした会員ID : リプライした会員ID
',
	REPLYER_ID BIGINT NOT NULL COMMENT 'リプライされた会員ID : リプライされた会員のID',
	REPLYEE_TWEET_ID BIGINT NOT NULL COMMENT 'リプライしたツイートID : リプライしたツイートのID
',
	REPLYER_TWEET_ID BIGINT NOT NULL COMMENT 'リプライされたツイートID : リプライされたツイートのID',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : リプライした日時',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (REPLY_ID)
) COMMENT = 'リプライ'
2018-07-08 17:21:52,581 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE RETWEET
(
	RETWEET_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'リツイートID : リツイートID',
	USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID
リツイートする人の会員IDが入る
',
	TWEET_ID BIGINT NOT NULL COMMENT 'ツイートID : ツイートID
リツイートされるツイートIDが格納される',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
リツイートしたかどうかを見る
一回リツイートして辞めてもう一回リツイートをするときにTにして表示できるようにする
',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : 登録日時',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (RETWEET_ID),
	CONSTRAINT UQ_NEW_TABLE_XXX UNIQUE (USER_ID, TWEET_ID)
) COMMENT = 'リツイート'
2018-07-08 17:21:52,676 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'ツイートID : ツイートID',
	USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID
',
	TWEET VARCHAR(140) NOT NULL COMMENT 'ツイート : ツイート
140文字制限されているので最大長140に設定',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : ツイートした時間',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'ツイート'
2018-07-08 17:21:52,688 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE USER
(
	USER_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員ID',
	USER_NAME VARCHAR(64) NOT NULL COMMENT '会員名称 : 会員名称。
このデータが名前として表示される。',
	MAIL_ADDRESS VARCHAR(256) NOT NULL UNIQUE COMMENT 'メールアドレス : メールアドレス',
	USER_STATUS BIGINT NOT NULL COMMENT '会員ステータス : 会員ステータス
最高3文字で表す予定
',
	BIRTH_DATE DATE COMMENT '誕生日 : 誕生日
時間までは考慮しない
特に入力する必要もないのでNULLを許容する',
	PROFILE_SENTENCE VARCHAR(300) NOT NULL COMMENT 'プロフィール文 : プロフィール文
長いのも困るので300文字',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : 登録日時
ユーザがサービスに登録した日時を格納する',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時
',
	PRIMARY KEY (USER_ID)
) ENGINE = InnoDB COMMENT = '会員 : 会員テーブル' DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci
2018-07-08 17:21:52,792 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE USER_STATUS
(
	USER_STATUS_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ステータスID : 会員ステータスID',
	USER_STATUS VARCHAR(50) NOT NULL COMMENT '会員ステータス : 会員ステータスの区分値
50文字あれば足りると予想',
	DESCRIPTION VARCHAR(200) NOT NULL COMMENT '説明 : 会員ステータスの説明',
	PRIMARY KEY (USER_STATUS_ID),
	CONSTRAINT UQ_NEW_TABLE_XXX UNIQUE (USER_STATUS, DESCRIPTION)
) COMMENT = '会員ステータス'
2018-07-08 17:21:52,804 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE FAVOLITE
	ADD CONSTRAINT FK_FAVOLITE_TWEET FOREIGN KEY (TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:21:52,823 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYEE_TWEET FOREIGN KEY (REPLYEE_TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:21:52,853 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYER_TWEET FOREIGN KEY (REPLYER_TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:21:52,877 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE RETWEET
	ADD CONSTRAINT FK_RETWEET_TWEET FOREIGN KEY (TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:21:52,919 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FAVOLITE
	ADD CONSTRAINT FK_FAVOLITE_USER FOREIGN KEY (USER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:21:52,942 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOW
	ADD CONSTRAINT FK_FOLLOWEE_USER FOREIGN KEY (FOLLOWEE_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:21:52,963 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOW
	ADD CONSTRAINT FK_FOLLOWER_USER FOREIGN KEY (FOLLOWER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:21:52,990 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYEE_USER FOREIGN KEY (REPLYEE_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:21:53,021 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYER_USER FOREIGN KEY (REPLYER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:21:53,049 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE RETWEET
	ADD CONSTRAINT FK_RETWEET_USER FOREIGN KEY (USER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:21:53,074 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
	ADD CONSTRAINT FK_TWEET_USER FOREIGN KEY (USER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:21:53,103 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE USER
	ADD CONSTRAINT FK_USER_USER_STATUS FOREIGN KEY (USER_STATUS)
	REFERENCES USER_STATUS (USER_STATUS_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:21:53,149 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=19 failure=0
2018-07-08 17:21:53,150 [main] INFO  (DfSqlFileFireMan#fire():93) - {Create Schema}: success=19 failure=0 (in 1 files)
2018-07-08 17:21:53,185 [main] INFO  (DfLoadDataProcess#execute():130) - 
2018-07-08 17:21:53,186 [main] INFO  (DfLoadDataProcess#execute():131) - * * * * * * * * * * *
2018-07-08 17:21:53,186 [main] INFO  (DfLoadDataProcess#execute():132) - *                   *
2018-07-08 17:21:53,186 [main] INFO  (DfLoadDataProcess#execute():133) - * Load Data         *
2018-07-08 17:21:53,186 [main] INFO  (DfLoadDataProcess#execute():134) - *                   *
2018-07-08 17:21:53,186 [main] INFO  (DfLoadDataProcess#execute():135) - * * * * * * * * * * *
2018-07-08 17:21:53,250 [main] INFO  (DfTakeFinallyProcess#takeFinally():237) - 
2018-07-08 17:21:53,251 [main] INFO  (DfTakeFinallyProcess#takeFinally():238) - * * * * * * * **
2018-07-08 17:21:53,251 [main] INFO  (DfTakeFinallyProcess#takeFinally():239) - *              *
2018-07-08 17:21:53,251 [main] INFO  (DfTakeFinallyProcess#takeFinally():240) - * Take Finally *
2018-07-08 17:21:53,251 [main] INFO  (DfTakeFinallyProcess#takeFinally():241) - *              *
2018-07-08 17:21:53,252 [main] INFO  (DfTakeFinallyProcess#takeFinally():242) - * * * * * * * **
2018-07-08 17:21:53,256 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: take-finally.sql
2018-07-08 17:21:53,257 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2018-07-08 17:21:53,257 [main] INFO  (DfSqlFileFireMan#fire():93) - {Take Finally}: success=0 failure=0 (in 1 files)
2018-07-08 17:21:53,258 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2018-07-08 17:21:53,263 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m02s680ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql (MySQL 8.0.11)
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Create Schema}: success=19 failure=0 (in 1 files)
  o replace-schema.sql

 {Load Data}: loaded-files=0
  - (no data file)

 {Take Finally}: success=0 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2018-07-08 17:21:59,755 [main] INFO  (DfReplaceSchemaTask#begin():92) - +------------------------------------------+
2018-07-08 17:21:59,757 [main] INFO  (DfReplaceSchemaTask#begin():93) - |                                          |
2018-07-08 17:21:59,758 [main] INFO  (DfReplaceSchemaTask#begin():94) - |              ReplaceSchema               |
2018-07-08 17:21:59,762 [main] INFO  (DfReplaceSchemaTask#begin():102) - |                                          |
2018-07-08 17:21:59,762 [main] INFO  (DfReplaceSchemaTask#begin():103) - +------------------------------------------+
2018-07-08 17:21:59,763 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():401) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2018-07-08 17:22:01,217 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 17:22:01,218 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 17:22:01,218 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 17:22:01,218 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 17:22:01,226 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2018-07-08 17:22:01,825 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 8.0.11
2018-07-08 17:22:01,825 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2018-07-08 17:22:01,836 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():229) - 
2018-07-08 17:22:01,837 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():230) - * * * * * * * * * * *
2018-07-08 17:22:01,837 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():231) - *                   *
2018-07-08 17:22:01,838 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():232) - * Initialize Schema *
2018-07-08 17:22:01,838 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():233) - *                   *
2018-07-08 17:22:01,838 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():234) - * * * * * * * * * * *
2018-07-08 17:22:01,848 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2018-07-08 17:22:01,849 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {twitter.$$NoNameSchema$$ as main}
2018-07-08 17:22:01,849 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2018-07-08 17:22:01,937 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table FAVOLITE
2018-07-08 17:22:01,953 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table FOLLOW
2018-07-08 17:22:01,971 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table REPLY
2018-07-08 17:22:01,983 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table RETWEET
2018-07-08 17:22:02,012 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table FAVOLITE drop foreign key FK_FAVOLITE_TWEET
2018-07-08 17:22:02,023 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table FAVOLITE drop foreign key FK_FAVOLITE_USER
2018-07-08 17:22:02,038 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table FOLLOW drop foreign key FK_FOLLOWEE_USER
2018-07-08 17:22:02,050 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table FOLLOW drop foreign key FK_FOLLOWER_USER
2018-07-08 17:22:02,065 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table REPLY drop foreign key FK_REPLYEE_USER
2018-07-08 17:22:02,078 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table REPLY drop foreign key FK_REPLYEE_TWEET
2018-07-08 17:22:02,088 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table REPLY drop foreign key FK_REPLYER_USER
2018-07-08 17:22:02,098 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table REPLY drop foreign key FK_REPLYER_TWEET
2018-07-08 17:22:02,110 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table RETWEET drop foreign key FK_RETWEET_TWEET
2018-07-08 17:22:02,121 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table RETWEET drop foreign key FK_RETWEET_USER
2018-07-08 17:22:02,133 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table TWEET drop foreign key FK_TWEET_USER
2018-07-08 17:22:02,143 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table USER drop foreign key FK_USER_USER_STATUS
2018-07-08 17:22:02,153 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table FAVOLITE
2018-07-08 17:22:02,158 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table FOLLOW
2018-07-08 17:22:02,164 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table REPLY
2018-07-08 17:22:02,170 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table RETWEET
2018-07-08 17:22:02,175 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table TWEET
2018-07-08 17:22:02,181 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table USER
2018-07-08 17:22:02,188 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table USER_STATUS
2018-07-08 17:22:02,226 [main] INFO  (DfCreateSchemaProcess#createSchema():266) - 
2018-07-08 17:22:02,226 [main] INFO  (DfCreateSchemaProcess#createSchema():267) - * * * * * * * * *
2018-07-08 17:22:02,226 [main] INFO  (DfCreateSchemaProcess#createSchema():268) - *               *
2018-07-08 17:22:02,226 [main] INFO  (DfCreateSchemaProcess#createSchema():269) - * Create Schema *
2018-07-08 17:22:02,227 [main] INFO  (DfCreateSchemaProcess#createSchema():270) - *               *
2018-07-08 17:22:02,227 [main] INFO  (DfCreateSchemaProcess#createSchema():271) - * * * * * * * * *
2018-07-08 17:22:02,230 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: replace-schema.sql
2018-07-08 17:22:02,232 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE FAVOLITE
(
	FAVOLITE_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'お気に入りID : お気に入りID',
	USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID
',
	TWEET_ID BIGINT NOT NULL COMMENT 'ツイートID : お気に入りしたツイートID
',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : お気に入りした時間',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時
',
	PRIMARY KEY (FAVOLITE_ID)
) COMMENT = 'お気に入り'
2018-07-08 17:22:02,297 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE FOLLOW
(
	FOLLOW_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'フォローID : フォローID',
	FOLLOWEE_ID BIGINT NOT NULL COMMENT 'フォロイーID : フォロイーID
フォローする人の会員IDが入る
',
	FOLLOWER_ID BIGINT NOT NULL COMMENT 'フォロワーID : フォロワーID
フォローされる人のIDが入る',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
フォローされているかをT / Fで判定する
',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : フォローした日時',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (FOLLOW_ID),
	CONSTRAINT UQ_NEW_TABLE_XXX UNIQUE (FOLLOWEE_ID, FOLLOWER_ID)
) COMMENT = 'フォロー'
2018-07-08 17:22:02,310 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE REPLY
(
	REPLY_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'リプライID : リプライID',
	REPLYEE_ID BIGINT NOT NULL COMMENT 'リプライした会員ID : リプライした会員ID
',
	REPLYER_ID BIGINT NOT NULL COMMENT 'リプライされた会員ID : リプライされた会員のID',
	REPLYEE_TWEET_ID BIGINT NOT NULL COMMENT 'リプライしたツイートID : リプライしたツイートのID
',
	REPLYER_TWEET_ID BIGINT NOT NULL COMMENT 'リプライされたツイートID : リプライされたツイートのID',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : リプライした日時',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (REPLY_ID)
) COMMENT = 'リプライ'
2018-07-08 17:22:02,406 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE RETWEET
(
	RETWEET_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'リツイートID : リツイートID',
	USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID
リツイートする人の会員IDが入る
',
	TWEET_ID BIGINT NOT NULL COMMENT 'ツイートID : ツイートID
リツイートされるツイートIDが格納される',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
リツイートしたかどうかを見る
一回リツイートして辞めてもう一回リツイートをするときにTにして表示できるようにする
',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : 登録日時',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (RETWEET_ID),
	CONSTRAINT UQ_NEW_TABLE_XXX UNIQUE (USER_ID, TWEET_ID)
) COMMENT = 'リツイート'
2018-07-08 17:22:02,420 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'ツイートID : ツイートID',
	USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID
',
	TWEET VARCHAR(140) NOT NULL COMMENT 'ツイート : ツイート
140文字制限されているので最大長140に設定',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : ツイートした時間',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'ツイート'
2018-07-08 17:22:02,511 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE USER
(
	USER_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員ID',
	USER_NAME VARCHAR(64) NOT NULL COMMENT '会員名称 : 会員名称。
このデータが名前として表示される。',
	MAIL_ADDRESS VARCHAR(256) NOT NULL UNIQUE COMMENT 'メールアドレス : メールアドレス',
	USER_STATUS BIGINT NOT NULL COMMENT '会員ステータス : 会員ステータス
最高3文字で表す予定
',
	BIRTH_DATE DATE COMMENT '誕生日 : 誕生日
時間までは考慮しない
特に入力する必要もないのでNULLを許容する',
	PROFILE_SENTENCE VARCHAR(300) NOT NULL COMMENT 'プロフィール文 : プロフィール文
長いのも困るので300文字',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : 登録日時
ユーザがサービスに登録した日時を格納する',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時
',
	PRIMARY KEY (USER_ID)
) ENGINE = InnoDB COMMENT = '会員 : 会員テーブル' DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci
2018-07-08 17:22:02,522 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE USER_STATUS
(
	USER_STATUS_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ステータスID : 会員ステータスID',
	USER_STATUS VARCHAR(50) NOT NULL COMMENT '会員ステータス : 会員ステータスの区分値
50文字あれば足りると予想',
	DESCRIPTION VARCHAR(200) NOT NULL COMMENT '説明 : 会員ステータスの説明',
	PRIMARY KEY (USER_STATUS_ID),
	CONSTRAINT UQ_NEW_TABLE_XXX UNIQUE (USER_STATUS, DESCRIPTION)
) COMMENT = '会員ステータス'
2018-07-08 17:22:02,535 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE FAVOLITE
	ADD CONSTRAINT FK_FAVOLITE_TWEET FOREIGN KEY (TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:22:02,555 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYEE_TWEET FOREIGN KEY (REPLYEE_TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:22:02,575 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYER_TWEET FOREIGN KEY (REPLYER_TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:22:02,601 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE RETWEET
	ADD CONSTRAINT FK_RETWEET_TWEET FOREIGN KEY (TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:22:02,643 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FAVOLITE
	ADD CONSTRAINT FK_FAVOLITE_USER FOREIGN KEY (USER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:22:02,666 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOW
	ADD CONSTRAINT FK_FOLLOWEE_USER FOREIGN KEY (FOLLOWEE_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:22:02,690 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOW
	ADD CONSTRAINT FK_FOLLOWER_USER FOREIGN KEY (FOLLOWER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:22:02,713 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYEE_USER FOREIGN KEY (REPLYEE_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:22:02,736 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYER_USER FOREIGN KEY (REPLYER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:22:02,764 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE RETWEET
	ADD CONSTRAINT FK_RETWEET_USER FOREIGN KEY (USER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:22:02,787 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
	ADD CONSTRAINT FK_TWEET_USER FOREIGN KEY (USER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:22:02,819 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE USER
	ADD CONSTRAINT FK_USER_USER_STATUS FOREIGN KEY (USER_STATUS)
	REFERENCES USER_STATUS (USER_STATUS_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:22:02,861 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=19 failure=0
2018-07-08 17:22:02,862 [main] INFO  (DfSqlFileFireMan#fire():93) - {Create Schema}: success=19 failure=0 (in 1 files)
2018-07-08 17:22:02,891 [main] INFO  (DfLoadDataProcess#execute():130) - 
2018-07-08 17:22:02,891 [main] INFO  (DfLoadDataProcess#execute():131) - * * * * * * * * * * *
2018-07-08 17:22:02,891 [main] INFO  (DfLoadDataProcess#execute():132) - *                   *
2018-07-08 17:22:02,891 [main] INFO  (DfLoadDataProcess#execute():133) - * Load Data         *
2018-07-08 17:22:02,892 [main] INFO  (DfLoadDataProcess#execute():134) - *                   *
2018-07-08 17:22:02,892 [main] INFO  (DfLoadDataProcess#execute():135) - * * * * * * * * * * *
2018-07-08 17:22:02,911 [main] INFO  (DfTakeFinallyProcess#takeFinally():237) - 
2018-07-08 17:22:02,911 [main] INFO  (DfTakeFinallyProcess#takeFinally():238) - * * * * * * * **
2018-07-08 17:22:02,911 [main] INFO  (DfTakeFinallyProcess#takeFinally():239) - *              *
2018-07-08 17:22:02,912 [main] INFO  (DfTakeFinallyProcess#takeFinally():240) - * Take Finally *
2018-07-08 17:22:02,912 [main] INFO  (DfTakeFinallyProcess#takeFinally():241) - *              *
2018-07-08 17:22:02,912 [main] INFO  (DfTakeFinallyProcess#takeFinally():242) - * * * * * * * **
2018-07-08 17:22:02,916 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: take-finally.sql
2018-07-08 17:22:02,917 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2018-07-08 17:22:02,918 [main] INFO  (DfSqlFileFireMan#fire():93) - {Take Finally}: success=0 failure=0 (in 1 files)
2018-07-08 17:22:02,919 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2018-07-08 17:22:02,923 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m03s184ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql (MySQL 8.0.11)
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Create Schema}: success=19 failure=0 (in 1 files)
  o replace-schema.sql

 {Load Data}: loaded-files=0
  - (no data file)

 {Take Finally}: success=0 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2018-07-08 17:22:03,525 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2018-07-08 17:22:03,528 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2018-07-08 17:22:03,528 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2018-07-08 17:22:03,528 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2018-07-08 17:22:03,529 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2018-07-08 17:22:03,547 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 17:22:03,548 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 17:22:03,548 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 17:22:03,548 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 17:22:03,585 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2018-07-08 17:22:03,585 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2018-07-08 17:22:03,585 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2018-07-08 17:22:03,598 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 17:22:03,701 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2018-07-08 17:22:03,705 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2018-07-08 17:22:04,021 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 8.0.11
2018-07-08 17:22:04,021 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2018-07-08 17:22:04,022 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2018-07-08 17:22:04,024 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2018-07-08 17:22:04,024 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {twitter.$$NoNameSchema$$ as main}
2018-07-08 17:22:04,024 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2018-07-08 17:22:04,035 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'twitter' order by table_name asc
2018-07-08 17:22:04,038 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'twitter' order by table_name asc, column_name asc
2018-07-08 17:22:04,048 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'twitter' and DATA_TYPE = 'datetime'
2018-07-08 17:22:04,060 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2018-07-08 17:22:04,060 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2018-07-08 17:22:04,061 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2018-07-08 17:22:04,061 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.FAVOLITE(TABLE) // お気に入り
2018-07-08 17:22:04,098 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.FOLLOW(TABLE) // フォロー
2018-07-08 17:22:04,113 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.REPLY(TABLE) // リプライ
2018-07-08 17:22:04,129 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.RETWEET(TABLE) // リツイート
2018-07-08 17:22:04,147 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.TWEET(TABLE) // ツイート
2018-07-08 17:22:04,162 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.USER(TABLE) // 会員 : 会員テーブル
2018-07-08 17:22:04,176 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.USER_STATUS(TABLE) // 会員ステータス
2018-07-08 17:22:04,189 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2018-07-08 17:22:04,189 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2018-07-08 17:22:04,189 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 7
2018-07-08 17:22:04,189 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2018-07-08 17:22:04,189 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2018-07-08 17:22:04,191 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2018-07-08 17:22:04,193 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2018-07-08 17:22:04,193 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-demo.xml
2018-07-08 17:22:04,194 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2018-07-08 17:22:04,214 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2018-07-08 17:22:04,216 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 17:22:04,354 [main] INFO  (DfSchemaDiff#setupDocumentAuthorOfNextSchema():419) - *Cannot get git branch of next schema.
java.lang.IllegalArgumentException: The argument 'object' should not be null.
	at org.dbflute.optional.OptionalObject.of(OptionalObject.java:69)
	at org.dbflute.optional.OptionalThing.of(OptionalThing.java:47)
	at org.dbflute.logic.doc.supplement.author.DfDocumentAuthorLogic.getGitBranch(DfDocumentAuthorLogic.java:92)
	at org.dbflute.logic.jdbc.schemadiff.DfSchemaDiff.setupDocumentAuthorOfNextSchema(DfSchemaDiff.java:417)
	at org.dbflute.logic.jdbc.schemadiff.DfSchemaDiff.loadNextSchema(DfSchemaDiff.java:406)
	at org.dbflute.logic.jdbc.schemaxml.DfSchemaXmlSerializer.doLoadNextSchema(DfSchemaXmlSerializer.java:1551)
	at org.dbflute.logic.jdbc.schemaxml.DfSchemaXmlSerializer.loadNextSchema(DfSchemaXmlSerializer.java:1543)
	at org.dbflute.logic.jdbc.schemaxml.DfSchemaXmlSerializer.serialize(DfSchemaXmlSerializer.java:332)
	at org.apache.torque.task.TorqueJDBCTransformTask.doExecute(TorqueJDBCTransformTask.java:127)
	at org.dbflute.task.bs.DfAbstractTask$1.callActualExecute(DfAbstractTask.java:113)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTask.execute(DfAbstractTask.java:135)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.helper.SingleCheckExecutor.executeTargets(SingleCheckExecutor.java:38)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:416)
	at org.apache.tools.ant.taskdefs.CallTarget.execute(CallTarget.java:105)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
2018-07-08 17:22:04,443 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1565) -  -> same as previous (schema diff)
2018-07-08 17:22:04,444 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2018-07-08 17:22:04,450 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s935ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql (MySQL 8.0.11)
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2018-07-08 17:22:04,985 [main] INFO  (TorqueDocumentationTask#begin():187) - +------------------------------------------+
2018-07-08 17:22:04,987 [main] INFO  (TorqueDocumentationTask#begin():188) - |                                          |
2018-07-08 17:22:04,987 [main] INFO  (TorqueDocumentationTask#begin():189) - |                   Doc                    |
2018-07-08 17:22:04,987 [main] INFO  (TorqueDocumentationTask#begin():197) - |                                          |
2018-07-08 17:22:04,987 [main] INFO  (TorqueDocumentationTask#begin():198) - +------------------------------------------+
2018-07-08 17:22:05,002 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 17:22:05,002 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 17:22:05,003 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 17:22:05,003 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 17:22:05,004 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():259) - 
2018-07-08 17:22:05,005 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():260) - * * * * * * * * * * *
2018-07-08 17:22:05,005 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():261) - *                   *
2018-07-08 17:22:05,005 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():262) - *    Schema HTML    *
2018-07-08 17:22:05,005 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():263) - *                   *
2018-07-08 17:22:05,005 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():264) - * * * * * * * * * * *
2018-07-08 17:22:05,094 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 17:22:05,149 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2018-07-08 17:22:05,267 [main] INFO  (Database#doEnableDocumentOutputDirectory():1224) - ...Setting up documentOutputDirectory: ./output/doc
2018-07-08 17:22:05,274 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2018-07-08 17:22:05,274 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2018-07-08 17:22:05,275 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2018-07-08 17:22:05,276 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2018-07-08 17:22:05,276 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2018-07-08 17:22:05,277 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2018-07-08 17:22:05,279 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2018-07-08 17:22:05,279 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2018-07-08 17:22:05,280 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2018-07-08 17:22:05,287 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():233) - ...Loading schema history
2018-07-08 17:22:05,306 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():237) -  -> found history: count=1
2018-07-08 17:22:05,513 [main] INFO  (DfRefreshMan#resolveProjectAutoDetect():105) - *Cannot auto-detect your refresh Eclipse proejct.
2018-07-08 17:22:05,515 [main] INFO  (DfRefreshResourceProcess#show():299) - /===========================================================================
2018-07-08 17:22:05,515 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Refreshing [$$AutoDetect$$] by http://localhost:8386/
2018-07-08 17:22:05,521 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Retrying refreshing by default secondary URL http://localhost:8387/
2018-07-08 17:22:05,523 [main] INFO  (DfRefreshResourceProcess#show():299) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to refresh the resources.

[Project List]
[$$AutoDetect$$]

[Request URL]
http://localhost:8386/

[IOExpception]
ConnectException
Connection refused (Connection refused)
* * * * * * * * * */
2018-07-08 17:22:05,523 [main] INFO  (DfRefreshResourceProcess#show():299) - ==========/
2018-07-08 17:22:05,527 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s552ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2018-07-08 17:22:07,152 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2018-07-08 17:22:07,154 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2018-07-08 17:22:07,154 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2018-07-08 17:22:07,154 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2018-07-08 17:22:07,154 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2018-07-08 17:22:07,167 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 17:22:07,167 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 17:22:07,167 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 17:22:07,167 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 17:22:07,178 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2018-07-08 17:22:07,178 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2018-07-08 17:22:07,199 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 17:22:07,248 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2018-07-08 17:22:07,405 [main] INFO  (Database#doEnableGenerateOutputDirectory():1192) - ...Setting up generateOutputDirectory: ../src/main/java
2018-07-08 17:22:07,408 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2018-07-08 17:22:07,409 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2018-07-08 17:22:07,410 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2018-07-08 17:22:07,411 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2018-07-08 17:22:07,411 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2018-07-08 17:22:07,413 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2018-07-08 17:22:07,415 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2018-07-08 17:22:07,415 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2018-07-08 17:22:07,418 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2018-07-08 17:22:07,427 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2018-07-08 17:22:07,427 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2018-07-08 17:22:07,427 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2018-07-08 17:22:07,427 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2018-07-08 17:22:07,427 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2018-07-08 17:22:07,427 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2018-07-08 17:22:07,428 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2018-07-08 17:22:07,428 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2018-07-08 17:22:07,428 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2018-07-08 17:22:07,428 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2018-07-08 17:22:07,438 [main] INFO  (Database#info():2785) - public void parseAllCommon() {
2018-07-08 17:22:07,439 [main] INFO  (Database#info():2785) -     parse('DBCurrent');
2018-07-08 17:22:07,489 [main] INFO  (Database#info():2785) -     parse('DBFluteConfig');
2018-07-08 17:22:07,499 [main] INFO  (Database#info():2785) -     parse('DBFluteInitializer');
2018-07-08 17:22:07,505 [main] INFO  (Database#info():2785) -     parse('DBMetaInstanceHandler');
2018-07-08 17:22:07,526 [main] INFO  (Database#info():2785) -     parse('EntityDefinedCommonColumn');
2018-07-08 17:22:07,528 [main] INFO  (Database#info():2785) -     parse('ImplementedBehaviorSelector');
2018-07-08 17:22:07,532 [main] INFO  (Database#info():2785) -     parse('ImplementedCommonColumnAutoSetupper');
2018-07-08 17:22:07,540 [main] INFO  (Database#info():2785) -     parse('ImplementedInvokerAssistant');
2018-07-08 17:22:07,545 [main] INFO  (Database#info():2785) -     parse('ImplementedSqlClauseCreator');
2018-07-08 17:22:07,551 [main] INFO  (Database#info():2785) - }
2018-07-08 17:22:07,551 [main] INFO  (Database#info():2785) - public void parseContainerConfig() {
2018-07-08 17:22:07,552 [main] INFO  (Database#info():2785) -     parse('demo/dbflute/allcommon/DBFluteBeansJavaConfig.java')
2018-07-08 17:22:07,560 [main] INFO  (Database#info():2785) - }
2018-07-08 17:22:07,565 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2018-07-08 17:22:07,588 [main] INFO  (DfOldClassHandler#info():1045) - }
2018-07-08 17:22:07,588 [main] INFO  (Database#info():2785) - public void parseTableClass() {
2018-07-08 17:22:07,589 [main] INFO  (Database#info():2785) -     parse('FAVOLITE');
2018-07-08 17:22:07,782 [main] INFO  (Database#info():2785) -     parse('FOLLOW');
2018-07-08 17:22:07,919 [main] INFO  (Database#info():2785) -     parse('REPLY');
2018-07-08 17:22:08,078 [main] INFO  (Database#info():2785) -     parse('RETWEET');
2018-07-08 17:22:08,178 [main] INFO  (Database#info():2785) -     parse('TWEET');
2018-07-08 17:22:08,331 [main] INFO  (Database#info():2785) -     parse('USER');
2018-07-08 17:22:08,509 [main] INFO  (Database#info():2785) -     parse('USER_STATUS');
2018-07-08 17:22:08,576 [main] INFO  (Database#info():2785) - }
2018-07-08 17:22:08,576 [main] INFO  (Database#info():2785) -  
2018-07-08 17:22:08,589 [main] INFO  (DfRefreshMan#resolveProjectAutoDetect():105) - *Cannot auto-detect your refresh Eclipse proejct.
2018-07-08 17:22:08,590 [main] INFO  (DfRefreshResourceProcess#show():299) - /===========================================================================
2018-07-08 17:22:08,591 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Refreshing [$$AutoDetect$$] by http://localhost:8386/
2018-07-08 17:22:08,592 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Retrying refreshing by default secondary URL http://localhost:8387/
2018-07-08 17:22:08,594 [main] INFO  (DfRefreshResourceProcess#show():299) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to refresh the resources.

[Project List]
[$$AutoDetect$$]

[Request URL]
http://localhost:8386/

[IOExpception]
ConnectException
Connection refused (Connection refused)
* * * * * * * * * */
2018-07-08 17:22:08,595 [main] INFO  (DfRefreshResourceProcess#show():299) - ==========/
2018-07-08 17:22:08,598 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s456ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2018-07-08 17:22:09,102 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2018-07-08 17:22:09,104 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2018-07-08 17:22:09,104 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2018-07-08 17:22:09,104 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2018-07-08 17:22:09,104 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2018-07-08 17:22:09,117 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 17:22:09,117 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 17:22:09,117 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 17:22:09,117 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 17:22:09,136 [main] INFO  (DfSqlFileFireMan#fire():93) - {Fired SQL}: success=0 failure=0 (in 0 files)
2018-07-08 17:22:09,143 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s048ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2018-07-08 17:22:09,672 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2018-07-08 17:22:09,674 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2018-07-08 17:22:09,674 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2018-07-08 17:22:09,674 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2018-07-08 17:22:09,674 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2018-07-08 17:22:09,687 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 17:22:09,687 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 17:22:09,688 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 17:22:09,688 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 17:22:09,697 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2018-07-08 17:22:09,697 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2018-07-08 17:22:09,701 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 17:22:09,753 [main] INFO  (DfSqlFileFireMan#fire():93) - {Fired SQL}: success=0 failure=0 (in 0 files)
2018-07-08 17:22:09,773 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2018-07-08 17:22:09,774 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2018-07-08 17:22:09,774 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2018-07-08 17:22:09,774 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2018-07-08 17:22:09,774 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2018-07-08 17:22:09,774 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2018-07-08 17:22:09,774 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2018-07-08 17:22:09,774 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2018-07-08 17:22:09,777 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2018-07-08 17:22:09,907 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1208) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2018-07-08 17:22:09,909 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2018-07-08 17:22:09,917 [main] INFO  (DfOldClassHandler#info():1045) - }
2018-07-08 17:22:09,918 [main] INFO  (Database#info():2785) - public void parseCustomizeEntity() {
2018-07-08 17:22:09,919 [main] INFO  (Database#info():2785) - }
2018-07-08 17:22:09,925 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2018-07-08 17:22:09,926 [main] INFO  (DfRefreshMan#resolveProjectAutoDetect():105) - *Cannot auto-detect your refresh Eclipse proejct.
2018-07-08 17:22:09,927 [main] INFO  (DfRefreshResourceProcess#show():299) - /===========================================================================
2018-07-08 17:22:09,928 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Refreshing [$$AutoDetect$$] by http://localhost:8386/
2018-07-08 17:22:09,928 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Retrying refreshing by default secondary URL http://localhost:8387/
2018-07-08 17:22:09,929 [main] INFO  (DfRefreshResourceProcess#show():299) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to refresh the resources.

[Project List]
[$$AutoDetect$$]

[Request URL]
http://localhost:8386/

[IOExpception]
ConnectException
Connection refused (Connection refused)
* * * * * * * * * */
2018-07-08 17:22:09,970 [main] INFO  (DfRefreshResourceProcess#show():299) - ==========/
2018-07-08 17:22:09,974 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s310ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2018-07-08 17:22:17,549 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2018-07-08 17:22:17,552 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2018-07-08 17:22:17,553 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2018-07-08 17:22:17,553 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2018-07-08 17:22:17,553 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2018-07-08 17:22:17,569 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 17:22:17,569 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 17:22:17,569 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 17:22:17,570 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 17:22:17,599 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2018-07-08 17:22:17,599 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2018-07-08 17:22:17,599 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2018-07-08 17:22:17,610 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 17:22:17,695 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2018-07-08 17:22:17,702 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2018-07-08 17:22:18,325 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 8.0.11
2018-07-08 17:22:18,326 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2018-07-08 17:22:18,327 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2018-07-08 17:22:18,328 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2018-07-08 17:22:18,329 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {twitter.$$NoNameSchema$$ as main}
2018-07-08 17:22:18,329 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2018-07-08 17:22:18,339 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'twitter' order by table_name asc
2018-07-08 17:22:18,343 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'twitter' order by table_name asc, column_name asc
2018-07-08 17:22:18,354 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'twitter' and DATA_TYPE = 'datetime'
2018-07-08 17:22:18,361 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2018-07-08 17:22:18,361 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2018-07-08 17:22:18,361 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2018-07-08 17:22:18,361 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.FAVOLITE(TABLE) // お気に入り
2018-07-08 17:22:18,399 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.FOLLOW(TABLE) // フォロー
2018-07-08 17:22:18,420 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.REPLY(TABLE) // リプライ
2018-07-08 17:22:18,438 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.RETWEET(TABLE) // リツイート
2018-07-08 17:22:18,459 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.TWEET(TABLE) // ツイート
2018-07-08 17:22:18,473 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.USER(TABLE) // 会員 : 会員テーブル
2018-07-08 17:22:18,490 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.USER_STATUS(TABLE) // 会員ステータス
2018-07-08 17:22:18,504 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2018-07-08 17:22:18,504 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2018-07-08 17:22:18,505 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 7
2018-07-08 17:22:18,505 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2018-07-08 17:22:18,505 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2018-07-08 17:22:18,506 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2018-07-08 17:22:18,509 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2018-07-08 17:22:18,509 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-demo.xml
2018-07-08 17:22:18,509 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2018-07-08 17:22:18,529 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2018-07-08 17:22:18,530 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 17:22:18,565 [main] INFO  (DfSchemaDiff#setupDocumentAuthorOfNextSchema():419) - *Cannot get git branch of next schema.
java.lang.IllegalArgumentException: The argument 'object' should not be null.
	at org.dbflute.optional.OptionalObject.of(OptionalObject.java:69)
	at org.dbflute.optional.OptionalThing.of(OptionalThing.java:47)
	at org.dbflute.logic.doc.supplement.author.DfDocumentAuthorLogic.getGitBranch(DfDocumentAuthorLogic.java:92)
	at org.dbflute.logic.jdbc.schemadiff.DfSchemaDiff.setupDocumentAuthorOfNextSchema(DfSchemaDiff.java:417)
	at org.dbflute.logic.jdbc.schemadiff.DfSchemaDiff.loadNextSchema(DfSchemaDiff.java:406)
	at org.dbflute.logic.jdbc.schemaxml.DfSchemaXmlSerializer.doLoadNextSchema(DfSchemaXmlSerializer.java:1551)
	at org.dbflute.logic.jdbc.schemaxml.DfSchemaXmlSerializer.loadNextSchema(DfSchemaXmlSerializer.java:1543)
	at org.dbflute.logic.jdbc.schemaxml.DfSchemaXmlSerializer.serialize(DfSchemaXmlSerializer.java:332)
	at org.apache.torque.task.TorqueJDBCTransformTask.doExecute(TorqueJDBCTransformTask.java:127)
	at org.dbflute.task.bs.DfAbstractTask$1.callActualExecute(DfAbstractTask.java:113)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTask.execute(DfAbstractTask.java:135)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.helper.SingleCheckExecutor.executeTargets(SingleCheckExecutor.java:38)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:416)
	at org.apache.tools.ant.taskdefs.CallTarget.execute(CallTarget.java:105)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
2018-07-08 17:22:18,663 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1565) -  -> same as previous (schema diff)
2018-07-08 17:22:18,664 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2018-07-08 17:22:18,673 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s135ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql (MySQL 8.0.11)
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2018-07-08 17:22:19,239 [main] INFO  (TorqueDocumentationTask#begin():187) - +------------------------------------------+
2018-07-08 17:22:19,240 [main] INFO  (TorqueDocumentationTask#begin():188) - |                                          |
2018-07-08 17:22:19,240 [main] INFO  (TorqueDocumentationTask#begin():189) - |                   Doc                    |
2018-07-08 17:22:19,241 [main] INFO  (TorqueDocumentationTask#begin():197) - |                                          |
2018-07-08 17:22:19,241 [main] INFO  (TorqueDocumentationTask#begin():198) - +------------------------------------------+
2018-07-08 17:22:19,255 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 17:22:19,255 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 17:22:19,255 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 17:22:19,255 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 17:22:19,256 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():259) - 
2018-07-08 17:22:19,256 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():260) - * * * * * * * * * * *
2018-07-08 17:22:19,257 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():261) - *                   *
2018-07-08 17:22:19,257 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():262) - *    Schema HTML    *
2018-07-08 17:22:19,257 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():263) - *                   *
2018-07-08 17:22:19,257 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():264) - * * * * * * * * * * *
2018-07-08 17:22:19,334 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 17:22:19,395 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2018-07-08 17:22:19,561 [main] INFO  (Database#doEnableDocumentOutputDirectory():1224) - ...Setting up documentOutputDirectory: ./output/doc
2018-07-08 17:22:19,569 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2018-07-08 17:22:19,569 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2018-07-08 17:22:19,573 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2018-07-08 17:22:19,574 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2018-07-08 17:22:19,574 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2018-07-08 17:22:19,575 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2018-07-08 17:22:19,576 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2018-07-08 17:22:19,577 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2018-07-08 17:22:19,578 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2018-07-08 17:22:19,583 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():233) - ...Loading schema history
2018-07-08 17:22:19,610 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():237) -  -> found history: count=1
2018-07-08 17:22:19,809 [main] INFO  (DfRefreshMan#resolveProjectAutoDetect():105) - *Cannot auto-detect your refresh Eclipse proejct.
2018-07-08 17:22:19,810 [main] INFO  (DfRefreshResourceProcess#show():299) - /===========================================================================
2018-07-08 17:22:19,811 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Refreshing [$$AutoDetect$$] by http://localhost:8386/
2018-07-08 17:22:19,818 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Retrying refreshing by default secondary URL http://localhost:8387/
2018-07-08 17:22:19,820 [main] INFO  (DfRefreshResourceProcess#show():299) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to refresh the resources.

[Project List]
[$$AutoDetect$$]

[Request URL]
http://localhost:8386/

[IOExpception]
ConnectException
Connection refused (Connection refused)
* * * * * * * * * */
2018-07-08 17:22:19,821 [main] INFO  (DfRefreshResourceProcess#show():299) - ==========/
2018-07-08 17:22:19,826 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s595ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2018-07-08 17:22:21,347 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2018-07-08 17:22:21,349 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2018-07-08 17:22:21,349 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2018-07-08 17:22:21,349 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2018-07-08 17:22:21,349 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2018-07-08 17:22:21,363 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 17:22:21,364 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 17:22:21,364 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 17:22:21,364 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 17:22:21,377 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2018-07-08 17:22:21,378 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2018-07-08 17:22:21,410 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 17:22:21,463 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2018-07-08 17:22:21,644 [main] INFO  (Database#doEnableGenerateOutputDirectory():1192) - ...Setting up generateOutputDirectory: ../src/main/java
2018-07-08 17:22:21,646 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2018-07-08 17:22:21,646 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2018-07-08 17:22:21,647 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2018-07-08 17:22:21,648 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2018-07-08 17:22:21,648 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2018-07-08 17:22:21,649 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2018-07-08 17:22:21,651 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2018-07-08 17:22:21,651 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2018-07-08 17:22:21,653 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2018-07-08 17:22:21,685 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2018-07-08 17:22:21,685 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2018-07-08 17:22:21,686 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2018-07-08 17:22:21,686 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2018-07-08 17:22:21,686 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2018-07-08 17:22:21,687 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2018-07-08 17:22:21,687 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2018-07-08 17:22:21,687 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2018-07-08 17:22:21,687 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2018-07-08 17:22:21,688 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2018-07-08 17:22:21,698 [main] INFO  (Database#info():2785) - public void parseAllCommon() {
2018-07-08 17:22:21,699 [main] INFO  (Database#info():2785) -     parse('DBCurrent');
2018-07-08 17:22:21,702 [main] INFO  (Database#info():2785) -     parse('DBFluteConfig');
2018-07-08 17:22:21,714 [main] INFO  (Database#info():2785) -     parse('DBFluteInitializer');
2018-07-08 17:22:21,718 [main] INFO  (Database#info():2785) -     parse('DBMetaInstanceHandler');
2018-07-08 17:22:21,733 [main] INFO  (Database#info():2785) -     parse('EntityDefinedCommonColumn');
2018-07-08 17:22:21,736 [main] INFO  (Database#info():2785) -     parse('ImplementedBehaviorSelector');
2018-07-08 17:22:21,742 [main] INFO  (Database#info():2785) -     parse('ImplementedCommonColumnAutoSetupper');
2018-07-08 17:22:21,747 [main] INFO  (Database#info():2785) -     parse('ImplementedInvokerAssistant');
2018-07-08 17:22:21,753 [main] INFO  (Database#info():2785) -     parse('ImplementedSqlClauseCreator');
2018-07-08 17:22:21,755 [main] INFO  (Database#info():2785) - }
2018-07-08 17:22:21,755 [main] INFO  (Database#info():2785) - public void parseContainerConfig() {
2018-07-08 17:22:21,756 [main] INFO  (Database#info():2785) -     parse('demo/dbflute/allcommon/DBFluteBeansJavaConfig.java')
2018-07-08 17:22:21,766 [main] INFO  (Database#info():2785) - }
2018-07-08 17:22:21,770 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2018-07-08 17:22:21,790 [main] INFO  (DfOldClassHandler#info():1045) - }
2018-07-08 17:22:21,790 [main] INFO  (Database#info():2785) - public void parseTableClass() {
2018-07-08 17:22:21,791 [main] INFO  (Database#info():2785) -     parse('FAVOLITE');
2018-07-08 17:22:21,991 [main] INFO  (Database#info():2785) -     parse('FOLLOW');
2018-07-08 17:22:22,125 [main] INFO  (Database#info():2785) -     parse('REPLY');
2018-07-08 17:22:22,282 [main] INFO  (Database#info():2785) -     parse('RETWEET');
2018-07-08 17:22:22,387 [main] INFO  (Database#info():2785) -     parse('TWEET');
2018-07-08 17:22:22,548 [main] INFO  (Database#info():2785) -     parse('USER');
2018-07-08 17:22:22,699 [main] INFO  (Database#info():2785) -     parse('USER_STATUS');
2018-07-08 17:22:22,777 [main] INFO  (Database#info():2785) - }
2018-07-08 17:22:22,777 [main] INFO  (Database#info():2785) -  
2018-07-08 17:22:22,790 [main] INFO  (DfRefreshMan#resolveProjectAutoDetect():105) - *Cannot auto-detect your refresh Eclipse proejct.
2018-07-08 17:22:22,791 [main] INFO  (DfRefreshResourceProcess#show():299) - /===========================================================================
2018-07-08 17:22:22,792 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Refreshing [$$AutoDetect$$] by http://localhost:8386/
2018-07-08 17:22:22,793 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Retrying refreshing by default secondary URL http://localhost:8387/
2018-07-08 17:22:22,794 [main] INFO  (DfRefreshResourceProcess#show():299) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to refresh the resources.

[Project List]
[$$AutoDetect$$]

[Request URL]
http://localhost:8386/

[IOExpception]
ConnectException
Connection refused (Connection refused)
* * * * * * * * * */
2018-07-08 17:22:22,794 [main] INFO  (DfRefreshResourceProcess#show():299) - ==========/
2018-07-08 17:22:22,798 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s463ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2018-07-08 17:22:23,422 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2018-07-08 17:22:23,424 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2018-07-08 17:22:23,424 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2018-07-08 17:22:23,424 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2018-07-08 17:22:23,424 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2018-07-08 17:22:23,437 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 17:22:23,437 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 17:22:23,437 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 17:22:23,437 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 17:22:23,455 [main] INFO  (DfSqlFileFireMan#fire():93) - {Fired SQL}: success=0 failure=0 (in 0 files)
2018-07-08 17:22:23,462 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s046ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2018-07-08 17:22:23,982 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2018-07-08 17:22:23,983 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2018-07-08 17:22:23,984 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2018-07-08 17:22:23,984 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2018-07-08 17:22:23,984 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2018-07-08 17:22:23,997 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 17:22:23,997 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 17:22:23,997 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 17:22:23,997 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 17:22:24,007 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2018-07-08 17:22:24,007 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2018-07-08 17:22:24,011 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 17:22:24,073 [main] INFO  (DfSqlFileFireMan#fire():93) - {Fired SQL}: success=0 failure=0 (in 0 files)
2018-07-08 17:22:24,094 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2018-07-08 17:22:24,094 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2018-07-08 17:22:24,094 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2018-07-08 17:22:24,094 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2018-07-08 17:22:24,095 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2018-07-08 17:22:24,095 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2018-07-08 17:22:24,095 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2018-07-08 17:22:24,095 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2018-07-08 17:22:24,097 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2018-07-08 17:22:24,226 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1208) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2018-07-08 17:22:24,229 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2018-07-08 17:22:24,239 [main] INFO  (DfOldClassHandler#info():1045) - }
2018-07-08 17:22:24,239 [main] INFO  (Database#info():2785) - public void parseCustomizeEntity() {
2018-07-08 17:22:24,241 [main] INFO  (Database#info():2785) - }
2018-07-08 17:22:24,247 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2018-07-08 17:22:24,249 [main] INFO  (DfRefreshMan#resolveProjectAutoDetect():105) - *Cannot auto-detect your refresh Eclipse proejct.
2018-07-08 17:22:24,250 [main] INFO  (DfRefreshResourceProcess#show():299) - /===========================================================================
2018-07-08 17:22:24,250 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Refreshing [$$AutoDetect$$] by http://localhost:8386/
2018-07-08 17:22:24,252 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Retrying refreshing by default secondary URL http://localhost:8387/
2018-07-08 17:22:24,253 [main] INFO  (DfRefreshResourceProcess#show():299) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to refresh the resources.

[Project List]
[$$AutoDetect$$]

[Request URL]
http://localhost:8386/

[IOExpception]
ConnectException
Connection refused (Connection refused)
* * * * * * * * * */
2018-07-08 17:22:24,253 [main] INFO  (DfRefreshResourceProcess#show():299) - ==========/
2018-07-08 17:22:24,256 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s282ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2018-07-08 17:26:33,541 [main] INFO  (DfReplaceSchemaTask#begin():92) - +------------------------------------------+
2018-07-08 17:26:33,544 [main] INFO  (DfReplaceSchemaTask#begin():93) - |                                          |
2018-07-08 17:26:33,544 [main] INFO  (DfReplaceSchemaTask#begin():94) - |              ReplaceSchema               |
2018-07-08 17:26:33,549 [main] INFO  (DfReplaceSchemaTask#begin():102) - |                                          |
2018-07-08 17:26:33,550 [main] INFO  (DfReplaceSchemaTask#begin():103) - +------------------------------------------+
2018-07-08 17:26:33,550 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():401) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2018-07-08 17:26:34,974 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 17:26:34,975 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 17:26:34,975 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 17:26:34,975 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 17:26:34,983 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2018-07-08 17:26:35,561 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 8.0.11
2018-07-08 17:26:35,562 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2018-07-08 17:26:35,573 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():229) - 
2018-07-08 17:26:35,573 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():230) - * * * * * * * * * * *
2018-07-08 17:26:35,573 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():231) - *                   *
2018-07-08 17:26:35,574 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():232) - * Initialize Schema *
2018-07-08 17:26:35,575 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():233) - *                   *
2018-07-08 17:26:35,575 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():234) - * * * * * * * * * * *
2018-07-08 17:26:35,586 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2018-07-08 17:26:35,586 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {twitter.$$NoNameSchema$$ as main}
2018-07-08 17:26:35,587 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2018-07-08 17:26:35,691 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table FAVOLITE
2018-07-08 17:26:35,701 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table FOLLOW
2018-07-08 17:26:35,712 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table REPLY
2018-07-08 17:26:35,723 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table RETWEET
2018-07-08 17:26:35,745 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table FAVOLITE drop foreign key FK_FAVOLITE_TWEET
2018-07-08 17:26:35,752 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table FAVOLITE drop foreign key FK_FAVOLITE_USER
2018-07-08 17:26:35,763 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table FOLLOW drop foreign key FK_FOLLOWEE_USER
2018-07-08 17:26:35,772 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table FOLLOW drop foreign key FK_FOLLOWER_USER
2018-07-08 17:26:35,787 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table REPLY drop foreign key FK_REPLYEE_USER
2018-07-08 17:26:35,801 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table REPLY drop foreign key FK_REPLYEE_TWEET
2018-07-08 17:26:35,809 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table REPLY drop foreign key FK_REPLYER_USER
2018-07-08 17:26:35,817 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table REPLY drop foreign key FK_REPLYER_TWEET
2018-07-08 17:26:35,828 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table RETWEET drop foreign key FK_RETWEET_TWEET
2018-07-08 17:26:35,836 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table RETWEET drop foreign key FK_RETWEET_USER
2018-07-08 17:26:35,846 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table TWEET drop foreign key FK_TWEET_USER
2018-07-08 17:26:35,855 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table USER drop foreign key FK_USER_USER_STATUS
2018-07-08 17:26:35,867 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table FAVOLITE
2018-07-08 17:26:35,875 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table FOLLOW
2018-07-08 17:26:35,881 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table REPLY
2018-07-08 17:26:35,886 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table RETWEET
2018-07-08 17:26:35,890 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table TWEET
2018-07-08 17:26:35,894 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table USER
2018-07-08 17:26:35,900 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table USER_STATUS
2018-07-08 17:26:35,931 [main] INFO  (DfCreateSchemaProcess#createSchema():266) - 
2018-07-08 17:26:35,931 [main] INFO  (DfCreateSchemaProcess#createSchema():267) - * * * * * * * * *
2018-07-08 17:26:35,932 [main] INFO  (DfCreateSchemaProcess#createSchema():268) - *               *
2018-07-08 17:26:35,932 [main] INFO  (DfCreateSchemaProcess#createSchema():269) - * Create Schema *
2018-07-08 17:26:35,932 [main] INFO  (DfCreateSchemaProcess#createSchema():270) - *               *
2018-07-08 17:26:35,932 [main] INFO  (DfCreateSchemaProcess#createSchema():271) - * * * * * * * * *
2018-07-08 17:26:35,936 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: replace-schema.sql
2018-07-08 17:26:35,939 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE FAVOLITE
(
	FAVOLITE_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'お気に入りID : お気に入りID',
	USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID
',
	TWEET_ID BIGINT NOT NULL COMMENT 'ツイートID : お気に入りしたツイートID
',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : お気に入りした時間',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時
',
	PRIMARY KEY (FAVOLITE_ID)
) COMMENT = 'お気に入り'
2018-07-08 17:26:35,960 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE FOLLOW
(
	FOLLOW_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'フォローID : フォローID',
	FOLLOWEE_ID BIGINT NOT NULL COMMENT 'フォロイーID : フォロイーID
フォローする人の会員IDが入る
',
	FOLLOWER_ID BIGINT NOT NULL COMMENT 'フォロワーID : フォロワーID
フォローされる人のIDが入る',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
フォローされているかをT / Fで判定する
',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : フォローした日時',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (FOLLOW_ID),
	CONSTRAINT UQ_NEW_TABLE_XXX UNIQUE (FOLLOWEE_ID, FOLLOWER_ID)
) COMMENT = 'フォロー'
2018-07-08 17:26:35,970 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE REPLY
(
	REPLY_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'リプライID : リプライID',
	REPLYEE_ID BIGINT NOT NULL COMMENT 'リプライした会員ID : リプライした会員ID
',
	REPLYER_ID BIGINT NOT NULL COMMENT 'リプライされた会員ID : リプライされた会員のID',
	REPLYEE_TWEET_ID BIGINT NOT NULL COMMENT 'リプライしたツイートID : リプライしたツイートのID
',
	REPLYER_TWEET_ID BIGINT NOT NULL COMMENT 'リプライされたツイートID : リプライされたツイートのID',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : リプライした日時',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (REPLY_ID)
) COMMENT = 'リプライ'
2018-07-08 17:26:35,979 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE RETWEET
(
	RETWEET_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'リツイートID : リツイートID',
	USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID
リツイートする人の会員IDが入る
',
	TWEET_ID BIGINT NOT NULL COMMENT 'ツイートID : ツイートID
リツイートされるツイートIDが格納される',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
リツイートしたかどうかを見る
一回リツイートして辞めてもう一回リツイートをするときにTにして表示できるようにする
',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : 登録日時',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (RETWEET_ID),
	CONSTRAINT UQ_NEW_TABLE_XXX UNIQUE (USER_ID, TWEET_ID)
) COMMENT = 'リツイート'
2018-07-08 17:26:36,073 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'ツイートID : ツイートID',
	USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID
',
	TWEET VARCHAR(140) NOT NULL COMMENT 'ツイート : ツイート
140文字制限されているので最大長140に設定',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : ツイートした時間',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'ツイート'
2018-07-08 17:26:36,083 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE USER
(
	USER_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員ID',
	USER_NAME VARCHAR(64) NOT NULL COMMENT '会員名称 : 会員名称。
このデータが名前として表示される。',
	MAIL_ADDRESS VARCHAR(256) NOT NULL UNIQUE COMMENT 'メールアドレス : メールアドレス',
	BIRTH_DATE DATE COMMENT '誕生日 : 誕生日
時間までは考慮しない
特に入力する必要もないのでNULLを許容する',
	PROFILE_SENTENCE VARCHAR(300) NOT NULL COMMENT 'プロフィール文 : プロフィール文
長いのも困るので300文字',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : 登録日時
ユーザがサービスに登録した日時を格納する',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時
',
	USER_STATUS_CODE VARCHAR(3) NOT NULL COMMENT '会員ステータスコード : 会員の状態を表すコード',
	PRIMARY KEY (USER_ID)
) ENGINE = InnoDB COMMENT = '会員 : 会員テーブル' DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci
2018-07-08 17:26:36,181 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE USER_STATUS
(
	USER_STATUS_CODE VARCHAR(3) NOT NULL COMMENT '会員ステータスコード : 会員の状態を表すコード',
	USER_STATUS VARCHAR(50) NOT NULL COMMENT '会員ステータス : 会員ステータスの区分値
50文字あれば足りると予想',
	DESCRIPTION VARCHAR(200) NOT NULL COMMENT '説明 : 会員ステータスの説明',
	PRIMARY KEY (USER_STATUS_CODE),
	CONSTRAINT UQ_NEW_TABLE_XXX UNIQUE (USER_STATUS, DESCRIPTION)
) COMMENT = '会員ステータス'
2018-07-08 17:26:36,190 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE FAVOLITE
	ADD CONSTRAINT FK_FAVOLITE_TWEET FOREIGN KEY (TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:26:36,212 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYEE_TWEET FOREIGN KEY (REPLYEE_TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:26:36,234 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYER_TWEET FOREIGN KEY (REPLYER_TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:26:36,257 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE RETWEET
	ADD CONSTRAINT FK_RETWEET_TWEET FOREIGN KEY (TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:26:36,312 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FAVOLITE
	ADD CONSTRAINT FK_FAVOLITE_USER FOREIGN KEY (USER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:26:36,334 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOW
	ADD CONSTRAINT FK_FOLLOWEE_USER FOREIGN KEY (FOLLOWEE_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:26:36,358 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOW
	ADD CONSTRAINT FK_FOLLOWER_USER FOREIGN KEY (FOLLOWER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:26:36,384 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYEE_USER FOREIGN KEY (REPLYEE_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:26:36,410 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYER_USER FOREIGN KEY (REPLYER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:26:36,438 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE RETWEET
	ADD CONSTRAINT FK_RETWEET_USER FOREIGN KEY (USER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:26:36,466 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
	ADD CONSTRAINT FK_TWEET_USER FOREIGN KEY (USER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:26:36,502 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE USER
	ADD CONSTRAINT FK_USER_USER_STATUS FOREIGN KEY (USER_STATUS_CODE)
	REFERENCES USER_STATUS (USER_STATUS_CODE)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:26:36,510 [main] INFO  (DfSqlFileFireMan#fire():93) - {Create Schema}: success=18 failure=1 *break (in 1 files)
2018-07-08 17:26:36,513 [main] ERROR (DfDBFluteTaskUtil#logException():150) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute DBFlute Task 'ReplaceSchema'.

[Advice]
Check the exception messages and the stack traces.

[Database Product]
MySQL 8.0.11

[JDBC Driver]
MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
* * * * * * * * * */
org.dbflute.exception.SQLFailureException: Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute the SQL!

[SQL File]
playsql/replace-schema.sql

[Executed SQL]
ALTER TABLE USER
	ADD CONSTRAINT FK_USER_USER_STATUS FOREIGN KEY (USER_STATUS_CODE)
	REFERENCES USER_STATUS (USER_STATUS_CODE)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT

[SQLState]
HY000

[ErrorCode]
1215

[SQLException]
java.sql.SQLException
Cannot add foreign key constraint
* * * * * * * * * */
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerBase.throwSQLFailureException(DfSqlFileRunnerBase.java:587)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.execSQL(DfSqlFileRunnerExecute.java:80)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerBase.runTransaction(DfSqlFileRunnerBase.java:122)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileFireMan.processSqlFile(DfSqlFileFireMan.java:173)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileFireMan.fire(DfSqlFileFireMan.java:71)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.createSchema(DfCreateSchemaProcess.java:274)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.execute(DfCreateSchemaProcess.java:143)
	at org.dbflute.task.DfReplaceSchemaTask.createSchema(DfReplaceSchemaTask.java:301)
	at org.dbflute.task.DfReplaceSchemaTask.executeCoreProcess(DfReplaceSchemaTask.java:246)
	at org.dbflute.task.DfReplaceSchemaTask.processReplaceSchema(DfReplaceSchemaTask.java:232)
	at org.dbflute.task.DfReplaceSchemaTask.doExecute(DfReplaceSchemaTask.java:158)
	at org.dbflute.task.bs.DfAbstractTexenTask$1.callActualExecute(DfAbstractTexenTask.java:129)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTexenTask.execute(DfAbstractTexenTask.java:151)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
Caused by: java.sql.SQLException: Cannot add foreign key constraint
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2482)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2440)
	at com.mysql.jdbc.StatementImpl.executeInternal(StatementImpl.java:845)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:745)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.processNonDispatch(DfSqlFileRunnerExecute.java:98)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema.processNonDispatch(DfCreateSchemaProcess.java:460)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.execSQL(DfSqlFileRunnerExecute.java:66)
	... 29 more
2018-07-08 17:26:36,562 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2018-07-08 17:26:36,567 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m03s042ms *Abort

  DBFLUTE_CLIENT: {demo}
    database  = mysql (MySQL 8.0.11)
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Create Schema}: success=18 failure=1 *break (in 1 files)
  x replace-schema.sql
   >> (failed: Look at the exception message)
    * * * * * *
    * Failure *
    * * * * * *
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2018-07-08 17:27:59,622 [main] INFO  (DfReplaceSchemaTask#begin():92) - +------------------------------------------+
2018-07-08 17:27:59,624 [main] INFO  (DfReplaceSchemaTask#begin():93) - |                                          |
2018-07-08 17:27:59,625 [main] INFO  (DfReplaceSchemaTask#begin():94) - |              ReplaceSchema               |
2018-07-08 17:27:59,630 [main] INFO  (DfReplaceSchemaTask#begin():102) - |                                          |
2018-07-08 17:27:59,630 [main] INFO  (DfReplaceSchemaTask#begin():103) - +------------------------------------------+
2018-07-08 17:27:59,631 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():401) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2018-07-08 17:28:01,172 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 17:28:01,172 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 17:28:01,172 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 17:28:01,173 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 17:28:01,181 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2018-07-08 17:28:01,766 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 8.0.11
2018-07-08 17:28:01,766 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2018-07-08 17:28:01,777 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():229) - 
2018-07-08 17:28:01,778 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():230) - * * * * * * * * * * *
2018-07-08 17:28:01,778 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():231) - *                   *
2018-07-08 17:28:01,779 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():232) - * Initialize Schema *
2018-07-08 17:28:01,780 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():233) - *                   *
2018-07-08 17:28:01,780 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():234) - * * * * * * * * * * *
2018-07-08 17:28:01,792 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2018-07-08 17:28:01,792 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {twitter.$$NoNameSchema$$ as main}
2018-07-08 17:28:01,793 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2018-07-08 17:28:01,870 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table FAVOLITE
2018-07-08 17:28:01,884 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table FOLLOW
2018-07-08 17:28:01,899 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table REPLY
2018-07-08 17:28:01,910 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table RETWEET
2018-07-08 17:28:01,933 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table USER_STATUS
2018-07-08 17:28:01,943 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table FAVOLITE drop foreign key FK_FAVOLITE_TWEET
2018-07-08 17:28:01,952 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table FAVOLITE drop foreign key FK_FAVOLITE_USER
2018-07-08 17:28:01,968 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table FOLLOW drop foreign key FK_FOLLOWEE_USER
2018-07-08 17:28:01,979 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table FOLLOW drop foreign key FK_FOLLOWER_USER
2018-07-08 17:28:01,991 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table REPLY drop foreign key FK_REPLYEE_USER
2018-07-08 17:28:02,005 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table REPLY drop foreign key FK_REPLYEE_TWEET
2018-07-08 17:28:02,014 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table REPLY drop foreign key FK_REPLYER_USER
2018-07-08 17:28:02,025 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table REPLY drop foreign key FK_REPLYER_TWEET
2018-07-08 17:28:02,037 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table RETWEET drop foreign key FK_RETWEET_TWEET
2018-07-08 17:28:02,046 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table RETWEET drop foreign key FK_RETWEET_USER
2018-07-08 17:28:02,058 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table TWEET drop foreign key FK_TWEET_USER
2018-07-08 17:28:02,070 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table FAVOLITE
2018-07-08 17:28:02,074 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table FOLLOW
2018-07-08 17:28:02,079 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table REPLY
2018-07-08 17:28:02,084 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table RETWEET
2018-07-08 17:28:02,088 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table TWEET
2018-07-08 17:28:02,095 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table USER
2018-07-08 17:28:02,100 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table USER_STATUS
2018-07-08 17:28:02,137 [main] INFO  (DfCreateSchemaProcess#createSchema():266) - 
2018-07-08 17:28:02,138 [main] INFO  (DfCreateSchemaProcess#createSchema():267) - * * * * * * * * *
2018-07-08 17:28:02,138 [main] INFO  (DfCreateSchemaProcess#createSchema():268) - *               *
2018-07-08 17:28:02,138 [main] INFO  (DfCreateSchemaProcess#createSchema():269) - * Create Schema *
2018-07-08 17:28:02,138 [main] INFO  (DfCreateSchemaProcess#createSchema():270) - *               *
2018-07-08 17:28:02,138 [main] INFO  (DfCreateSchemaProcess#createSchema():271) - * * * * * * * * *
2018-07-08 17:28:02,142 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: replace-schema.sql
2018-07-08 17:28:02,145 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE FAVOLITE
(
	FAVOLITE_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'お気に入りID : お気に入りID',
	USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID
',
	TWEET_ID BIGINT NOT NULL COMMENT 'ツイートID : お気に入りしたツイートID
',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : お気に入りした時間',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時
',
	PRIMARY KEY (FAVOLITE_ID)
) COMMENT = 'お気に入り'
2018-07-08 17:28:02,161 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE FOLLOW
(
	FOLLOW_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'フォローID : フォローID',
	FOLLOWEE_ID BIGINT NOT NULL COMMENT 'フォロイーID : フォロイーID
フォローする人の会員IDが入る
',
	FOLLOWER_ID BIGINT NOT NULL COMMENT 'フォロワーID : フォロワーID
フォローされる人のIDが入る',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
フォローされているかをT / Fで判定する
',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : フォローした日時',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (FOLLOW_ID),
	CONSTRAINT UQ_NEW_TABLE_XXX UNIQUE (FOLLOWEE_ID, FOLLOWER_ID)
) COMMENT = 'フォロー'
2018-07-08 17:28:02,233 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE REPLY
(
	REPLY_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'リプライID : リプライID',
	REPLYEE_ID BIGINT NOT NULL COMMENT 'リプライした会員ID : リプライした会員ID
',
	REPLYER_ID BIGINT NOT NULL COMMENT 'リプライされた会員ID : リプライされた会員のID',
	REPLYEE_TWEET_ID BIGINT NOT NULL COMMENT 'リプライしたツイートID : リプライしたツイートのID
',
	REPLYER_TWEET_ID BIGINT NOT NULL COMMENT 'リプライされたツイートID : リプライされたツイートのID',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : リプライした日時',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (REPLY_ID)
) COMMENT = 'リプライ'
2018-07-08 17:28:02,243 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE RETWEET
(
	RETWEET_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'リツイートID : リツイートID',
	USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID
リツイートする人の会員IDが入る
',
	TWEET_ID BIGINT NOT NULL COMMENT 'ツイートID : ツイートID
リツイートされるツイートIDが格納される',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
リツイートしたかどうかを見る
一回リツイートして辞めてもう一回リツイートをするときにTにして表示できるようにする
',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : 登録日時',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (RETWEET_ID),
	CONSTRAINT UQ_NEW_TABLE_XXX UNIQUE (USER_ID, TWEET_ID)
) COMMENT = 'リツイート'
2018-07-08 17:28:02,253 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'ツイートID : ツイートID',
	USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID
',
	TWEET VARCHAR(140) NOT NULL COMMENT 'ツイート : ツイート
140文字制限されているので最大長140に設定',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : ツイートした時間',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'ツイート'
2018-07-08 17:28:02,355 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE USER
(
	USER_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員ID',
	USER_NAME VARCHAR(64) NOT NULL COMMENT '会員名称 : 会員名称。
このデータが名前として表示される。',
	MAIL_ADDRESS VARCHAR(256) NOT NULL UNIQUE COMMENT 'メールアドレス : メールアドレス',
	USER_STATUS_CODE VARCHAR(3) NOT NULL COMMENT '会員ステータスコード : 会員の状態を表すコード',
	BIRTH_DATE DATE COMMENT '誕生日 : 誕生日
時間までは考慮しない
特に入力する必要もないのでNULLを許容する',
	PROFILE_SENTENCE VARCHAR(300) NOT NULL COMMENT 'プロフィール文 : プロフィール文
長いのも困るので300文字',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : 登録日時
ユーザがサービスに登録した日時を格納する',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時
',
	PRIMARY KEY (USER_ID)
) ENGINE = InnoDB COMMENT = '会員 : 会員テーブル' DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci
2018-07-08 17:28:02,376 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE USER_STATUS
(
	USER_STATUS_CODE VARCHAR(3) NOT NULL COMMENT '会員ステータスコード : 会員の状態を表すコード',
	USER_STATUS VARCHAR(50) NOT NULL COMMENT '会員ステータス : 会員ステータスの区分値
50文字あれば足りると予想',
	DESCRIPTION VARCHAR(200) NOT NULL COMMENT '説明 : 会員ステータスの説明',
	PRIMARY KEY (USER_STATUS_CODE),
	CONSTRAINT UQ_NEW_TABLE_XXX UNIQUE (USER_STATUS, DESCRIPTION)
) COMMENT = '会員ステータス'
2018-07-08 17:28:02,457 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE FAVOLITE
	ADD CONSTRAINT FK_FAVOLITE_TWEET FOREIGN KEY (TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:28:02,476 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYEE_TWEET FOREIGN KEY (REPLYEE_TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:28:02,497 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYER_TWEET FOREIGN KEY (REPLYER_TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:28:02,518 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE RETWEET
	ADD CONSTRAINT FK_RETWEET_TWEET FOREIGN KEY (TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:28:02,540 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FAVOLITE
	ADD CONSTRAINT FK_FAVOLITE_USER FOREIGN KEY (USER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:28:02,563 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOW
	ADD CONSTRAINT FK_FOLLOWEE_USER FOREIGN KEY (FOLLOWEE_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:28:02,586 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOW
	ADD CONSTRAINT FK_FOLLOWER_USER FOREIGN KEY (FOLLOWER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:28:02,607 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYEE_USER FOREIGN KEY (REPLYEE_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:28:02,631 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYER_USER FOREIGN KEY (REPLYER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:28:02,656 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE RETWEET
	ADD CONSTRAINT FK_RETWEET_USER FOREIGN KEY (USER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:28:02,684 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
	ADD CONSTRAINT FK_TWEET_USER FOREIGN KEY (USER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:28:02,711 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE USER
	ADD CONSTRAINT FK_USER_USER_STATUS FOREIGN KEY (USER_STATUS_CODE)
	REFERENCES USER_STATUS (USER_STATUS_CODE)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:28:02,720 [main] INFO  (DfSqlFileFireMan#fire():93) - {Create Schema}: success=18 failure=1 *break (in 1 files)
2018-07-08 17:28:02,723 [main] ERROR (DfDBFluteTaskUtil#logException():150) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute DBFlute Task 'ReplaceSchema'.

[Advice]
Check the exception messages and the stack traces.

[Database Product]
MySQL 8.0.11

[JDBC Driver]
MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
* * * * * * * * * */
org.dbflute.exception.SQLFailureException: Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute the SQL!

[SQL File]
playsql/replace-schema.sql

[Executed SQL]
ALTER TABLE USER
	ADD CONSTRAINT FK_USER_USER_STATUS FOREIGN KEY (USER_STATUS_CODE)
	REFERENCES USER_STATUS (USER_STATUS_CODE)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT

[SQLState]
HY000

[ErrorCode]
1215

[SQLException]
java.sql.SQLException
Cannot add foreign key constraint
* * * * * * * * * */
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerBase.throwSQLFailureException(DfSqlFileRunnerBase.java:587)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.execSQL(DfSqlFileRunnerExecute.java:80)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerBase.runTransaction(DfSqlFileRunnerBase.java:122)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileFireMan.processSqlFile(DfSqlFileFireMan.java:173)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileFireMan.fire(DfSqlFileFireMan.java:71)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.createSchema(DfCreateSchemaProcess.java:274)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.execute(DfCreateSchemaProcess.java:143)
	at org.dbflute.task.DfReplaceSchemaTask.createSchema(DfReplaceSchemaTask.java:301)
	at org.dbflute.task.DfReplaceSchemaTask.executeCoreProcess(DfReplaceSchemaTask.java:246)
	at org.dbflute.task.DfReplaceSchemaTask.processReplaceSchema(DfReplaceSchemaTask.java:232)
	at org.dbflute.task.DfReplaceSchemaTask.doExecute(DfReplaceSchemaTask.java:158)
	at org.dbflute.task.bs.DfAbstractTexenTask$1.callActualExecute(DfAbstractTexenTask.java:129)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTexenTask.execute(DfAbstractTexenTask.java:151)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
Caused by: java.sql.SQLException: Cannot add foreign key constraint
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2482)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2440)
	at com.mysql.jdbc.StatementImpl.executeInternal(StatementImpl.java:845)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:745)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.processNonDispatch(DfSqlFileRunnerExecute.java:98)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema.processNonDispatch(DfCreateSchemaProcess.java:460)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.execSQL(DfSqlFileRunnerExecute.java:66)
	... 29 more
2018-07-08 17:28:02,739 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2018-07-08 17:28:02,744 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m03s138ms *Abort

  DBFLUTE_CLIENT: {demo}
    database  = mysql (MySQL 8.0.11)
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Create Schema}: success=18 failure=1 *break (in 1 files)
  x replace-schema.sql
   >> (failed: Look at the exception message)
    * * * * * *
    * Failure *
    * * * * * *
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2018-07-08 17:31:33,093 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2018-07-08 17:31:33,096 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2018-07-08 17:31:33,097 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2018-07-08 17:31:33,097 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2018-07-08 17:31:33,097 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2018-07-08 17:31:33,117 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 17:31:33,118 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 17:31:33,118 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 17:31:33,118 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 17:31:33,156 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2018-07-08 17:31:33,157 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2018-07-08 17:31:33,157 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2018-07-08 17:31:33,170 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 17:31:33,266 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2018-07-08 17:31:33,276 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2018-07-08 17:31:33,921 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 8.0.11
2018-07-08 17:31:33,922 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2018-07-08 17:31:33,923 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2018-07-08 17:31:33,924 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2018-07-08 17:31:33,925 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {twitter.$$NoNameSchema$$ as main}
2018-07-08 17:31:33,925 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2018-07-08 17:31:33,935 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'twitter' order by table_name asc
2018-07-08 17:31:33,943 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'twitter' order by table_name asc, column_name asc
2018-07-08 17:31:33,957 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'twitter' and DATA_TYPE = 'datetime'
2018-07-08 17:31:33,968 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2018-07-08 17:31:33,969 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2018-07-08 17:31:33,969 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2018-07-08 17:31:33,969 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.FAVOLITE(TABLE) // お気に入り
2018-07-08 17:31:34,015 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.FOLLOW(TABLE) // フォロー
2018-07-08 17:31:34,037 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.REPLY(TABLE) // リプライ
2018-07-08 17:31:34,064 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.RETWEET(TABLE) // リツイート
2018-07-08 17:31:34,079 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.TWEET(TABLE) // ツイート
2018-07-08 17:31:34,092 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.USER(TABLE) // 会員 : 会員テーブル
2018-07-08 17:31:34,107 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.USER_STATUS(TABLE) // 会員ステータス
2018-07-08 17:31:34,130 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2018-07-08 17:31:34,130 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2018-07-08 17:31:34,130 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 7
2018-07-08 17:31:34,130 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2018-07-08 17:31:34,131 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2018-07-08 17:31:34,132 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2018-07-08 17:31:34,134 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2018-07-08 17:31:34,135 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-demo.xml
2018-07-08 17:31:34,135 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2018-07-08 17:31:34,162 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2018-07-08 17:31:34,164 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 17:31:34,221 [main] INFO  (DfSchemaDiff#setupDocumentAuthorOfNextSchema():419) - *Cannot get git branch of next schema.
java.lang.IllegalArgumentException: The argument 'object' should not be null.
	at org.dbflute.optional.OptionalObject.of(OptionalObject.java:69)
	at org.dbflute.optional.OptionalThing.of(OptionalThing.java:47)
	at org.dbflute.logic.doc.supplement.author.DfDocumentAuthorLogic.getGitBranch(DfDocumentAuthorLogic.java:92)
	at org.dbflute.logic.jdbc.schemadiff.DfSchemaDiff.setupDocumentAuthorOfNextSchema(DfSchemaDiff.java:417)
	at org.dbflute.logic.jdbc.schemadiff.DfSchemaDiff.loadNextSchema(DfSchemaDiff.java:406)
	at org.dbflute.logic.jdbc.schemaxml.DfSchemaXmlSerializer.doLoadNextSchema(DfSchemaXmlSerializer.java:1551)
	at org.dbflute.logic.jdbc.schemaxml.DfSchemaXmlSerializer.loadNextSchema(DfSchemaXmlSerializer.java:1543)
	at org.dbflute.logic.jdbc.schemaxml.DfSchemaXmlSerializer.serialize(DfSchemaXmlSerializer.java:332)
	at org.apache.torque.task.TorqueJDBCTransformTask.doExecute(TorqueJDBCTransformTask.java:127)
	at org.dbflute.task.bs.DfAbstractTask$1.callActualExecute(DfAbstractTask.java:113)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTask.execute(DfAbstractTask.java:135)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.helper.SingleCheckExecutor.executeTargets(SingleCheckExecutor.java:38)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:416)
	at org.apache.tools.ant.taskdefs.CallTarget.execute(CallTarget.java:105)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
2018-07-08 17:31:34,257 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1555) -  -> different from previous (schema diff)
2018-07-08 17:31:34,259 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1557) - ...Serializing schema-diff:
2018-07-08 17:31:34,259 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1558) -   filePath = ./schema/project-history-demo.diffmap
2018-07-08 17:31:34,270 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2018-07-08 17:31:34,280 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s198ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql (MySQL 8.0.11)
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2018-07-08 17:31:34,828 [main] INFO  (TorqueDocumentationTask#begin():187) - +------------------------------------------+
2018-07-08 17:31:34,830 [main] INFO  (TorqueDocumentationTask#begin():188) - |                                          |
2018-07-08 17:31:34,830 [main] INFO  (TorqueDocumentationTask#begin():189) - |                   Doc                    |
2018-07-08 17:31:34,830 [main] INFO  (TorqueDocumentationTask#begin():197) - |                                          |
2018-07-08 17:31:34,830 [main] INFO  (TorqueDocumentationTask#begin():198) - +------------------------------------------+
2018-07-08 17:31:34,845 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 17:31:34,846 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 17:31:34,846 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 17:31:34,846 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 17:31:34,847 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():259) - 
2018-07-08 17:31:34,847 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():260) - * * * * * * * * * * *
2018-07-08 17:31:34,848 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():261) - *                   *
2018-07-08 17:31:34,848 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():262) - *    Schema HTML    *
2018-07-08 17:31:34,848 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():263) - *                   *
2018-07-08 17:31:34,848 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():264) - * * * * * * * * * * *
2018-07-08 17:31:34,934 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 17:31:34,993 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2018-07-08 17:31:35,173 [main] INFO  (Database#doEnableDocumentOutputDirectory():1224) - ...Setting up documentOutputDirectory: ./output/doc
2018-07-08 17:31:35,180 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2018-07-08 17:31:35,180 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2018-07-08 17:31:35,181 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2018-07-08 17:31:35,182 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2018-07-08 17:31:35,182 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2018-07-08 17:31:35,183 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2018-07-08 17:31:35,184 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2018-07-08 17:31:35,185 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2018-07-08 17:31:35,186 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2018-07-08 17:31:35,194 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():233) - ...Loading schema history
2018-07-08 17:31:35,215 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():237) -  -> found history: count=2
2018-07-08 17:31:35,518 [main] INFO  (DfRefreshMan#resolveProjectAutoDetect():105) - *Cannot auto-detect your refresh Eclipse proejct.
2018-07-08 17:31:35,521 [main] INFO  (DfRefreshResourceProcess#show():299) - /===========================================================================
2018-07-08 17:31:35,522 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Refreshing [$$AutoDetect$$] by http://localhost:8386/
2018-07-08 17:31:35,527 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Retrying refreshing by default secondary URL http://localhost:8387/
2018-07-08 17:31:35,528 [main] INFO  (DfRefreshResourceProcess#show():299) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to refresh the resources.

[Project List]
[$$AutoDetect$$]

[Request URL]
http://localhost:8386/

[IOExpception]
ConnectException
Connection refused (Connection refused)
* * * * * * * * * */
2018-07-08 17:31:35,529 [main] INFO  (DfRefreshResourceProcess#show():299) - ==========/
2018-07-08 17:31:35,531 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s714ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2018-07-08 17:31:37,076 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2018-07-08 17:31:37,078 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2018-07-08 17:31:37,078 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2018-07-08 17:31:37,079 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2018-07-08 17:31:37,079 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2018-07-08 17:31:37,096 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 17:31:37,096 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 17:31:37,097 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 17:31:37,097 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 17:31:37,112 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2018-07-08 17:31:37,112 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2018-07-08 17:31:37,145 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 17:31:37,201 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2018-07-08 17:31:37,394 [main] INFO  (Database#doEnableGenerateOutputDirectory():1192) - ...Setting up generateOutputDirectory: ../src/main/java
2018-07-08 17:31:37,396 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2018-07-08 17:31:37,396 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2018-07-08 17:31:37,397 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2018-07-08 17:31:37,398 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2018-07-08 17:31:37,398 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2018-07-08 17:31:37,399 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2018-07-08 17:31:37,401 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2018-07-08 17:31:37,401 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2018-07-08 17:31:37,402 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2018-07-08 17:31:37,410 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2018-07-08 17:31:37,410 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2018-07-08 17:31:37,410 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2018-07-08 17:31:37,410 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2018-07-08 17:31:37,411 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2018-07-08 17:31:37,411 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2018-07-08 17:31:37,411 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2018-07-08 17:31:37,411 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2018-07-08 17:31:37,411 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2018-07-08 17:31:37,412 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2018-07-08 17:31:37,421 [main] INFO  (Database#info():2785) - public void parseAllCommon() {
2018-07-08 17:31:37,422 [main] INFO  (Database#info():2785) -     parse('DBCurrent');
2018-07-08 17:31:37,425 [main] INFO  (Database#info():2785) -     parse('DBFluteConfig');
2018-07-08 17:31:37,438 [main] INFO  (Database#info():2785) -     parse('DBFluteInitializer');
2018-07-08 17:31:37,441 [main] INFO  (Database#info():2785) -     parse('DBMetaInstanceHandler');
2018-07-08 17:31:37,454 [main] INFO  (Database#info():2785) -     parse('EntityDefinedCommonColumn');
2018-07-08 17:31:37,456 [main] INFO  (Database#info():2785) -     parse('ImplementedBehaviorSelector');
2018-07-08 17:31:37,462 [main] INFO  (Database#info():2785) -     parse('ImplementedCommonColumnAutoSetupper');
2018-07-08 17:31:37,464 [main] INFO  (Database#info():2785) -     parse('ImplementedInvokerAssistant');
2018-07-08 17:31:37,470 [main] INFO  (Database#info():2785) -     parse('ImplementedSqlClauseCreator');
2018-07-08 17:31:37,472 [main] INFO  (Database#info():2785) - }
2018-07-08 17:31:37,473 [main] INFO  (Database#info():2785) - public void parseContainerConfig() {
2018-07-08 17:31:37,473 [main] INFO  (Database#info():2785) -     parse('demo/dbflute/allcommon/DBFluteBeansJavaConfig.java')
2018-07-08 17:31:37,483 [main] INFO  (Database#info():2785) - }
2018-07-08 17:31:37,486 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2018-07-08 17:31:37,502 [main] INFO  (DfOldClassHandler#info():1045) -     delete('UserNss');
2018-07-08 17:31:37,507 [main] INFO  (DfOldClassHandler#info():1045) - }
2018-07-08 17:31:37,508 [main] INFO  (Database#info():2785) - public void parseTableClass() {
2018-07-08 17:31:37,508 [main] INFO  (Database#info():2785) -     parse('FAVOLITE');
2018-07-08 17:31:37,729 [main] INFO  (Database#info():2785) -     parse('FOLLOW');
2018-07-08 17:31:37,860 [main] INFO  (Database#info():2785) -     parse('REPLY');
2018-07-08 17:31:38,023 [main] INFO  (Database#info():2785) -     parse('RETWEET');
2018-07-08 17:31:38,125 [main] INFO  (Database#info():2785) -     parse('TWEET');
2018-07-08 17:31:38,287 [main] INFO  (Database#info():2785) -     parse('USER');
2018-07-08 17:31:38,444 [main] INFO  (Database#info():2785) -     parse('USER_STATUS');
2018-07-08 17:31:38,504 [main] INFO  (Database#info():2785) - }
2018-07-08 17:31:38,504 [main] INFO  (Database#info():2785) -  
2018-07-08 17:31:38,520 [main] INFO  (DfRefreshMan#resolveProjectAutoDetect():105) - *Cannot auto-detect your refresh Eclipse proejct.
2018-07-08 17:31:38,521 [main] INFO  (DfRefreshResourceProcess#show():299) - /===========================================================================
2018-07-08 17:31:38,522 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Refreshing [$$AutoDetect$$] by http://localhost:8386/
2018-07-08 17:31:38,523 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Retrying refreshing by default secondary URL http://localhost:8387/
2018-07-08 17:31:38,524 [main] INFO  (DfRefreshResourceProcess#show():299) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to refresh the resources.

[Project List]
[$$AutoDetect$$]

[Request URL]
http://localhost:8386/

[IOExpception]
ConnectException
Connection refused (Connection refused)
* * * * * * * * * */
2018-07-08 17:31:38,525 [main] INFO  (DfRefreshResourceProcess#show():299) - ==========/
2018-07-08 17:31:38,529 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s466ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2018-07-08 17:31:39,148 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2018-07-08 17:31:39,150 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2018-07-08 17:31:39,151 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2018-07-08 17:31:39,151 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2018-07-08 17:31:39,151 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2018-07-08 17:31:39,163 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 17:31:39,163 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 17:31:39,163 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 17:31:39,164 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 17:31:39,181 [main] INFO  (DfSqlFileFireMan#fire():93) - {Fired SQL}: success=0 failure=0 (in 0 files)
2018-07-08 17:31:39,188 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s047ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2018-07-08 17:31:39,724 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2018-07-08 17:31:39,725 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2018-07-08 17:31:39,726 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2018-07-08 17:31:39,726 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2018-07-08 17:31:39,726 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2018-07-08 17:31:39,738 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 17:31:39,738 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 17:31:39,738 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 17:31:39,738 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 17:31:39,747 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2018-07-08 17:31:39,747 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2018-07-08 17:31:39,751 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 17:31:39,810 [main] INFO  (DfSqlFileFireMan#fire():93) - {Fired SQL}: success=0 failure=0 (in 0 files)
2018-07-08 17:31:39,831 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2018-07-08 17:31:39,831 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2018-07-08 17:31:39,831 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2018-07-08 17:31:39,831 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2018-07-08 17:31:39,831 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2018-07-08 17:31:39,832 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2018-07-08 17:31:39,832 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2018-07-08 17:31:39,832 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2018-07-08 17:31:39,833 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2018-07-08 17:31:39,958 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1208) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2018-07-08 17:31:39,960 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2018-07-08 17:31:39,967 [main] INFO  (DfOldClassHandler#info():1045) - }
2018-07-08 17:31:39,967 [main] INFO  (Database#info():2785) - public void parseCustomizeEntity() {
2018-07-08 17:31:39,968 [main] INFO  (Database#info():2785) - }
2018-07-08 17:31:39,975 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2018-07-08 17:31:39,976 [main] INFO  (DfRefreshMan#resolveProjectAutoDetect():105) - *Cannot auto-detect your refresh Eclipse proejct.
2018-07-08 17:31:39,977 [main] INFO  (DfRefreshResourceProcess#show():299) - /===========================================================================
2018-07-08 17:31:39,977 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Refreshing [$$AutoDetect$$] by http://localhost:8386/
2018-07-08 17:31:39,978 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Retrying refreshing by default secondary URL http://localhost:8387/
2018-07-08 17:31:39,979 [main] INFO  (DfRefreshResourceProcess#show():299) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to refresh the resources.

[Project List]
[$$AutoDetect$$]

[Request URL]
http://localhost:8386/

[IOExpception]
ConnectException
Connection refused (Connection refused)
* * * * * * * * * */
2018-07-08 17:31:40,033 [main] INFO  (DfRefreshResourceProcess#show():299) - ==========/
2018-07-08 17:31:40,037 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s320ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2018-07-08 17:32:02,996 [main] INFO  (DfReplaceSchemaTask#begin():92) - +------------------------------------------+
2018-07-08 17:32:02,999 [main] INFO  (DfReplaceSchemaTask#begin():93) - |                                          |
2018-07-08 17:32:02,999 [main] INFO  (DfReplaceSchemaTask#begin():94) - |              ReplaceSchema               |
2018-07-08 17:32:03,006 [main] INFO  (DfReplaceSchemaTask#begin():102) - |                                          |
2018-07-08 17:32:03,006 [main] INFO  (DfReplaceSchemaTask#begin():103) - +------------------------------------------+
2018-07-08 17:32:03,007 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():401) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2018-07-08 17:32:05,218 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 17:32:05,218 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 17:32:05,219 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 17:32:05,219 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 17:32:05,228 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2018-07-08 17:32:05,812 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 8.0.11
2018-07-08 17:32:05,812 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2018-07-08 17:32:05,823 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():229) - 
2018-07-08 17:32:05,824 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():230) - * * * * * * * * * * *
2018-07-08 17:32:05,824 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():231) - *                   *
2018-07-08 17:32:05,825 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():232) - * Initialize Schema *
2018-07-08 17:32:05,825 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():233) - *                   *
2018-07-08 17:32:05,825 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():234) - * * * * * * * * * * *
2018-07-08 17:32:05,836 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2018-07-08 17:32:05,837 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {twitter.$$NoNameSchema$$ as main}
2018-07-08 17:32:05,837 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2018-07-08 17:32:05,895 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table FAVOLITE
2018-07-08 17:32:05,910 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table FOLLOW
2018-07-08 17:32:05,922 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table REPLY
2018-07-08 17:32:05,937 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table RETWEET
2018-07-08 17:32:05,961 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table USER_STATUS
2018-07-08 17:32:05,970 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table FAVOLITE drop foreign key FK_FAVOLITE_TWEET
2018-07-08 17:32:05,980 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table FAVOLITE drop foreign key FK_FAVOLITE_USER
2018-07-08 17:32:05,993 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table FOLLOW drop foreign key FK_FOLLOWEE_USER
2018-07-08 17:32:06,004 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table FOLLOW drop foreign key FK_FOLLOWER_USER
2018-07-08 17:32:06,023 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table REPLY drop foreign key FK_REPLYEE_USER
2018-07-08 17:32:06,034 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table REPLY drop foreign key FK_REPLYEE_TWEET
2018-07-08 17:32:06,046 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table REPLY drop foreign key FK_REPLYER_USER
2018-07-08 17:32:06,056 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table REPLY drop foreign key FK_REPLYER_TWEET
2018-07-08 17:32:06,068 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table RETWEET drop foreign key FK_RETWEET_TWEET
2018-07-08 17:32:06,075 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table RETWEET drop foreign key FK_RETWEET_USER
2018-07-08 17:32:06,086 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table TWEET drop foreign key FK_TWEET_USER
2018-07-08 17:32:06,099 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table FAVOLITE
2018-07-08 17:32:06,104 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table FOLLOW
2018-07-08 17:32:06,111 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table REPLY
2018-07-08 17:32:06,121 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table RETWEET
2018-07-08 17:32:06,126 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table TWEET
2018-07-08 17:32:06,133 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table USER
2018-07-08 17:32:06,138 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table USER_STATUS
2018-07-08 17:32:06,170 [main] INFO  (DfCreateSchemaProcess#createSchema():266) - 
2018-07-08 17:32:06,170 [main] INFO  (DfCreateSchemaProcess#createSchema():267) - * * * * * * * * *
2018-07-08 17:32:06,170 [main] INFO  (DfCreateSchemaProcess#createSchema():268) - *               *
2018-07-08 17:32:06,171 [main] INFO  (DfCreateSchemaProcess#createSchema():269) - * Create Schema *
2018-07-08 17:32:06,171 [main] INFO  (DfCreateSchemaProcess#createSchema():270) - *               *
2018-07-08 17:32:06,171 [main] INFO  (DfCreateSchemaProcess#createSchema():271) - * * * * * * * * *
2018-07-08 17:32:06,175 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: replace-schema.sql
2018-07-08 17:32:06,178 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE FAVOLITE
(
	FAVOLITE_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'お気に入りID : お気に入りID',
	USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID
',
	TWEET_ID BIGINT NOT NULL COMMENT 'ツイートID : お気に入りしたツイートID
',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : お気に入りした時間',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時
',
	PRIMARY KEY (FAVOLITE_ID)
) COMMENT = 'お気に入り'
2018-07-08 17:32:06,212 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE FOLLOW
(
	FOLLOW_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'フォローID : フォローID',
	FOLLOWEE_ID BIGINT NOT NULL COMMENT 'フォロイーID : フォロイーID
フォローする人の会員IDが入る
',
	FOLLOWER_ID BIGINT NOT NULL COMMENT 'フォロワーID : フォロワーID
フォローされる人のIDが入る',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
フォローされているかをT / Fで判定する
',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : フォローした日時',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (FOLLOW_ID),
	CONSTRAINT UQ_NEW_TABLE_XXX UNIQUE (FOLLOWEE_ID, FOLLOWER_ID)
) COMMENT = 'フォロー'
2018-07-08 17:32:06,224 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE REPLY
(
	REPLY_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'リプライID : リプライID',
	REPLYEE_ID BIGINT NOT NULL COMMENT 'リプライした会員ID : リプライした会員ID
',
	REPLYER_ID BIGINT NOT NULL COMMENT 'リプライされた会員ID : リプライされた会員のID',
	REPLYEE_TWEET_ID BIGINT NOT NULL COMMENT 'リプライしたツイートID : リプライしたツイートのID
',
	REPLYER_TWEET_ID BIGINT NOT NULL COMMENT 'リプライされたツイートID : リプライされたツイートのID',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : リプライした日時',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (REPLY_ID)
) COMMENT = 'リプライ'
2018-07-08 17:32:06,303 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE RETWEET
(
	RETWEET_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'リツイートID : リツイートID',
	USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID
リツイートする人の会員IDが入る
',
	TWEET_ID BIGINT NOT NULL COMMENT 'ツイートID : ツイートID
リツイートされるツイートIDが格納される',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
リツイートしたかどうかを見る
一回リツイートして辞めてもう一回リツイートをするときにTにして表示できるようにする
',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : 登録日時',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (RETWEET_ID),
	CONSTRAINT UQ_NEW_TABLE_XXX UNIQUE (USER_ID, TWEET_ID)
) COMMENT = 'リツイート'
2018-07-08 17:32:06,319 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'ツイートID : ツイートID',
	USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID
',
	TWEET VARCHAR(140) NOT NULL COMMENT 'ツイート : ツイート
140文字制限されているので最大長140に設定',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : ツイートした時間',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'ツイート'
2018-07-08 17:32:06,328 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE USER
(
	USER_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員ID',
	USER_NAME VARCHAR(64) NOT NULL COMMENT '会員名称 : 会員名称。
このデータが名前として表示される。',
	MAIL_ADDRESS VARCHAR(256) NOT NULL UNIQUE COMMENT 'メールアドレス : メールアドレス',
	USER_STATUS_CODE VARCHAR(3) NOT NULL COMMENT '会員ステータスコード : 会員の状態を表すコード',
	BIRTH_DATE DATE COMMENT '誕生日 : 誕生日
時間までは考慮しない
特に入力する必要もないのでNULLを許容する',
	PROFILE_SENTENCE VARCHAR(300) NOT NULL COMMENT 'プロフィール文 : プロフィール文
長いのも困るので300文字',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : 登録日時
ユーザがサービスに登録した日時を格納する',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時
',
	PRIMARY KEY (USER_ID)
) ENGINE = InnoDB COMMENT = '会員 : 会員テーブル' DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci
2018-07-08 17:32:06,431 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE USER_STATUS
(
	USER_STATUS_CODE VARCHAR(3) NOT NULL COMMENT '会員ステータスコード : 会員の状態を表すコード',
	USER_STATUS VARCHAR(50) NOT NULL COMMENT '会員ステータス : 会員ステータスの区分値
50文字あれば足りると予想',
	DESCRIPTION VARCHAR(200) NOT NULL COMMENT '説明 : 会員ステータスの説明',
	PRIMARY KEY (USER_STATUS_CODE),
	CONSTRAINT UQ_NEW_TABLE_XXX UNIQUE (USER_STATUS, DESCRIPTION)
) COMMENT = '会員ステータス'
2018-07-08 17:32:06,444 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE FAVOLITE
	ADD CONSTRAINT FK_FAVOLITE_TWEET FOREIGN KEY (TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:32:06,471 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYEE_TWEET FOREIGN KEY (REPLYEE_TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:32:06,496 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYER_TWEET FOREIGN KEY (REPLYER_TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:32:06,527 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE RETWEET
	ADD CONSTRAINT FK_RETWEET_TWEET FOREIGN KEY (TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:32:06,565 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FAVOLITE
	ADD CONSTRAINT FK_FAVOLITE_USER FOREIGN KEY (USER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:32:06,590 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOW
	ADD CONSTRAINT FK_FOLLOWEE_USER FOREIGN KEY (FOLLOWEE_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:32:06,611 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOW
	ADD CONSTRAINT FK_FOLLOWER_USER FOREIGN KEY (FOLLOWER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:32:06,638 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYEE_USER FOREIGN KEY (REPLYEE_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:32:06,663 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYER_USER FOREIGN KEY (REPLYER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:32:06,690 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE RETWEET
	ADD CONSTRAINT FK_RETWEET_USER FOREIGN KEY (USER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:32:06,713 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
	ADD CONSTRAINT FK_TWEET_USER FOREIGN KEY (USER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:32:06,742 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE USER
	ADD CONSTRAINT FK_USER_USER_STATUS FOREIGN KEY (USER_STATUS_CODE)
	REFERENCES USER_STATUS (USER_STATUS_CODE)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:32:06,753 [main] INFO  (DfSqlFileFireMan#fire():93) - {Create Schema}: success=18 failure=1 *break (in 1 files)
2018-07-08 17:32:06,757 [main] ERROR (DfDBFluteTaskUtil#logException():150) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute DBFlute Task 'ReplaceSchema'.

[Advice]
Check the exception messages and the stack traces.

[Database Product]
MySQL 8.0.11

[JDBC Driver]
MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
* * * * * * * * * */
org.dbflute.exception.SQLFailureException: Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute the SQL!

[SQL File]
playsql/replace-schema.sql

[Executed SQL]
ALTER TABLE USER
	ADD CONSTRAINT FK_USER_USER_STATUS FOREIGN KEY (USER_STATUS_CODE)
	REFERENCES USER_STATUS (USER_STATUS_CODE)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT

[SQLState]
HY000

[ErrorCode]
1215

[SQLException]
java.sql.SQLException
Cannot add foreign key constraint
* * * * * * * * * */
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerBase.throwSQLFailureException(DfSqlFileRunnerBase.java:587)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.execSQL(DfSqlFileRunnerExecute.java:80)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerBase.runTransaction(DfSqlFileRunnerBase.java:122)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileFireMan.processSqlFile(DfSqlFileFireMan.java:173)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileFireMan.fire(DfSqlFileFireMan.java:71)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.createSchema(DfCreateSchemaProcess.java:274)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.execute(DfCreateSchemaProcess.java:143)
	at org.dbflute.task.DfReplaceSchemaTask.createSchema(DfReplaceSchemaTask.java:301)
	at org.dbflute.task.DfReplaceSchemaTask.executeCoreProcess(DfReplaceSchemaTask.java:246)
	at org.dbflute.task.DfReplaceSchemaTask.processReplaceSchema(DfReplaceSchemaTask.java:232)
	at org.dbflute.task.DfReplaceSchemaTask.doExecute(DfReplaceSchemaTask.java:158)
	at org.dbflute.task.bs.DfAbstractTexenTask$1.callActualExecute(DfAbstractTexenTask.java:129)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTexenTask.execute(DfAbstractTexenTask.java:151)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
Caused by: java.sql.SQLException: Cannot add foreign key constraint
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2482)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2440)
	at com.mysql.jdbc.StatementImpl.executeInternal(StatementImpl.java:845)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:745)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.processNonDispatch(DfSqlFileRunnerExecute.java:98)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema.processNonDispatch(DfCreateSchemaProcess.java:460)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.execSQL(DfSqlFileRunnerExecute.java:66)
	... 29 more
2018-07-08 17:32:06,814 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2018-07-08 17:32:06,819 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m03s838ms *Abort

  DBFLUTE_CLIENT: {demo}
    database  = mysql (MySQL 8.0.11)
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Create Schema}: success=18 failure=1 *break (in 1 files)
  x replace-schema.sql
   >> (failed: Look at the exception message)
    * * * * * *
    * Failure *
    * * * * * *
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2018-07-08 17:33:47,625 [main] INFO  (DfReplaceSchemaTask#begin():92) - +------------------------------------------+
2018-07-08 17:33:47,628 [main] INFO  (DfReplaceSchemaTask#begin():93) - |                                          |
2018-07-08 17:33:47,628 [main] INFO  (DfReplaceSchemaTask#begin():94) - |              ReplaceSchema               |
2018-07-08 17:33:47,633 [main] INFO  (DfReplaceSchemaTask#begin():102) - |                                          |
2018-07-08 17:33:47,633 [main] INFO  (DfReplaceSchemaTask#begin():103) - +------------------------------------------+
2018-07-08 17:33:47,634 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():401) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2018-07-08 17:33:49,343 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 17:33:49,344 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 17:33:49,344 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 17:33:49,344 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 17:33:49,353 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2018-07-08 17:33:49,935 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 8.0.11
2018-07-08 17:33:49,936 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2018-07-08 17:33:49,947 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():229) - 
2018-07-08 17:33:49,947 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():230) - * * * * * * * * * * *
2018-07-08 17:33:49,947 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():231) - *                   *
2018-07-08 17:33:49,948 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():232) - * Initialize Schema *
2018-07-08 17:33:49,948 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():233) - *                   *
2018-07-08 17:33:49,948 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():234) - * * * * * * * * * * *
2018-07-08 17:33:49,960 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2018-07-08 17:33:49,961 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {twitter.$$NoNameSchema$$ as main}
2018-07-08 17:33:49,961 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2018-07-08 17:33:50,083 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table FAVOLITE
2018-07-08 17:33:50,093 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table FOLLOW
2018-07-08 17:33:50,106 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table REPLY
2018-07-08 17:33:50,118 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table RETWEET
2018-07-08 17:33:50,140 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table USER_STATUS
2018-07-08 17:33:50,149 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table FAVOLITE drop foreign key FK_FAVOLITE_TWEET
2018-07-08 17:33:50,164 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table FAVOLITE drop foreign key FK_FAVOLITE_USER
2018-07-08 17:33:50,179 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table FOLLOW drop foreign key FK_FOLLOWEE_USER
2018-07-08 17:33:50,188 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table FOLLOW drop foreign key FK_FOLLOWER_USER
2018-07-08 17:33:50,202 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table REPLY drop foreign key FK_REPLYEE_USER
2018-07-08 17:33:50,214 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table REPLY drop foreign key FK_REPLYEE_TWEET
2018-07-08 17:33:50,225 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table REPLY drop foreign key FK_REPLYER_USER
2018-07-08 17:33:50,236 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table REPLY drop foreign key FK_REPLYER_TWEET
2018-07-08 17:33:50,247 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table RETWEET drop foreign key FK_RETWEET_TWEET
2018-07-08 17:33:50,254 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table RETWEET drop foreign key FK_RETWEET_USER
2018-07-08 17:33:50,263 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table TWEET drop foreign key FK_TWEET_USER
2018-07-08 17:33:50,274 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table FAVOLITE
2018-07-08 17:33:50,280 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table FOLLOW
2018-07-08 17:33:50,286 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table REPLY
2018-07-08 17:33:50,292 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table RETWEET
2018-07-08 17:33:50,298 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table TWEET
2018-07-08 17:33:50,308 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table USER
2018-07-08 17:33:50,314 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table USER_STATUS
2018-07-08 17:33:50,344 [main] INFO  (DfCreateSchemaProcess#createSchema():266) - 
2018-07-08 17:33:50,345 [main] INFO  (DfCreateSchemaProcess#createSchema():267) - * * * * * * * * *
2018-07-08 17:33:50,345 [main] INFO  (DfCreateSchemaProcess#createSchema():268) - *               *
2018-07-08 17:33:50,345 [main] INFO  (DfCreateSchemaProcess#createSchema():269) - * Create Schema *
2018-07-08 17:33:50,345 [main] INFO  (DfCreateSchemaProcess#createSchema():270) - *               *
2018-07-08 17:33:50,345 [main] INFO  (DfCreateSchemaProcess#createSchema():271) - * * * * * * * * *
2018-07-08 17:33:50,349 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: replace-schema.sql
2018-07-08 17:33:50,352 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE FAVOLITE
(
	FAVOLITE_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'お気に入りID : お気に入りID',
	USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID
',
	TWEET_ID BIGINT NOT NULL COMMENT 'ツイートID : お気に入りしたツイートID
',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : お気に入りした時間',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時
',
	PRIMARY KEY (FAVOLITE_ID)
) COMMENT = 'お気に入り'
2018-07-08 17:33:50,410 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE FOLLOW
(
	FOLLOW_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'フォローID : フォローID',
	FOLLOWEE_ID BIGINT NOT NULL COMMENT 'フォロイーID : フォロイーID
フォローする人の会員IDが入る
',
	FOLLOWER_ID BIGINT NOT NULL COMMENT 'フォロワーID : フォロワーID
フォローされる人のIDが入る',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
フォローされているかをT / Fで判定する
',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : フォローした日時',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (FOLLOW_ID),
	CONSTRAINT UQ_NEW_TABLE_XXX UNIQUE (FOLLOWEE_ID, FOLLOWER_ID)
) COMMENT = 'フォロー'
2018-07-08 17:33:50,421 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE REPLY
(
	REPLY_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'リプライID : リプライID',
	REPLYEE_ID BIGINT NOT NULL COMMENT 'リプライした会員ID : リプライした会員ID
',
	REPLYER_ID BIGINT NOT NULL COMMENT 'リプライされた会員ID : リプライされた会員のID',
	REPLYEE_TWEET_ID BIGINT NOT NULL COMMENT 'リプライしたツイートID : リプライしたツイートのID
',
	REPLYER_TWEET_ID BIGINT NOT NULL COMMENT 'リプライされたツイートID : リプライされたツイートのID',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : リプライした日時',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (REPLY_ID)
) COMMENT = 'リプライ'
2018-07-08 17:33:50,499 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE RETWEET
(
	RETWEET_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'リツイートID : リツイートID',
	USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID
リツイートする人の会員IDが入る
',
	TWEET_ID BIGINT NOT NULL COMMENT 'ツイートID : ツイートID
リツイートされるツイートIDが格納される',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
リツイートしたかどうかを見る
一回リツイートして辞めてもう一回リツイートをするときにTにして表示できるようにする
',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : 登録日時',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (RETWEET_ID),
	CONSTRAINT UQ_NEW_TABLE_XXX UNIQUE (USER_ID, TWEET_ID)
) COMMENT = 'リツイート'
2018-07-08 17:33:50,515 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'ツイートID : ツイートID',
	USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID
',
	TWEET VARCHAR(140) NOT NULL COMMENT 'ツイート : ツイート
140文字制限されているので最大長140に設定',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : ツイートした時間',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'ツイート'
2018-07-08 17:33:50,524 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE USER
(
	USER_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員ID',
	USER_NAME VARCHAR(64) NOT NULL COMMENT '会員名称 : 会員名称。
このデータが名前として表示される。',
	MAIL_ADDRESS VARCHAR(256) NOT NULL UNIQUE COMMENT 'メールアドレス : メールアドレス',
	USER_STATUS_CODE CHAR(3) NOT NULL COMMENT '会員ステータスコード : 会員の状態を表すコード',
	BIRTH_DATE DATE COMMENT '誕生日 : 誕生日
時間までは考慮しない
特に入力する必要もないのでNULLを許容する',
	PROFILE_SENTENCE VARCHAR(300) NOT NULL COMMENT 'プロフィール文 : プロフィール文
長いのも困るので300文字',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : 登録日時
ユーザがサービスに登録した日時を格納する',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時
',
	PRIMARY KEY (USER_ID)
) ENGINE = InnoDB COMMENT = '会員 : 会員テーブル' DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci
2018-07-08 17:33:50,633 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE USER_STATUS
(
	USER_STATUS_CODE CHAR(3) NOT NULL COMMENT '会員ステータスコード : 会員の状態を表すコード',
	USER_STATUS VARCHAR(50) NOT NULL COMMENT '会員ステータス : 会員ステータスの区分値
50文字あれば足りると予想',
	DESCRIPTION VARCHAR(200) NOT NULL COMMENT '説明 : 会員ステータスの説明',
	PRIMARY KEY (USER_STATUS_CODE),
	CONSTRAINT UQ_NEW_TABLE_XXX UNIQUE (USER_STATUS, DESCRIPTION)
) COMMENT = '会員ステータス'
2018-07-08 17:33:50,643 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE FAVOLITE
	ADD CONSTRAINT FK_FAVOLITE_TWEET FOREIGN KEY (TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:33:50,663 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYEE_TWEET FOREIGN KEY (REPLYEE_TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:33:50,686 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYER_TWEET FOREIGN KEY (REPLYER_TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:33:50,709 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE RETWEET
	ADD CONSTRAINT FK_RETWEET_TWEET FOREIGN KEY (TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:33:50,748 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FAVOLITE
	ADD CONSTRAINT FK_FAVOLITE_USER FOREIGN KEY (USER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:33:50,768 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOW
	ADD CONSTRAINT FK_FOLLOWEE_USER FOREIGN KEY (FOLLOWEE_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:33:50,788 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOW
	ADD CONSTRAINT FK_FOLLOWER_USER FOREIGN KEY (FOLLOWER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:33:50,810 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYEE_USER FOREIGN KEY (REPLYEE_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:33:50,835 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYER_USER FOREIGN KEY (REPLYER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:33:50,864 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE RETWEET
	ADD CONSTRAINT FK_RETWEET_USER FOREIGN KEY (USER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:33:50,888 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
	ADD CONSTRAINT FK_TWEET_USER FOREIGN KEY (USER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:33:50,927 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE USER
	ADD CONSTRAINT FK_USER_USER_STATUS FOREIGN KEY (USER_STATUS_CODE)
	REFERENCES USER_STATUS (USER_STATUS_CODE)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 17:33:50,937 [main] INFO  (DfSqlFileFireMan#fire():93) - {Create Schema}: success=18 failure=1 *break (in 1 files)
2018-07-08 17:33:50,940 [main] ERROR (DfDBFluteTaskUtil#logException():150) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute DBFlute Task 'ReplaceSchema'.

[Advice]
Check the exception messages and the stack traces.

[Database Product]
MySQL 8.0.11

[JDBC Driver]
MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
* * * * * * * * * */
org.dbflute.exception.SQLFailureException: Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute the SQL!

[SQL File]
playsql/replace-schema.sql

[Executed SQL]
ALTER TABLE USER
	ADD CONSTRAINT FK_USER_USER_STATUS FOREIGN KEY (USER_STATUS_CODE)
	REFERENCES USER_STATUS (USER_STATUS_CODE)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT

[SQLState]
HY000

[ErrorCode]
1215

[SQLException]
java.sql.SQLException
Cannot add foreign key constraint
* * * * * * * * * */
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerBase.throwSQLFailureException(DfSqlFileRunnerBase.java:587)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.execSQL(DfSqlFileRunnerExecute.java:80)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerBase.runTransaction(DfSqlFileRunnerBase.java:122)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileFireMan.processSqlFile(DfSqlFileFireMan.java:173)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileFireMan.fire(DfSqlFileFireMan.java:71)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.createSchema(DfCreateSchemaProcess.java:274)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.execute(DfCreateSchemaProcess.java:143)
	at org.dbflute.task.DfReplaceSchemaTask.createSchema(DfReplaceSchemaTask.java:301)
	at org.dbflute.task.DfReplaceSchemaTask.executeCoreProcess(DfReplaceSchemaTask.java:246)
	at org.dbflute.task.DfReplaceSchemaTask.processReplaceSchema(DfReplaceSchemaTask.java:232)
	at org.dbflute.task.DfReplaceSchemaTask.doExecute(DfReplaceSchemaTask.java:158)
	at org.dbflute.task.bs.DfAbstractTexenTask$1.callActualExecute(DfAbstractTexenTask.java:129)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTexenTask.execute(DfAbstractTexenTask.java:151)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
Caused by: java.sql.SQLException: Cannot add foreign key constraint
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2482)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2440)
	at com.mysql.jdbc.StatementImpl.executeInternal(StatementImpl.java:845)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:745)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.processNonDispatch(DfSqlFileRunnerExecute.java:98)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema.processNonDispatch(DfCreateSchemaProcess.java:460)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.execSQL(DfSqlFileRunnerExecute.java:66)
	... 29 more
2018-07-08 17:33:51,004 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2018-07-08 17:33:51,012 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m03s402ms *Abort

  DBFLUTE_CLIENT: {demo}
    database  = mysql (MySQL 8.0.11)
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Create Schema}: success=18 failure=1 *break (in 1 files)
  x replace-schema.sql
   >> (failed: Look at the exception message)
    * * * * * *
    * Failure *
    * * * * * *
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2018-07-08 19:04:29,155 [main] INFO  (DfReplaceSchemaTask#begin():92) - +------------------------------------------+
2018-07-08 19:04:29,158 [main] INFO  (DfReplaceSchemaTask#begin():93) - |                                          |
2018-07-08 19:04:29,158 [main] INFO  (DfReplaceSchemaTask#begin():94) - |              ReplaceSchema               |
2018-07-08 19:04:29,163 [main] INFO  (DfReplaceSchemaTask#begin():102) - |                                          |
2018-07-08 19:04:29,163 [main] INFO  (DfReplaceSchemaTask#begin():103) - +------------------------------------------+
2018-07-08 19:04:29,164 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():401) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2018-07-08 19:04:30,491 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 19:04:30,492 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 19:04:30,492 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 19:04:30,492 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 19:04:30,500 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2018-07-08 19:04:31,070 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 8.0.11
2018-07-08 19:04:31,070 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2018-07-08 19:04:31,081 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():229) - 
2018-07-08 19:04:31,081 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():230) - * * * * * * * * * * *
2018-07-08 19:04:31,081 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():231) - *                   *
2018-07-08 19:04:31,082 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():232) - * Initialize Schema *
2018-07-08 19:04:31,082 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():233) - *                   *
2018-07-08 19:04:31,083 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():234) - * * * * * * * * * * *
2018-07-08 19:04:31,094 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2018-07-08 19:04:31,095 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {twitter.$$NoNameSchema$$ as main}
2018-07-08 19:04:31,095 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2018-07-08 19:04:31,189 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table FAVOLITE
2018-07-08 19:04:31,202 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table FOLLOW
2018-07-08 19:04:31,218 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table REPLY
2018-07-08 19:04:31,229 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table RETWEET
2018-07-08 19:04:31,254 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table USER_STATUS
2018-07-08 19:04:31,268 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table FAVOLITE drop foreign key FK_FAVOLITE_TWEET
2018-07-08 19:04:31,278 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table FAVOLITE drop foreign key FK_FAVOLITE_USER
2018-07-08 19:04:31,291 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table FOLLOW drop foreign key FK_FOLLOWEE_USER
2018-07-08 19:04:31,301 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table FOLLOW drop foreign key FK_FOLLOWER_USER
2018-07-08 19:04:31,313 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table REPLY drop foreign key FK_REPLYEE_USER
2018-07-08 19:04:31,323 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table REPLY drop foreign key FK_REPLYEE_TWEET
2018-07-08 19:04:31,334 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table REPLY drop foreign key FK_REPLYER_USER
2018-07-08 19:04:31,345 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table REPLY drop foreign key FK_REPLYER_TWEET
2018-07-08 19:04:31,360 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table RETWEET drop foreign key FK_RETWEET_TWEET
2018-07-08 19:04:31,371 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table RETWEET drop foreign key FK_RETWEET_USER
2018-07-08 19:04:31,380 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table TWEET drop foreign key FK_TWEET_USER
2018-07-08 19:04:31,390 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table FAVOLITE
2018-07-08 19:04:31,396 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table FOLLOW
2018-07-08 19:04:31,401 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table REPLY
2018-07-08 19:04:31,406 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table RETWEET
2018-07-08 19:04:31,411 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table TWEET
2018-07-08 19:04:31,418 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table USER
2018-07-08 19:04:31,423 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table USER_STATUS
2018-07-08 19:04:31,459 [main] INFO  (DfCreateSchemaProcess#createSchema():266) - 
2018-07-08 19:04:31,459 [main] INFO  (DfCreateSchemaProcess#createSchema():267) - * * * * * * * * *
2018-07-08 19:04:31,460 [main] INFO  (DfCreateSchemaProcess#createSchema():268) - *               *
2018-07-08 19:04:31,460 [main] INFO  (DfCreateSchemaProcess#createSchema():269) - * Create Schema *
2018-07-08 19:04:31,460 [main] INFO  (DfCreateSchemaProcess#createSchema():270) - *               *
2018-07-08 19:04:31,460 [main] INFO  (DfCreateSchemaProcess#createSchema():271) - * * * * * * * * *
2018-07-08 19:04:31,464 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: replace-schema.sql
2018-07-08 19:04:31,467 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE FAVOLITE
(
	FAVOLITE_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'お気に入りID : お気に入りID',
	USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID
',
	TWEET_ID BIGINT NOT NULL COMMENT 'ツイートID : お気に入りしたツイートID
',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : お気に入りした時間',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時
',
	PRIMARY KEY (FAVOLITE_ID)
) COMMENT = 'お気に入り'
2018-07-08 19:04:31,554 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE FOLLOW
(
	FOLLOW_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'フォローID : フォローID',
	FOLLOWEE_ID BIGINT NOT NULL COMMENT 'フォロイーID : フォロイーID
フォローする人の会員IDが入る
',
	FOLLOWER_ID BIGINT NOT NULL COMMENT 'フォロワーID : フォロワーID
フォローされる人のIDが入る',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
フォローされているかをT / Fで判定する
',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : フォローした日時',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (FOLLOW_ID),
	CONSTRAINT UQ_NEW_TABLE_XXX UNIQUE (FOLLOWEE_ID, FOLLOWER_ID)
) COMMENT = 'フォロー'
2018-07-08 19:04:31,564 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE REPLY
(
	REPLY_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'リプライID : リプライID',
	REPLYEE_ID BIGINT NOT NULL COMMENT 'リプライした会員ID : リプライした会員ID
',
	REPLYER_ID BIGINT NOT NULL COMMENT 'リプライされた会員ID : リプライされた会員のID',
	REPLYEE_TWEET_ID BIGINT NOT NULL COMMENT 'リプライしたツイートID : リプライしたツイートのID
',
	REPLYER_TWEET_ID BIGINT NOT NULL COMMENT 'リプライされたツイートID : リプライされたツイートのID',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : リプライした日時',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (REPLY_ID)
) COMMENT = 'リプライ'
2018-07-08 19:04:31,646 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE RETWEET
(
	RETWEET_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'リツイートID : リツイートID',
	USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID
リツイートする人の会員IDが入る
',
	TWEET_ID BIGINT NOT NULL COMMENT 'ツイートID : ツイートID
リツイートされるツイートIDが格納される',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
リツイートしたかどうかを見る
一回リツイートして辞めてもう一回リツイートをするときにTにして表示できるようにする
',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : 登録日時',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (RETWEET_ID),
	CONSTRAINT UQ_NEW_TABLE_XXX UNIQUE (USER_ID, TWEET_ID)
) COMMENT = 'リツイート'
2018-07-08 19:04:31,657 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'ツイートID : ツイートID',
	USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID
',
	TWEET VARCHAR(140) NOT NULL COMMENT 'ツイート : ツイート
140文字制限されているので最大長140に設定',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : ツイートした時間',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'ツイート'
2018-07-08 19:04:31,736 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE USER
(
	USER_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員ID',
	USER_NAME VARCHAR(64) NOT NULL COMMENT '会員名称 : 会員名称。
このデータが名前として表示される。',
	MAIL_ADDRESS VARCHAR(256) NOT NULL UNIQUE COMMENT 'メールアドレス : メールアドレス',
	USER_STATUS_CODE CHAR(3) NOT NULL COMMENT '会員ステータスコード : 会員の状態を表すコード',
	BIRTH_DATE DATE COMMENT '誕生日 : 誕生日
時間までは考慮しない
特に入力する必要もないのでNULLを許容する',
	PROFILE_SENTENCE VARCHAR(300) NOT NULL COMMENT 'プロフィール文 : プロフィール文
長いのも困るので300文字',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : 登録日時
ユーザがサービスに登録した日時を格納する',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時
',
	PRIMARY KEY (USER_ID)
) ENGINE = InnoDB COMMENT = '会員 : 会員テーブル' DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci
2018-07-08 19:04:31,762 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE USER_STATUS
(
	USER_STATUS_CODE CHAR(3) NOT NULL COMMENT '会員ステータスコード : 会員の状態を表すコード',
	USER_STATUS VARCHAR(50) NOT NULL COMMENT '会員ステータス : 会員ステータスの区分値
50文字あれば足りると予想',
	DESCRIPTION VARCHAR(200) NOT NULL COMMENT '説明 : 会員ステータスの説明',
	PRIMARY KEY (USER_STATUS_CODE),
	CONSTRAINT UQ_NEW_TABLE_XXX UNIQUE (USER_STATUS, DESCRIPTION)
) ENGINE = InnoDB COMMENT = '会員ステータス'
2018-07-08 19:04:31,770 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE FAVOLITE
	ADD CONSTRAINT FK_FAVOLITE_TWEET FOREIGN KEY (TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:04:31,865 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYEE_TWEET FOREIGN KEY (REPLYEE_TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:04:31,884 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYER_TWEET FOREIGN KEY (REPLYER_TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:04:31,907 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE RETWEET
	ADD CONSTRAINT FK_RETWEET_TWEET FOREIGN KEY (TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:04:31,929 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FAVOLITE
	ADD CONSTRAINT FK_FAVOLITE_USER FOREIGN KEY (USER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:04:31,957 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOW
	ADD CONSTRAINT FK_FOLLOWEE_USER FOREIGN KEY (FOLLOWEE_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:04:31,980 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOW
	ADD CONSTRAINT FK_FOLLOWER_USER FOREIGN KEY (FOLLOWER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:04:32,003 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYEE_USER FOREIGN KEY (REPLYEE_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:04:32,036 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYER_USER FOREIGN KEY (REPLYER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:04:32,062 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE RETWEET
	ADD CONSTRAINT FK_RETWEET_USER FOREIGN KEY (USER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:04:32,086 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
	ADD CONSTRAINT FK_TWEET_USER FOREIGN KEY (USER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:04:32,119 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE USER
	ADD CONSTRAINT FK_USER_USER_STATUS FOREIGN KEY (USER_STATUS_CODE)
	REFERENCES USER_STATUS (USER_STATUS_CODE)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:04:32,129 [main] INFO  (DfSqlFileFireMan#fire():93) - {Create Schema}: success=18 failure=1 *break (in 1 files)
2018-07-08 19:04:32,133 [main] ERROR (DfDBFluteTaskUtil#logException():150) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute DBFlute Task 'ReplaceSchema'.

[Advice]
Check the exception messages and the stack traces.

[Database Product]
MySQL 8.0.11

[JDBC Driver]
MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
* * * * * * * * * */
org.dbflute.exception.SQLFailureException: Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute the SQL!

[SQL File]
playsql/replace-schema.sql

[Executed SQL]
ALTER TABLE USER
	ADD CONSTRAINT FK_USER_USER_STATUS FOREIGN KEY (USER_STATUS_CODE)
	REFERENCES USER_STATUS (USER_STATUS_CODE)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT

[SQLState]
HY000

[ErrorCode]
1215

[SQLException]
java.sql.SQLException
Cannot add foreign key constraint
* * * * * * * * * */
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerBase.throwSQLFailureException(DfSqlFileRunnerBase.java:587)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.execSQL(DfSqlFileRunnerExecute.java:80)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerBase.runTransaction(DfSqlFileRunnerBase.java:122)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileFireMan.processSqlFile(DfSqlFileFireMan.java:173)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileFireMan.fire(DfSqlFileFireMan.java:71)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.createSchema(DfCreateSchemaProcess.java:274)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.execute(DfCreateSchemaProcess.java:143)
	at org.dbflute.task.DfReplaceSchemaTask.createSchema(DfReplaceSchemaTask.java:301)
	at org.dbflute.task.DfReplaceSchemaTask.executeCoreProcess(DfReplaceSchemaTask.java:246)
	at org.dbflute.task.DfReplaceSchemaTask.processReplaceSchema(DfReplaceSchemaTask.java:232)
	at org.dbflute.task.DfReplaceSchemaTask.doExecute(DfReplaceSchemaTask.java:158)
	at org.dbflute.task.bs.DfAbstractTexenTask$1.callActualExecute(DfAbstractTexenTask.java:129)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTexenTask.execute(DfAbstractTexenTask.java:151)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
Caused by: java.sql.SQLException: Cannot add foreign key constraint
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2482)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2440)
	at com.mysql.jdbc.StatementImpl.executeInternal(StatementImpl.java:845)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:745)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.processNonDispatch(DfSqlFileRunnerExecute.java:98)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema.processNonDispatch(DfCreateSchemaProcess.java:460)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.execSQL(DfSqlFileRunnerExecute.java:66)
	... 29 more
2018-07-08 19:04:32,196 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2018-07-08 19:04:32,201 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m03s062ms *Abort

  DBFLUTE_CLIENT: {demo}
    database  = mysql (MySQL 8.0.11)
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Create Schema}: success=18 failure=1 *break (in 1 files)
  x replace-schema.sql
   >> (failed: Look at the exception message)
    * * * * * *
    * Failure *
    * * * * * *
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2018-07-08 19:11:53,169 [main] INFO  (DfReplaceSchemaTask#begin():92) - +------------------------------------------+
2018-07-08 19:11:53,171 [main] INFO  (DfReplaceSchemaTask#begin():93) - |                                          |
2018-07-08 19:11:53,171 [main] INFO  (DfReplaceSchemaTask#begin():94) - |              ReplaceSchema               |
2018-07-08 19:11:53,177 [main] INFO  (DfReplaceSchemaTask#begin():102) - |                                          |
2018-07-08 19:11:53,177 [main] INFO  (DfReplaceSchemaTask#begin():103) - +------------------------------------------+
2018-07-08 19:11:53,178 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():401) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2018-07-08 19:11:53,975 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 19:11:53,976 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 19:11:53,976 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 19:11:53,976 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 19:11:53,985 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2018-07-08 19:11:54,542 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 8.0.11
2018-07-08 19:11:54,543 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2018-07-08 19:11:54,553 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():229) - 
2018-07-08 19:11:54,553 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():230) - * * * * * * * * * * *
2018-07-08 19:11:54,553 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():231) - *                   *
2018-07-08 19:11:54,554 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():232) - * Initialize Schema *
2018-07-08 19:11:54,554 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():233) - *                   *
2018-07-08 19:11:54,555 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():234) - * * * * * * * * * * *
2018-07-08 19:11:54,566 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2018-07-08 19:11:54,566 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {twitter.$$NoNameSchema$$ as main}
2018-07-08 19:11:54,567 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2018-07-08 19:11:54,621 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table FAVOLITE
2018-07-08 19:11:54,636 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table FOLLOW
2018-07-08 19:11:54,651 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table REPLY
2018-07-08 19:11:54,664 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table RETWEET
2018-07-08 19:11:54,684 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table USER_STATUS
2018-07-08 19:11:54,693 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table FAVOLITE drop foreign key FK_FAVOLITE_TWEET
2018-07-08 19:11:54,701 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table FAVOLITE drop foreign key FK_FAVOLITE_USER
2018-07-08 19:11:54,715 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table FOLLOW drop foreign key FK_FOLLOWEE_USER
2018-07-08 19:11:54,731 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table FOLLOW drop foreign key FK_FOLLOWER_USER
2018-07-08 19:11:54,749 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table REPLY drop foreign key FK_REPLYEE_USER
2018-07-08 19:11:54,765 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table REPLY drop foreign key FK_REPLYEE_TWEET
2018-07-08 19:11:54,777 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table REPLY drop foreign key FK_REPLYER_USER
2018-07-08 19:11:54,787 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table REPLY drop foreign key FK_REPLYER_TWEET
2018-07-08 19:11:54,800 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table RETWEET drop foreign key FK_RETWEET_TWEET
2018-07-08 19:11:54,808 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table RETWEET drop foreign key FK_RETWEET_USER
2018-07-08 19:11:54,818 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table TWEET drop foreign key FK_TWEET_USER
2018-07-08 19:11:54,831 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table FAVOLITE
2018-07-08 19:11:54,835 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table FOLLOW
2018-07-08 19:11:54,843 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table REPLY
2018-07-08 19:11:54,848 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table RETWEET
2018-07-08 19:11:54,854 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table TWEET
2018-07-08 19:11:54,860 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table USER
2018-07-08 19:11:54,865 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table USER_STATUS
2018-07-08 19:11:54,897 [main] INFO  (DfCreateSchemaProcess#createSchema():266) - 
2018-07-08 19:11:54,898 [main] INFO  (DfCreateSchemaProcess#createSchema():267) - * * * * * * * * *
2018-07-08 19:11:54,898 [main] INFO  (DfCreateSchemaProcess#createSchema():268) - *               *
2018-07-08 19:11:54,898 [main] INFO  (DfCreateSchemaProcess#createSchema():269) - * Create Schema *
2018-07-08 19:11:54,898 [main] INFO  (DfCreateSchemaProcess#createSchema():270) - *               *
2018-07-08 19:11:54,898 [main] INFO  (DfCreateSchemaProcess#createSchema():271) - * * * * * * * * *
2018-07-08 19:11:54,902 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: replace-schema.sql
2018-07-08 19:11:54,905 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE FAVOLITE
(
	FAVOLITE_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'お気に入りID : お気に入りID',
	USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID
',
	TWEET_ID BIGINT NOT NULL COMMENT 'ツイートID : お気に入りしたツイートID
',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : お気に入りした時間',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時
',
	PRIMARY KEY (FAVOLITE_ID)
) COMMENT = 'お気に入り'
2018-07-08 19:11:54,951 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE FOLLOW
(
	FOLLOW_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'フォローID : フォローID',
	FOLLOWEE_ID BIGINT NOT NULL COMMENT 'フォロイーID : フォロイーID
フォローする人の会員IDが入る
',
	FOLLOWER_ID BIGINT NOT NULL COMMENT 'フォロワーID : フォロワーID
フォローされる人のIDが入る',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
フォローされているかをT / Fで判定する
',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : フォローした日時',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (FOLLOW_ID),
	CONSTRAINT UQ_NEW_TABLE_XXX UNIQUE (FOLLOWEE_ID, FOLLOWER_ID)
) COMMENT = 'フォロー'
2018-07-08 19:11:54,963 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE REPLY
(
	REPLY_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'リプライID : リプライID',
	REPLYEE_ID BIGINT NOT NULL COMMENT 'リプライした会員ID : リプライした会員ID
',
	REPLYER_ID BIGINT NOT NULL COMMENT 'リプライされた会員ID : リプライされた会員のID',
	REPLYEE_TWEET_ID BIGINT NOT NULL COMMENT 'リプライしたツイートID : リプライしたツイートのID
',
	REPLYER_TWEET_ID BIGINT NOT NULL COMMENT 'リプライされたツイートID : リプライされたツイートのID',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : リプライした日時',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (REPLY_ID)
) COMMENT = 'リプライ'
2018-07-08 19:11:54,972 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE RETWEET
(
	RETWEET_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'リツイートID : リツイートID',
	USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID
リツイートする人の会員IDが入る
',
	TWEET_ID BIGINT NOT NULL COMMENT 'ツイートID : ツイートID
リツイートされるツイートIDが格納される',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
リツイートしたかどうかを見る
一回リツイートして辞めてもう一回リツイートをするときにTにして表示できるようにする
',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : 登録日時',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (RETWEET_ID),
	CONSTRAINT UQ_NEW_TABLE_XXX UNIQUE (USER_ID, TWEET_ID)
) COMMENT = 'リツイート'
2018-07-08 19:11:55,054 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'ツイートID : ツイートID',
	USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID
',
	TWEET VARCHAR(140) NOT NULL COMMENT 'ツイート : ツイート
140文字制限されているので最大長140に設定',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : ツイートした時間',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'ツイート'
2018-07-08 19:11:55,065 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE USER
(
	USER_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員ID',
	USER_NAME VARCHAR(64) NOT NULL COMMENT '会員名称 : 会員名称。
このデータが名前として表示される。',
	MAIL_ADDRESS VARCHAR(256) NOT NULL UNIQUE COMMENT 'メールアドレス : メールアドレス',
	BIRTH_DATE DATE COMMENT '誕生日 : 誕生日
時間までは考慮しない
特に入力する必要もないのでNULLを許容する',
	PROFILE_SENTENCE VARCHAR(300) NOT NULL COMMENT 'プロフィール文 : プロフィール文
長いのも困るので300文字',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : 登録日時
ユーザがサービスに登録した日時を格納する',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時
',
	USER_STATUS_CODE CHAR(3) NOT NULL UNIQUE COMMENT '会員ステータスコード',
	PRIMARY KEY (USER_ID)
) ENGINE = InnoDB COMMENT = '会員 : 会員テーブル' DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci
2018-07-08 19:11:55,090 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE USER_STATUS
(
	USER_STATUS_CODE CHAR(3) NOT NULL UNIQUE COMMENT '会員ステータスコード',
	USER_STATUS VARCHAR(50) NOT NULL COMMENT '会員ステータス : 会員ステータスの区分値
50文字あれば足りると予想',
	DESCRIPTION VARCHAR(200) NOT NULL COMMENT '説明 : 会員ステータスの説明',
	PRIMARY KEY (USER_STATUS_CODE),
	CONSTRAINT UQ_NEW_TABLE_XXX UNIQUE (USER_STATUS, DESCRIPTION)
) ENGINE = InnoDB COMMENT = '会員ステータス'
2018-07-08 19:11:55,175 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE FAVOLITE
	ADD CONSTRAINT FK_FAVOLITE_TWEET FOREIGN KEY (TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:11:55,198 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYEE_TWEET FOREIGN KEY (REPLYEE_TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:11:55,218 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYER_TWEET FOREIGN KEY (REPLYER_TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:11:55,239 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE RETWEET
	ADD CONSTRAINT FK_RETWEET_TWEET FOREIGN KEY (TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:11:55,259 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FAVOLITE
	ADD CONSTRAINT FK_FAVOLITE_USER FOREIGN KEY (USER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:11:55,286 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOW
	ADD CONSTRAINT FK_FOLLOWEE_USER FOREIGN KEY (FOLLOWEE_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:11:55,305 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOW
	ADD CONSTRAINT FK_FOLLOWER_USER FOREIGN KEY (FOLLOWER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:11:55,326 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYEE_USER FOREIGN KEY (REPLYEE_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:11:55,349 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYER_USER FOREIGN KEY (REPLYER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:11:55,381 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE RETWEET
	ADD CONSTRAINT FK_RETWEET_USER FOREIGN KEY (USER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:11:55,403 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
	ADD CONSTRAINT FK_TWEET_USER FOREIGN KEY (USER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:11:55,432 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE USER
	ADD CONSTRAINT FK_USER_USER_STATUS FOREIGN KEY (USER_STATUS_CODE)
	REFERENCES USER_STATUS (USER_STATUS_CODE)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:11:55,443 [main] INFO  (DfSqlFileFireMan#fire():93) - {Create Schema}: success=18 failure=1 *break (in 1 files)
2018-07-08 19:11:55,447 [main] ERROR (DfDBFluteTaskUtil#logException():150) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute DBFlute Task 'ReplaceSchema'.

[Advice]
Check the exception messages and the stack traces.

[Database Product]
MySQL 8.0.11

[JDBC Driver]
MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
* * * * * * * * * */
org.dbflute.exception.SQLFailureException: Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute the SQL!

[SQL File]
playsql/replace-schema.sql

[Executed SQL]
ALTER TABLE USER
	ADD CONSTRAINT FK_USER_USER_STATUS FOREIGN KEY (USER_STATUS_CODE)
	REFERENCES USER_STATUS (USER_STATUS_CODE)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT

[SQLState]
HY000

[ErrorCode]
1215

[SQLException]
java.sql.SQLException
Cannot add foreign key constraint
* * * * * * * * * */
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerBase.throwSQLFailureException(DfSqlFileRunnerBase.java:587)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.execSQL(DfSqlFileRunnerExecute.java:80)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerBase.runTransaction(DfSqlFileRunnerBase.java:122)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileFireMan.processSqlFile(DfSqlFileFireMan.java:173)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileFireMan.fire(DfSqlFileFireMan.java:71)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.createSchema(DfCreateSchemaProcess.java:274)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.execute(DfCreateSchemaProcess.java:143)
	at org.dbflute.task.DfReplaceSchemaTask.createSchema(DfReplaceSchemaTask.java:301)
	at org.dbflute.task.DfReplaceSchemaTask.executeCoreProcess(DfReplaceSchemaTask.java:246)
	at org.dbflute.task.DfReplaceSchemaTask.processReplaceSchema(DfReplaceSchemaTask.java:232)
	at org.dbflute.task.DfReplaceSchemaTask.doExecute(DfReplaceSchemaTask.java:158)
	at org.dbflute.task.bs.DfAbstractTexenTask$1.callActualExecute(DfAbstractTexenTask.java:129)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTexenTask.execute(DfAbstractTexenTask.java:151)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
Caused by: java.sql.SQLException: Cannot add foreign key constraint
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2482)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2440)
	at com.mysql.jdbc.StatementImpl.executeInternal(StatementImpl.java:845)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:745)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.processNonDispatch(DfSqlFileRunnerExecute.java:98)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema.processNonDispatch(DfCreateSchemaProcess.java:460)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.execSQL(DfSqlFileRunnerExecute.java:66)
	... 29 more
2018-07-08 19:11:55,452 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2018-07-08 19:11:55,458 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m02s305ms *Abort

  DBFLUTE_CLIENT: {demo}
    database  = mysql (MySQL 8.0.11)
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Create Schema}: success=18 failure=1 *break (in 1 files)
  x replace-schema.sql
   >> (failed: Look at the exception message)
    * * * * * *
    * Failure *
    * * * * * *
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2018-07-08 19:12:34,284 [main] INFO  (DfReplaceSchemaTask#begin():92) - +------------------------------------------+
2018-07-08 19:12:34,287 [main] INFO  (DfReplaceSchemaTask#begin():93) - |                                          |
2018-07-08 19:12:34,287 [main] INFO  (DfReplaceSchemaTask#begin():94) - |              ReplaceSchema               |
2018-07-08 19:12:34,292 [main] INFO  (DfReplaceSchemaTask#begin():102) - |                                          |
2018-07-08 19:12:34,292 [main] INFO  (DfReplaceSchemaTask#begin():103) - +------------------------------------------+
2018-07-08 19:12:34,293 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():401) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2018-07-08 19:12:34,330 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 19:12:34,330 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 19:12:34,330 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 19:12:34,330 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 19:12:34,343 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2018-07-08 19:12:34,904 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 8.0.11
2018-07-08 19:12:34,905 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2018-07-08 19:12:34,915 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():229) - 
2018-07-08 19:12:34,915 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():230) - * * * * * * * * * * *
2018-07-08 19:12:34,916 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():231) - *                   *
2018-07-08 19:12:34,916 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():232) - * Initialize Schema *
2018-07-08 19:12:34,917 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():233) - *                   *
2018-07-08 19:12:34,917 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():234) - * * * * * * * * * * *
2018-07-08 19:12:34,928 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2018-07-08 19:12:34,929 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {twitter.$$NoNameSchema$$ as main}
2018-07-08 19:12:34,929 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2018-07-08 19:12:35,031 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table FAVOLITE
2018-07-08 19:12:35,042 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table FOLLOW
2018-07-08 19:12:35,056 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table REPLY
2018-07-08 19:12:35,068 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table RETWEET
2018-07-08 19:12:35,095 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table USER_STATUS
2018-07-08 19:12:35,105 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table FAVOLITE drop foreign key FK_FAVOLITE_TWEET
2018-07-08 19:12:35,112 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table FAVOLITE drop foreign key FK_FAVOLITE_USER
2018-07-08 19:12:35,125 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table FOLLOW drop foreign key FK_FOLLOWEE_USER
2018-07-08 19:12:35,132 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table FOLLOW drop foreign key FK_FOLLOWER_USER
2018-07-08 19:12:35,144 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table REPLY drop foreign key FK_REPLYEE_USER
2018-07-08 19:12:35,155 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table REPLY drop foreign key FK_REPLYEE_TWEET
2018-07-08 19:12:35,164 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table REPLY drop foreign key FK_REPLYER_USER
2018-07-08 19:12:35,175 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table REPLY drop foreign key FK_REPLYER_TWEET
2018-07-08 19:12:35,187 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table RETWEET drop foreign key FK_RETWEET_TWEET
2018-07-08 19:12:35,197 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table RETWEET drop foreign key FK_RETWEET_USER
2018-07-08 19:12:35,206 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table TWEET drop foreign key FK_TWEET_USER
2018-07-08 19:12:35,216 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table FAVOLITE
2018-07-08 19:12:35,222 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table FOLLOW
2018-07-08 19:12:35,226 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table REPLY
2018-07-08 19:12:35,231 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table RETWEET
2018-07-08 19:12:35,236 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table TWEET
2018-07-08 19:12:35,244 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table USER
2018-07-08 19:12:35,249 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table USER_STATUS
2018-07-08 19:12:35,284 [main] INFO  (DfCreateSchemaProcess#createSchema():266) - 
2018-07-08 19:12:35,285 [main] INFO  (DfCreateSchemaProcess#createSchema():267) - * * * * * * * * *
2018-07-08 19:12:35,285 [main] INFO  (DfCreateSchemaProcess#createSchema():268) - *               *
2018-07-08 19:12:35,285 [main] INFO  (DfCreateSchemaProcess#createSchema():269) - * Create Schema *
2018-07-08 19:12:35,286 [main] INFO  (DfCreateSchemaProcess#createSchema():270) - *               *
2018-07-08 19:12:35,286 [main] INFO  (DfCreateSchemaProcess#createSchema():271) - * * * * * * * * *
2018-07-08 19:12:35,291 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: replace-schema.sql
2018-07-08 19:12:35,294 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE FAVOLITE
(
	FAVOLITE_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'お気に入りID : お気に入りID',
	USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID
',
	TWEET_ID BIGINT NOT NULL COMMENT 'ツイートID : お気に入りしたツイートID
',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : お気に入りした時間',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時
',
	PRIMARY KEY (FAVOLITE_ID)
) COMMENT = 'お気に入り'
2018-07-08 19:12:35,379 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE FOLLOW
(
	FOLLOW_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'フォローID : フォローID',
	FOLLOWEE_ID BIGINT NOT NULL COMMENT 'フォロイーID : フォロイーID
フォローする人の会員IDが入る
',
	FOLLOWER_ID BIGINT NOT NULL COMMENT 'フォロワーID : フォロワーID
フォローされる人のIDが入る',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
フォローされているかをT / Fで判定する
',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : フォローした日時',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (FOLLOW_ID),
	CONSTRAINT UQ_NEW_TABLE_XXX UNIQUE (FOLLOWEE_ID, FOLLOWER_ID)
) COMMENT = 'フォロー'
2018-07-08 19:12:35,389 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE REPLY
(
	REPLY_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'リプライID : リプライID',
	REPLYEE_ID BIGINT NOT NULL COMMENT 'リプライした会員ID : リプライした会員ID
',
	REPLYER_ID BIGINT NOT NULL COMMENT 'リプライされた会員ID : リプライされた会員のID',
	REPLYEE_TWEET_ID BIGINT NOT NULL COMMENT 'リプライしたツイートID : リプライしたツイートのID
',
	REPLYER_TWEET_ID BIGINT NOT NULL COMMENT 'リプライされたツイートID : リプライされたツイートのID',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : リプライした日時',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (REPLY_ID)
) COMMENT = 'リプライ'
2018-07-08 19:12:35,398 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE RETWEET
(
	RETWEET_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'リツイートID : リツイートID',
	USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID
リツイートする人の会員IDが入る
',
	TWEET_ID BIGINT NOT NULL COMMENT 'ツイートID : ツイートID
リツイートされるツイートIDが格納される',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
リツイートしたかどうかを見る
一回リツイートして辞めてもう一回リツイートをするときにTにして表示できるようにする
',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : 登録日時',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (RETWEET_ID),
	CONSTRAINT UQ_NEW_TABLE_XXX UNIQUE (USER_ID, TWEET_ID)
) COMMENT = 'リツイート'
2018-07-08 19:12:35,480 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'ツイートID : ツイートID',
	USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID
',
	TWEET VARCHAR(140) NOT NULL COMMENT 'ツイート : ツイート
140文字制限されているので最大長140に設定',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : ツイートした時間',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'ツイート'
2018-07-08 19:12:35,489 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE USER
(
	USER_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員ID',
	USER_NAME VARCHAR(64) NOT NULL COMMENT '会員名称 : 会員名称。
このデータが名前として表示される。',
	MAIL_ADDRESS VARCHAR(256) NOT NULL UNIQUE COMMENT 'メールアドレス : メールアドレス',
	BIRTH_DATE DATE COMMENT '誕生日 : 誕生日
時間までは考慮しない
特に入力する必要もないのでNULLを許容する',
	PROFILE_SENTENCE VARCHAR(300) NOT NULL COMMENT 'プロフィール文 : プロフィール文
長いのも困るので300文字',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : 登録日時
ユーザがサービスに登録した日時を格納する',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時
',
	PRIMARY KEY (USER_ID)
) ENGINE = InnoDB COMMENT = '会員 : 会員テーブル' DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci
2018-07-08 19:12:35,510 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE FAVOLITE
	ADD CONSTRAINT FK_FAVOLITE_TWEET FOREIGN KEY (TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:12:35,605 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYEE_TWEET FOREIGN KEY (REPLYEE_TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:12:35,627 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYER_TWEET FOREIGN KEY (REPLYER_TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:12:35,648 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE RETWEET
	ADD CONSTRAINT FK_RETWEET_TWEET FOREIGN KEY (TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:12:35,670 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FAVOLITE
	ADD CONSTRAINT FK_FAVOLITE_USER FOREIGN KEY (USER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:12:35,693 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOW
	ADD CONSTRAINT FK_FOLLOWEE_USER FOREIGN KEY (FOLLOWEE_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:12:35,719 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOW
	ADD CONSTRAINT FK_FOLLOWER_USER FOREIGN KEY (FOLLOWER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:12:35,741 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYEE_USER FOREIGN KEY (REPLYEE_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:12:35,765 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYER_USER FOREIGN KEY (REPLYER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:12:35,795 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE RETWEET
	ADD CONSTRAINT FK_RETWEET_USER FOREIGN KEY (USER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:12:35,818 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
	ADD CONSTRAINT FK_TWEET_USER FOREIGN KEY (USER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:12:35,846 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=17 failure=0
2018-07-08 19:12:35,846 [main] INFO  (DfSqlFileFireMan#fire():93) - {Create Schema}: success=17 failure=0 (in 1 files)
2018-07-08 19:12:35,881 [main] INFO  (DfLoadDataProcess#execute():130) - 
2018-07-08 19:12:35,881 [main] INFO  (DfLoadDataProcess#execute():131) - * * * * * * * * * * *
2018-07-08 19:12:35,881 [main] INFO  (DfLoadDataProcess#execute():132) - *                   *
2018-07-08 19:12:35,881 [main] INFO  (DfLoadDataProcess#execute():133) - * Load Data         *
2018-07-08 19:12:35,881 [main] INFO  (DfLoadDataProcess#execute():134) - *                   *
2018-07-08 19:12:35,881 [main] INFO  (DfLoadDataProcess#execute():135) - * * * * * * * * * * *
2018-07-08 19:12:35,942 [main] INFO  (DfTakeFinallyProcess#takeFinally():237) - 
2018-07-08 19:12:35,942 [main] INFO  (DfTakeFinallyProcess#takeFinally():238) - * * * * * * * **
2018-07-08 19:12:35,942 [main] INFO  (DfTakeFinallyProcess#takeFinally():239) - *              *
2018-07-08 19:12:35,943 [main] INFO  (DfTakeFinallyProcess#takeFinally():240) - * Take Finally *
2018-07-08 19:12:35,943 [main] INFO  (DfTakeFinallyProcess#takeFinally():241) - *              *
2018-07-08 19:12:35,943 [main] INFO  (DfTakeFinallyProcess#takeFinally():242) - * * * * * * * **
2018-07-08 19:12:35,948 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: take-finally.sql
2018-07-08 19:12:35,950 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2018-07-08 19:12:35,950 [main] INFO  (DfSqlFileFireMan#fire():93) - {Take Finally}: success=0 failure=0 (in 1 files)
2018-07-08 19:12:35,951 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2018-07-08 19:12:35,956 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s687ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql (MySQL 8.0.11)
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Create Schema}: success=17 failure=0 (in 1 files)
  o replace-schema.sql

 {Load Data}: loaded-files=0
  - (no data file)

 {Take Finally}: success=0 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2018-07-08 19:12:40,736 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2018-07-08 19:12:40,739 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2018-07-08 19:12:40,739 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2018-07-08 19:12:40,740 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2018-07-08 19:12:40,740 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2018-07-08 19:12:40,756 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 19:12:40,756 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 19:12:40,756 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 19:12:40,757 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 19:12:40,789 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2018-07-08 19:12:40,789 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2018-07-08 19:12:40,790 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2018-07-08 19:12:40,801 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 19:12:40,886 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2018-07-08 19:12:40,896 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2018-07-08 19:12:41,527 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 8.0.11
2018-07-08 19:12:41,528 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2018-07-08 19:12:41,529 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2018-07-08 19:12:41,530 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2018-07-08 19:12:41,530 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {twitter.$$NoNameSchema$$ as main}
2018-07-08 19:12:41,531 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2018-07-08 19:12:41,541 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'twitter' order by table_name asc
2018-07-08 19:12:41,546 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'twitter' order by table_name asc, column_name asc
2018-07-08 19:12:41,556 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'twitter' and DATA_TYPE = 'datetime'
2018-07-08 19:12:41,566 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2018-07-08 19:12:41,566 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2018-07-08 19:12:41,567 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2018-07-08 19:12:41,567 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.FAVOLITE(TABLE) // お気に入り
2018-07-08 19:12:41,609 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.FOLLOW(TABLE) // フォロー
2018-07-08 19:12:41,629 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.REPLY(TABLE) // リプライ
2018-07-08 19:12:41,660 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.RETWEET(TABLE) // リツイート
2018-07-08 19:12:41,681 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.TWEET(TABLE) // ツイート
2018-07-08 19:12:41,698 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.USER(TABLE) // 会員 : 会員テーブル
2018-07-08 19:12:41,719 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2018-07-08 19:12:41,719 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2018-07-08 19:12:41,719 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 6
2018-07-08 19:12:41,719 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2018-07-08 19:12:41,720 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2018-07-08 19:12:41,721 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2018-07-08 19:12:41,724 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2018-07-08 19:12:41,724 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-demo.xml
2018-07-08 19:12:41,724 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2018-07-08 19:12:41,750 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2018-07-08 19:12:41,751 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 19:12:41,795 [main] INFO  (DfSchemaDiff#setupDocumentAuthorOfNextSchema():419) - *Cannot get git branch of next schema.
java.lang.IllegalArgumentException: The argument 'object' should not be null.
	at org.dbflute.optional.OptionalObject.of(OptionalObject.java:69)
	at org.dbflute.optional.OptionalThing.of(OptionalThing.java:47)
	at org.dbflute.logic.doc.supplement.author.DfDocumentAuthorLogic.getGitBranch(DfDocumentAuthorLogic.java:92)
	at org.dbflute.logic.jdbc.schemadiff.DfSchemaDiff.setupDocumentAuthorOfNextSchema(DfSchemaDiff.java:417)
	at org.dbflute.logic.jdbc.schemadiff.DfSchemaDiff.loadNextSchema(DfSchemaDiff.java:406)
	at org.dbflute.logic.jdbc.schemaxml.DfSchemaXmlSerializer.doLoadNextSchema(DfSchemaXmlSerializer.java:1551)
	at org.dbflute.logic.jdbc.schemaxml.DfSchemaXmlSerializer.loadNextSchema(DfSchemaXmlSerializer.java:1543)
	at org.dbflute.logic.jdbc.schemaxml.DfSchemaXmlSerializer.serialize(DfSchemaXmlSerializer.java:332)
	at org.apache.torque.task.TorqueJDBCTransformTask.doExecute(TorqueJDBCTransformTask.java:127)
	at org.dbflute.task.bs.DfAbstractTask$1.callActualExecute(DfAbstractTask.java:113)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTask.execute(DfAbstractTask.java:135)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.helper.SingleCheckExecutor.executeTargets(SingleCheckExecutor.java:38)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:416)
	at org.apache.tools.ant.taskdefs.CallTarget.execute(CallTarget.java:105)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
2018-07-08 19:12:41,882 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1555) -  -> different from previous (schema diff)
2018-07-08 19:12:41,885 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1557) - ...Serializing schema-diff:
2018-07-08 19:12:41,885 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1558) -   filePath = ./schema/project-history-demo.diffmap
2018-07-08 19:12:41,896 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2018-07-08 19:12:41,903 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s176ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql (MySQL 8.0.11)
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2018-07-08 19:12:42,406 [main] INFO  (TorqueDocumentationTask#begin():187) - +------------------------------------------+
2018-07-08 19:12:42,407 [main] INFO  (TorqueDocumentationTask#begin():188) - |                                          |
2018-07-08 19:12:42,407 [main] INFO  (TorqueDocumentationTask#begin():189) - |                   Doc                    |
2018-07-08 19:12:42,408 [main] INFO  (TorqueDocumentationTask#begin():197) - |                                          |
2018-07-08 19:12:42,408 [main] INFO  (TorqueDocumentationTask#begin():198) - +------------------------------------------+
2018-07-08 19:12:42,422 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 19:12:42,422 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 19:12:42,422 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 19:12:42,422 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 19:12:42,424 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():259) - 
2018-07-08 19:12:42,424 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():260) - * * * * * * * * * * *
2018-07-08 19:12:42,424 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():261) - *                   *
2018-07-08 19:12:42,424 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():262) - *    Schema HTML    *
2018-07-08 19:12:42,424 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():263) - *                   *
2018-07-08 19:12:42,424 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():264) - * * * * * * * * * * *
2018-07-08 19:12:42,506 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 19:12:42,560 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2018-07-08 19:12:42,728 [main] INFO  (Database#doEnableDocumentOutputDirectory():1224) - ...Setting up documentOutputDirectory: ./output/doc
2018-07-08 19:12:42,735 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2018-07-08 19:12:42,735 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2018-07-08 19:12:42,736 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2018-07-08 19:12:42,737 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2018-07-08 19:12:42,737 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2018-07-08 19:12:42,738 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2018-07-08 19:12:42,740 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2018-07-08 19:12:42,740 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2018-07-08 19:12:42,742 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2018-07-08 19:12:42,749 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():233) - ...Loading schema history
2018-07-08 19:12:42,770 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():237) -  -> found history: count=3
2018-07-08 19:12:42,967 [main] INFO  (DfRefreshMan#resolveProjectAutoDetect():105) - *Cannot auto-detect your refresh Eclipse proejct.
2018-07-08 19:12:42,969 [main] INFO  (DfRefreshResourceProcess#show():299) - /===========================================================================
2018-07-08 19:12:42,969 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Refreshing [$$AutoDetect$$] by http://localhost:8386/
2018-07-08 19:12:42,974 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Retrying refreshing by default secondary URL http://localhost:8387/
2018-07-08 19:12:42,975 [main] INFO  (DfRefreshResourceProcess#show():299) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to refresh the resources.

[Project List]
[$$AutoDetect$$]

[Request URL]
http://localhost:8386/

[IOExpception]
ConnectException
Connection refused (Connection refused)
* * * * * * * * * */
2018-07-08 19:12:42,976 [main] INFO  (DfRefreshResourceProcess#show():299) - ==========/
2018-07-08 19:12:42,979 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s583ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2018-07-08 19:12:44,467 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2018-07-08 19:12:44,469 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2018-07-08 19:12:44,469 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2018-07-08 19:12:44,469 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2018-07-08 19:12:44,470 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2018-07-08 19:12:44,487 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 19:12:44,487 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 19:12:44,487 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 19:12:44,488 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 19:12:44,499 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2018-07-08 19:12:44,499 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2018-07-08 19:12:44,529 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 19:12:44,593 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2018-07-08 19:12:44,777 [main] INFO  (Database#doEnableGenerateOutputDirectory():1192) - ...Setting up generateOutputDirectory: ../src/main/java
2018-07-08 19:12:44,779 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2018-07-08 19:12:44,780 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2018-07-08 19:12:44,781 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2018-07-08 19:12:44,782 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2018-07-08 19:12:44,782 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2018-07-08 19:12:44,783 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2018-07-08 19:12:44,786 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2018-07-08 19:12:44,786 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2018-07-08 19:12:44,788 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2018-07-08 19:12:44,796 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2018-07-08 19:12:44,796 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2018-07-08 19:12:44,797 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2018-07-08 19:12:44,797 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2018-07-08 19:12:44,797 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2018-07-08 19:12:44,797 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2018-07-08 19:12:44,797 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2018-07-08 19:12:44,797 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2018-07-08 19:12:44,797 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2018-07-08 19:12:44,798 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2018-07-08 19:12:44,806 [main] INFO  (Database#info():2785) - public void parseAllCommon() {
2018-07-08 19:12:44,807 [main] INFO  (Database#info():2785) -     parse('DBCurrent');
2018-07-08 19:12:44,811 [main] INFO  (Database#info():2785) -     parse('DBFluteConfig');
2018-07-08 19:12:44,822 [main] INFO  (Database#info():2785) -     parse('DBFluteInitializer');
2018-07-08 19:12:44,854 [main] INFO  (Database#info():2785) -     parse('DBMetaInstanceHandler');
2018-07-08 19:12:44,874 [main] INFO  (Database#info():2785) -     parse('EntityDefinedCommonColumn');
2018-07-08 19:12:44,879 [main] INFO  (Database#info():2785) -     parse('ImplementedBehaviorSelector');
2018-07-08 19:12:44,885 [main] INFO  (Database#info():2785) -     parse('ImplementedCommonColumnAutoSetupper');
2018-07-08 19:12:44,889 [main] INFO  (Database#info():2785) -     parse('ImplementedInvokerAssistant');
2018-07-08 19:12:44,893 [main] INFO  (Database#info():2785) -     parse('ImplementedSqlClauseCreator');
2018-07-08 19:12:44,895 [main] INFO  (Database#info():2785) - }
2018-07-08 19:12:44,896 [main] INFO  (Database#info():2785) - public void parseContainerConfig() {
2018-07-08 19:12:44,896 [main] INFO  (Database#info():2785) -     parse('demo/dbflute/allcommon/DBFluteBeansJavaConfig.java')
2018-07-08 19:12:44,907 [main] INFO  (Database#info():2785) - }
2018-07-08 19:12:44,910 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2018-07-08 19:12:44,913 [main] INFO  (DfOldClassHandler#info():1045) -     delete('BsUserStatusBhv');
2018-07-08 19:12:44,914 [main] INFO  (DfOldClassHandler#info():1045) -     delete('LoaderOfUserStatus');
2018-07-08 19:12:44,918 [main] INFO  (DfOldClassHandler#info():1045) -     delete('BsUserStatus');
2018-07-08 19:12:44,919 [main] INFO  (DfOldClassHandler#info():1045) -     delete('UserStatusDbm');
2018-07-08 19:12:44,921 [main] INFO  (DfOldClassHandler#info():1045) -     delete('BsUserStatusCB');
2018-07-08 19:12:44,923 [main] INFO  (DfOldClassHandler#info():1045) -     delete('AbstractBsUserStatusCQ');
2018-07-08 19:12:44,926 [main] INFO  (DfOldClassHandler#info():1045) -     delete('BsUserStatusCQ');
2018-07-08 19:12:44,931 [main] INFO  (DfOldClassHandler#info():1045) -     delete('UserStatusCB');
2018-07-08 19:12:44,933 [main] INFO  (DfOldClassHandler#info():1045) -     delete('UserStatusCQ');
2018-07-08 19:12:44,972 [main] INFO  (DfOldClassHandler#info():1045) -     delete('UserStatusCIQ');
2018-07-08 19:12:44,973 [main] INFO  (DfOldClassHandler#info():1045) -     delete('UserStatusBhv');
2018-07-08 19:12:44,974 [main] INFO  (DfOldClassHandler#info():1045) -     delete('UserStatus');
2018-07-08 19:12:44,974 [main] INFO  (DfOldClassHandler#info():1045) - }
2018-07-08 19:12:44,975 [main] INFO  (Database#info():2785) - public void parseTableClass() {
2018-07-08 19:12:44,975 [main] INFO  (Database#info():2785) -     parse('FAVOLITE');
2018-07-08 19:12:45,182 [main] INFO  (Database#info():2785) -     parse('FOLLOW');
2018-07-08 19:12:45,314 [main] INFO  (Database#info():2785) -     parse('REPLY');
2018-07-08 19:12:45,450 [main] INFO  (Database#info():2785) -     parse('RETWEET');
2018-07-08 19:12:45,554 [main] INFO  (Database#info():2785) -     parse('TWEET');
2018-07-08 19:12:45,712 [main] INFO  (Database#info():2785) -     parse('USER');
2018-07-08 19:12:45,862 [main] INFO  (Database#info():2785) - }
2018-07-08 19:12:45,862 [main] INFO  (Database#info():2785) -  
2018-07-08 19:12:45,875 [main] INFO  (DfRefreshMan#resolveProjectAutoDetect():105) - *Cannot auto-detect your refresh Eclipse proejct.
2018-07-08 19:12:45,876 [main] INFO  (DfRefreshResourceProcess#show():299) - /===========================================================================
2018-07-08 19:12:45,877 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Refreshing [$$AutoDetect$$] by http://localhost:8386/
2018-07-08 19:12:45,878 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Retrying refreshing by default secondary URL http://localhost:8387/
2018-07-08 19:12:45,879 [main] INFO  (DfRefreshResourceProcess#show():299) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to refresh the resources.

[Project List]
[$$AutoDetect$$]

[Request URL]
http://localhost:8386/

[IOExpception]
ConnectException
Connection refused (Connection refused)
* * * * * * * * * */
2018-07-08 19:12:45,879 [main] INFO  (DfRefreshResourceProcess#show():299) - ==========/
2018-07-08 19:12:45,882 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s425ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2018-07-08 19:12:46,552 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2018-07-08 19:12:46,554 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2018-07-08 19:12:46,554 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2018-07-08 19:12:46,554 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2018-07-08 19:12:46,554 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2018-07-08 19:12:46,566 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 19:12:46,567 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 19:12:46,567 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 19:12:46,567 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 19:12:46,584 [main] INFO  (DfSqlFileFireMan#fire():93) - {Fired SQL}: success=0 failure=0 (in 0 files)
2018-07-08 19:12:46,591 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s045ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2018-07-08 19:12:47,100 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2018-07-08 19:12:47,101 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2018-07-08 19:12:47,101 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2018-07-08 19:12:47,102 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2018-07-08 19:12:47,102 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2018-07-08 19:12:47,122 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 19:12:47,122 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 19:12:47,122 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 19:12:47,122 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 19:12:47,130 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2018-07-08 19:12:47,130 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2018-07-08 19:12:47,134 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 19:12:47,187 [main] INFO  (DfSqlFileFireMan#fire():93) - {Fired SQL}: success=0 failure=0 (in 0 files)
2018-07-08 19:12:47,207 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2018-07-08 19:12:47,208 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2018-07-08 19:12:47,208 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2018-07-08 19:12:47,208 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2018-07-08 19:12:47,208 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2018-07-08 19:12:47,208 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2018-07-08 19:12:47,208 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2018-07-08 19:12:47,208 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2018-07-08 19:12:47,210 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2018-07-08 19:12:47,338 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1208) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2018-07-08 19:12:47,341 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2018-07-08 19:12:47,348 [main] INFO  (DfOldClassHandler#info():1045) - }
2018-07-08 19:12:47,348 [main] INFO  (Database#info():2785) - public void parseCustomizeEntity() {
2018-07-08 19:12:47,350 [main] INFO  (Database#info():2785) - }
2018-07-08 19:12:47,356 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2018-07-08 19:12:47,357 [main] INFO  (DfRefreshMan#resolveProjectAutoDetect():105) - *Cannot auto-detect your refresh Eclipse proejct.
2018-07-08 19:12:47,358 [main] INFO  (DfRefreshResourceProcess#show():299) - /===========================================================================
2018-07-08 19:12:47,358 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Refreshing [$$AutoDetect$$] by http://localhost:8386/
2018-07-08 19:12:47,359 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Retrying refreshing by default secondary URL http://localhost:8387/
2018-07-08 19:12:47,360 [main] INFO  (DfRefreshResourceProcess#show():299) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to refresh the resources.

[Project List]
[$$AutoDetect$$]

[Request URL]
http://localhost:8386/

[IOExpception]
ConnectException
Connection refused (Connection refused)
* * * * * * * * * */
2018-07-08 19:12:47,406 [main] INFO  (DfRefreshResourceProcess#show():299) - ==========/
2018-07-08 19:12:47,410 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s317ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2018-07-08 19:16:17,406 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2018-07-08 19:16:17,409 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2018-07-08 19:16:17,409 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2018-07-08 19:16:17,409 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2018-07-08 19:16:17,409 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2018-07-08 19:16:17,428 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 19:16:17,429 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 19:16:17,429 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 19:16:17,429 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 19:16:17,464 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2018-07-08 19:16:17,464 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2018-07-08 19:16:17,465 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2018-07-08 19:16:17,474 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 19:16:17,564 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2018-07-08 19:16:17,574 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2018-07-08 19:16:18,216 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 8.0.11
2018-07-08 19:16:18,217 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2018-07-08 19:16:18,218 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2018-07-08 19:16:18,219 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2018-07-08 19:16:18,220 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {twitter.$$NoNameSchema$$ as main}
2018-07-08 19:16:18,220 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2018-07-08 19:16:18,231 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'twitter' order by table_name asc
2018-07-08 19:16:18,236 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'twitter' order by table_name asc, column_name asc
2018-07-08 19:16:18,249 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'twitter' and DATA_TYPE = 'datetime'
2018-07-08 19:16:18,260 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2018-07-08 19:16:18,260 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2018-07-08 19:16:18,261 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2018-07-08 19:16:18,261 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.FAVOLITE(TABLE) // お気に入り
2018-07-08 19:16:18,301 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.FOLLOW(TABLE) // フォロー
2018-07-08 19:16:18,320 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.REPLY(TABLE) // リプライ
2018-07-08 19:16:18,346 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.RETWEET(TABLE) // リツイート
2018-07-08 19:16:18,363 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.TWEET(TABLE) // ツイート
2018-07-08 19:16:18,380 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.USER(TABLE) // 会員 : 会員テーブル
2018-07-08 19:16:18,393 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2018-07-08 19:16:18,393 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2018-07-08 19:16:18,393 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 6
2018-07-08 19:16:18,394 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2018-07-08 19:16:18,394 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2018-07-08 19:16:18,395 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2018-07-08 19:16:18,398 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2018-07-08 19:16:18,398 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-demo.xml
2018-07-08 19:16:18,398 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2018-07-08 19:16:18,420 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2018-07-08 19:16:18,423 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 19:16:18,483 [main] INFO  (DfSchemaDiff#setupDocumentAuthorOfNextSchema():419) - *Cannot get git branch of next schema.
java.lang.IllegalArgumentException: The argument 'object' should not be null.
	at org.dbflute.optional.OptionalObject.of(OptionalObject.java:69)
	at org.dbflute.optional.OptionalThing.of(OptionalThing.java:47)
	at org.dbflute.logic.doc.supplement.author.DfDocumentAuthorLogic.getGitBranch(DfDocumentAuthorLogic.java:92)
	at org.dbflute.logic.jdbc.schemadiff.DfSchemaDiff.setupDocumentAuthorOfNextSchema(DfSchemaDiff.java:417)
	at org.dbflute.logic.jdbc.schemadiff.DfSchemaDiff.loadNextSchema(DfSchemaDiff.java:406)
	at org.dbflute.logic.jdbc.schemaxml.DfSchemaXmlSerializer.doLoadNextSchema(DfSchemaXmlSerializer.java:1551)
	at org.dbflute.logic.jdbc.schemaxml.DfSchemaXmlSerializer.loadNextSchema(DfSchemaXmlSerializer.java:1543)
	at org.dbflute.logic.jdbc.schemaxml.DfSchemaXmlSerializer.serialize(DfSchemaXmlSerializer.java:332)
	at org.apache.torque.task.TorqueJDBCTransformTask.doExecute(TorqueJDBCTransformTask.java:127)
	at org.dbflute.task.bs.DfAbstractTask$1.callActualExecute(DfAbstractTask.java:113)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTask.execute(DfAbstractTask.java:135)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.helper.SingleCheckExecutor.executeTargets(SingleCheckExecutor.java:38)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:416)
	at org.apache.tools.ant.taskdefs.CallTarget.execute(CallTarget.java:105)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
2018-07-08 19:16:18,539 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1565) -  -> same as previous (schema diff)
2018-07-08 19:16:18,539 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2018-07-08 19:16:18,549 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s154ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql (MySQL 8.0.11)
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2018-07-08 19:16:19,087 [main] INFO  (TorqueDocumentationTask#begin():187) - +------------------------------------------+
2018-07-08 19:16:19,089 [main] INFO  (TorqueDocumentationTask#begin():188) - |                                          |
2018-07-08 19:16:19,089 [main] INFO  (TorqueDocumentationTask#begin():189) - |                   Doc                    |
2018-07-08 19:16:19,089 [main] INFO  (TorqueDocumentationTask#begin():197) - |                                          |
2018-07-08 19:16:19,089 [main] INFO  (TorqueDocumentationTask#begin():198) - +------------------------------------------+
2018-07-08 19:16:19,103 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 19:16:19,103 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 19:16:19,103 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 19:16:19,103 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 19:16:19,104 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():259) - 
2018-07-08 19:16:19,105 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():260) - * * * * * * * * * * *
2018-07-08 19:16:19,105 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():261) - *                   *
2018-07-08 19:16:19,105 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():262) - *    Schema HTML    *
2018-07-08 19:16:19,105 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():263) - *                   *
2018-07-08 19:16:19,105 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():264) - * * * * * * * * * * *
2018-07-08 19:16:19,193 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 19:16:19,252 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2018-07-08 19:16:19,427 [main] INFO  (Database#doEnableDocumentOutputDirectory():1224) - ...Setting up documentOutputDirectory: ./output/doc
2018-07-08 19:16:19,435 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2018-07-08 19:16:19,435 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2018-07-08 19:16:19,436 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2018-07-08 19:16:19,437 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2018-07-08 19:16:19,437 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2018-07-08 19:16:19,438 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2018-07-08 19:16:19,440 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2018-07-08 19:16:19,440 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2018-07-08 19:16:19,441 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2018-07-08 19:16:19,449 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():233) - ...Loading schema history
2018-07-08 19:16:19,477 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():237) -  -> found history: count=3
2018-07-08 19:16:19,653 [main] INFO  (DfRefreshMan#resolveProjectAutoDetect():105) - *Cannot auto-detect your refresh Eclipse proejct.
2018-07-08 19:16:19,655 [main] INFO  (DfRefreshResourceProcess#show():299) - /===========================================================================
2018-07-08 19:16:19,655 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Refreshing [$$AutoDetect$$] by http://localhost:8386/
2018-07-08 19:16:19,660 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Retrying refreshing by default secondary URL http://localhost:8387/
2018-07-08 19:16:19,661 [main] INFO  (DfRefreshResourceProcess#show():299) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to refresh the resources.

[Project List]
[$$AutoDetect$$]

[Request URL]
http://localhost:8386/

[IOExpception]
ConnectException
Connection refused (Connection refused)
* * * * * * * * * */
2018-07-08 19:16:19,662 [main] INFO  (DfRefreshResourceProcess#show():299) - ==========/
2018-07-08 19:16:19,664 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s587ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2018-07-08 19:16:21,236 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2018-07-08 19:16:21,238 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2018-07-08 19:16:21,239 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2018-07-08 19:16:21,239 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2018-07-08 19:16:21,239 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2018-07-08 19:16:21,258 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 19:16:21,258 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 19:16:21,258 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 19:16:21,259 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 19:16:21,274 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2018-07-08 19:16:21,274 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2018-07-08 19:16:21,305 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 19:16:21,362 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2018-07-08 19:16:21,567 [main] INFO  (Database#doEnableGenerateOutputDirectory():1192) - ...Setting up generateOutputDirectory: ../src/main/java
2018-07-08 19:16:21,571 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2018-07-08 19:16:21,571 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2018-07-08 19:16:21,572 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2018-07-08 19:16:21,573 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2018-07-08 19:16:21,573 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2018-07-08 19:16:21,574 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2018-07-08 19:16:21,577 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2018-07-08 19:16:21,577 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2018-07-08 19:16:21,580 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2018-07-08 19:16:21,596 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2018-07-08 19:16:21,596 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2018-07-08 19:16:21,596 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2018-07-08 19:16:21,596 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2018-07-08 19:16:21,596 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2018-07-08 19:16:21,596 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2018-07-08 19:16:21,641 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2018-07-08 19:16:21,641 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2018-07-08 19:16:21,641 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2018-07-08 19:16:21,642 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2018-07-08 19:16:21,652 [main] INFO  (Database#info():2785) - public void parseAllCommon() {
2018-07-08 19:16:21,653 [main] INFO  (Database#info():2785) -     parse('DBCurrent');
2018-07-08 19:16:21,657 [main] INFO  (Database#info():2785) -     parse('DBFluteConfig');
2018-07-08 19:16:21,670 [main] INFO  (Database#info():2785) -     parse('DBFluteInitializer');
2018-07-08 19:16:21,673 [main] INFO  (Database#info():2785) -     parse('DBMetaInstanceHandler');
2018-07-08 19:16:21,689 [main] INFO  (Database#info():2785) -     parse('EntityDefinedCommonColumn');
2018-07-08 19:16:21,692 [main] INFO  (Database#info():2785) -     parse('ImplementedBehaviorSelector');
2018-07-08 19:16:21,697 [main] INFO  (Database#info():2785) -     parse('ImplementedCommonColumnAutoSetupper');
2018-07-08 19:16:21,699 [main] INFO  (Database#info():2785) -     parse('ImplementedInvokerAssistant');
2018-07-08 19:16:21,703 [main] INFO  (Database#info():2785) -     parse('ImplementedSqlClauseCreator');
2018-07-08 19:16:21,706 [main] INFO  (Database#info():2785) - }
2018-07-08 19:16:21,706 [main] INFO  (Database#info():2785) - public void parseContainerConfig() {
2018-07-08 19:16:21,707 [main] INFO  (Database#info():2785) -     parse('demo/dbflute/allcommon/DBFluteBeansJavaConfig.java')
2018-07-08 19:16:21,717 [main] INFO  (Database#info():2785) - }
2018-07-08 19:16:21,720 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2018-07-08 19:16:21,740 [main] INFO  (DfOldClassHandler#info():1045) - }
2018-07-08 19:16:21,741 [main] INFO  (Database#info():2785) - public void parseTableClass() {
2018-07-08 19:16:21,742 [main] INFO  (Database#info():2785) -     parse('FAVOLITE');
2018-07-08 19:16:21,949 [main] INFO  (Database#info():2785) -     parse('FOLLOW');
2018-07-08 19:16:22,082 [main] INFO  (Database#info():2785) -     parse('REPLY');
2018-07-08 19:16:22,244 [main] INFO  (Database#info():2785) -     parse('RETWEET');
2018-07-08 19:16:22,350 [main] INFO  (Database#info():2785) -     parse('TWEET');
2018-07-08 19:16:22,526 [main] INFO  (Database#info():2785) -     parse('USER');
2018-07-08 19:16:22,689 [main] INFO  (Database#info():2785) - }
2018-07-08 19:16:22,689 [main] INFO  (Database#info():2785) -  
2018-07-08 19:16:22,698 [main] INFO  (DfRefreshMan#resolveProjectAutoDetect():105) - *Cannot auto-detect your refresh Eclipse proejct.
2018-07-08 19:16:22,699 [main] INFO  (DfRefreshResourceProcess#show():299) - /===========================================================================
2018-07-08 19:16:22,700 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Refreshing [$$AutoDetect$$] by http://localhost:8386/
2018-07-08 19:16:22,701 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Retrying refreshing by default secondary URL http://localhost:8387/
2018-07-08 19:16:22,702 [main] INFO  (DfRefreshResourceProcess#show():299) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to refresh the resources.

[Project List]
[$$AutoDetect$$]

[Request URL]
http://localhost:8386/

[IOExpception]
ConnectException
Connection refused (Connection refused)
* * * * * * * * * */
2018-07-08 19:16:22,702 [main] INFO  (DfRefreshResourceProcess#show():299) - ==========/
2018-07-08 19:16:22,707 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s484ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2018-07-08 19:16:23,356 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2018-07-08 19:16:23,357 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2018-07-08 19:16:23,358 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2018-07-08 19:16:23,358 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2018-07-08 19:16:23,358 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2018-07-08 19:16:23,370 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 19:16:23,370 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 19:16:23,370 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 19:16:23,370 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 19:16:23,387 [main] INFO  (DfSqlFileFireMan#fire():93) - {Fired SQL}: success=0 failure=0 (in 0 files)
2018-07-08 19:16:23,394 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s045ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2018-07-08 19:16:23,917 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2018-07-08 19:16:23,918 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2018-07-08 19:16:23,919 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2018-07-08 19:16:23,919 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2018-07-08 19:16:23,919 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2018-07-08 19:16:23,931 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 19:16:23,931 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 19:16:23,931 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 19:16:23,931 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 19:16:23,940 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2018-07-08 19:16:23,940 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2018-07-08 19:16:23,944 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 19:16:24,005 [main] INFO  (DfSqlFileFireMan#fire():93) - {Fired SQL}: success=0 failure=0 (in 0 files)
2018-07-08 19:16:24,029 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2018-07-08 19:16:24,029 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2018-07-08 19:16:24,029 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2018-07-08 19:16:24,029 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2018-07-08 19:16:24,029 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2018-07-08 19:16:24,030 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2018-07-08 19:16:24,030 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2018-07-08 19:16:24,030 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2018-07-08 19:16:24,031 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2018-07-08 19:16:24,160 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1208) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2018-07-08 19:16:24,162 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2018-07-08 19:16:24,168 [main] INFO  (DfOldClassHandler#info():1045) - }
2018-07-08 19:16:24,168 [main] INFO  (Database#info():2785) - public void parseCustomizeEntity() {
2018-07-08 19:16:24,169 [main] INFO  (Database#info():2785) - }
2018-07-08 19:16:24,176 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2018-07-08 19:16:24,177 [main] INFO  (DfRefreshMan#resolveProjectAutoDetect():105) - *Cannot auto-detect your refresh Eclipse proejct.
2018-07-08 19:16:24,178 [main] INFO  (DfRefreshResourceProcess#show():299) - /===========================================================================
2018-07-08 19:16:24,178 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Refreshing [$$AutoDetect$$] by http://localhost:8386/
2018-07-08 19:16:24,179 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Retrying refreshing by default secondary URL http://localhost:8387/
2018-07-08 19:16:24,180 [main] INFO  (DfRefreshResourceProcess#show():299) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to refresh the resources.

[Project List]
[$$AutoDetect$$]

[Request URL]
http://localhost:8386/

[IOExpception]
ConnectException
Connection refused (Connection refused)
* * * * * * * * * */
2018-07-08 19:16:24,209 [main] INFO  (DfRefreshResourceProcess#show():299) - ==========/
2018-07-08 19:16:24,213 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s303ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2018-07-08 19:35:58,268 [main] INFO  (DfReplaceSchemaTask#begin():92) - +------------------------------------------+
2018-07-08 19:35:58,271 [main] INFO  (DfReplaceSchemaTask#begin():93) - |                                          |
2018-07-08 19:35:58,271 [main] INFO  (DfReplaceSchemaTask#begin():94) - |              ReplaceSchema               |
2018-07-08 19:35:58,277 [main] INFO  (DfReplaceSchemaTask#begin():102) - |                                          |
2018-07-08 19:35:58,277 [main] INFO  (DfReplaceSchemaTask#begin():103) - +------------------------------------------+
2018-07-08 19:35:58,278 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():401) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2018-07-08 19:35:59,876 [main] INFO  (DfReplaceSchemaTask#begin():108) - *The execution of ReplaceSchema was cancelled.
2018-07-08 19:35:59,891 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s630ms *Abort

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

    * * * * * * *
    * Cancelled *
    * * * * * * *
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2018-07-08 19:36:05,084 [main] INFO  (DfReplaceSchemaTask#begin():92) - +------------------------------------------+
2018-07-08 19:36:05,086 [main] INFO  (DfReplaceSchemaTask#begin():93) - |                                          |
2018-07-08 19:36:05,086 [main] INFO  (DfReplaceSchemaTask#begin():94) - |              ReplaceSchema               |
2018-07-08 19:36:05,089 [main] INFO  (DfReplaceSchemaTask#begin():102) - |                                          |
2018-07-08 19:36:05,090 [main] INFO  (DfReplaceSchemaTask#begin():103) - +------------------------------------------+
2018-07-08 19:36:05,090 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():401) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2018-07-08 19:36:06,233 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 19:36:06,234 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 19:36:06,234 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 19:36:06,234 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 19:36:06,243 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2018-07-08 19:36:06,541 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.6.40
2018-07-08 19:36:06,541 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2018-07-08 19:36:06,554 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():229) - 
2018-07-08 19:36:06,554 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():230) - * * * * * * * * * * *
2018-07-08 19:36:06,554 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():231) - *                   *
2018-07-08 19:36:06,555 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():232) - * Initialize Schema *
2018-07-08 19:36:06,556 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():233) - *                   *
2018-07-08 19:36:06,556 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():234) - * * * * * * * * * * *
2018-07-08 19:36:06,569 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2018-07-08 19:36:06,569 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {twitter.$$NoNameSchema$$ as main}
2018-07-08 19:36:06,569 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2018-07-08 19:36:06,598 [main] INFO  (DfCreateSchemaProcess#createSchema():266) - 
2018-07-08 19:36:06,599 [main] INFO  (DfCreateSchemaProcess#createSchema():267) - * * * * * * * * *
2018-07-08 19:36:06,599 [main] INFO  (DfCreateSchemaProcess#createSchema():268) - *               *
2018-07-08 19:36:06,599 [main] INFO  (DfCreateSchemaProcess#createSchema():269) - * Create Schema *
2018-07-08 19:36:06,599 [main] INFO  (DfCreateSchemaProcess#createSchema():270) - *               *
2018-07-08 19:36:06,599 [main] INFO  (DfCreateSchemaProcess#createSchema():271) - * * * * * * * * *
2018-07-08 19:36:06,604 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: replace-schema.sql
2018-07-08 19:36:06,608 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE FAVOLITE
(
	FAVOLITE_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'お気に入りID : お気に入りID',
	USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID
',
	TWEET_ID BIGINT NOT NULL COMMENT 'ツイートID : お気に入りしたツイートID
',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : お気に入りした時間',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時
',
	PRIMARY KEY (FAVOLITE_ID)
) COMMENT = 'お気に入り'
2018-07-08 19:36:06,649 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE FOLLOW
(
	FOLLOW_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'フォローID : フォローID',
	FOLLOWEE_ID BIGINT NOT NULL COMMENT 'フォロイーID : フォロイーID
フォローする人の会員IDが入る
',
	FOLLOWER_ID BIGINT NOT NULL COMMENT 'フォロワーID : フォロワーID
フォローされる人のIDが入る',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
フォローされているかをT / Fで判定する
',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : フォローした日時',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (FOLLOW_ID),
	CONSTRAINT UQ_NEW_TABLE_XXX UNIQUE (FOLLOWEE_ID, FOLLOWER_ID)
) COMMENT = 'フォロー'
2018-07-08 19:36:06,662 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE REPLY
(
	REPLY_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'リプライID : リプライID',
	REPLYEE_ID BIGINT NOT NULL COMMENT 'リプライした会員ID : リプライした会員ID
',
	REPLYER_ID BIGINT NOT NULL COMMENT 'リプライされた会員ID : リプライされた会員のID',
	REPLYEE_TWEET_ID BIGINT NOT NULL COMMENT 'リプライしたツイートID : リプライしたツイートのID
',
	REPLYER_TWEET_ID BIGINT NOT NULL COMMENT 'リプライされたツイートID : リプライされたツイートのID',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : リプライした日時',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (REPLY_ID)
) COMMENT = 'リプライ'
2018-07-08 19:36:06,671 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE RETWEET
(
	RETWEET_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'リツイートID : リツイートID',
	USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID
リツイートする人の会員IDが入る
',
	TWEET_ID BIGINT NOT NULL COMMENT 'ツイートID : ツイートID
リツイートされるツイートIDが格納される',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
リツイートしたかどうかを見る
一回リツイートして辞めてもう一回リツイートをするときにTにして表示できるようにする
',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : 登録日時',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (RETWEET_ID),
	CONSTRAINT UQ_NEW_TABLE_XXX UNIQUE (USER_ID, TWEET_ID)
) COMMENT = 'リツイート'
2018-07-08 19:36:06,751 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'ツイートID : ツイートID',
	USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID
',
	TWEET VARCHAR(140) NOT NULL COMMENT 'ツイート : ツイート
140文字制限されているので最大長140に設定',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : ツイートした時間',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'ツイート'
2018-07-08 19:36:06,763 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE USER
(
	USER_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員ID',
	USER_NAME VARCHAR(64) NOT NULL COMMENT '会員名称 : 会員名称。
このデータが名前として表示される。',
	MAIL_ADDRESS VARCHAR(256) NOT NULL UNIQUE COMMENT 'メールアドレス : メールアドレス',
	BIRTH_DATE DATE COMMENT '誕生日 : 誕生日
時間までは考慮しない
特に入力する必要もないのでNULLを許容する',
	PROFILE_SENTENCE VARCHAR(300) NOT NULL COMMENT 'プロフィール文 : プロフィール文
長いのも困るので300文字',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : 登録日時
ユーザがサービスに登録した日時を格納する',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時
',
	PRIMARY KEY (USER_ID)
) ENGINE = InnoDB COMMENT = '会員 : 会員テーブル' DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci
2018-07-08 19:36:06,855 [main] INFO  (DfSqlFileFireMan#fire():93) - {Create Schema}: success=5 failure=1 *break (in 1 files)
2018-07-08 19:36:06,902 [main] ERROR (DfDBFluteTaskUtil#logException():150) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute DBFlute Task 'ReplaceSchema'.

[Advice]
Check the exception messages and the stack traces.

[Database Product]
MySQL 5.6.40

[JDBC Driver]
MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
* * * * * * * * * */
org.dbflute.exception.SQLFailureException: Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute the SQL!

[SQL File]
playsql/replace-schema.sql

[Executed SQL]
CREATE TABLE USER
(
	USER_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員ID',
	USER_NAME VARCHAR(64) NOT NULL COMMENT '会員名称 : 会員名称。
このデータが名前として表示される。',
	MAIL_ADDRESS VARCHAR(256) NOT NULL UNIQUE COMMENT 'メールアドレス : メールアドレス',
	BIRTH_DATE DATE COMMENT '誕生日 : 誕生日
時間までは考慮しない
特に入力する必要もないのでNULLを許容する',
	PROFILE_SENTENCE VARCHAR(300) NOT NULL COMMENT 'プロフィール文 : プロフィール文
長いのも困るので300文字',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : 登録日時
ユーザがサービスに登録した日時を格納する',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時
',
	PRIMARY KEY (USER_ID)
) ENGINE = InnoDB COMMENT = '会員 : 会員テーブル' DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci

[SQLState]
42000

[ErrorCode]
1071

[SQLException]
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException
Specified key was too long; max key length is 767 bytes
* * * * * * * * * */
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerBase.throwSQLFailureException(DfSqlFileRunnerBase.java:587)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.execSQL(DfSqlFileRunnerExecute.java:80)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerBase.runTransaction(DfSqlFileRunnerBase.java:122)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileFireMan.processSqlFile(DfSqlFileFireMan.java:173)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileFireMan.fire(DfSqlFileFireMan.java:71)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.createSchema(DfCreateSchemaProcess.java:274)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.execute(DfCreateSchemaProcess.java:143)
	at org.dbflute.task.DfReplaceSchemaTask.createSchema(DfReplaceSchemaTask.java:301)
	at org.dbflute.task.DfReplaceSchemaTask.executeCoreProcess(DfReplaceSchemaTask.java:246)
	at org.dbflute.task.DfReplaceSchemaTask.processReplaceSchema(DfReplaceSchemaTask.java:232)
	at org.dbflute.task.DfReplaceSchemaTask.doExecute(DfReplaceSchemaTask.java:158)
	at org.dbflute.task.bs.DfAbstractTexenTask$1.callActualExecute(DfAbstractTexenTask.java:129)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTexenTask.execute(DfAbstractTexenTask.java:151)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Specified key was too long; max key length is 767 bytes
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2482)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2440)
	at com.mysql.jdbc.StatementImpl.executeInternal(StatementImpl.java:845)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:745)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.processNonDispatch(DfSqlFileRunnerExecute.java:98)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema.processNonDispatch(DfCreateSchemaProcess.java:460)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.execSQL(DfSqlFileRunnerExecute.java:66)
	... 29 more
2018-07-08 19:36:06,952 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2018-07-08 19:36:06,962 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s883ms *Abort

  DBFLUTE_CLIENT: {demo}
    database  = mysql (MySQL 5.6.40)
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Create Schema}: success=5 failure=1 *break (in 1 files)
  x replace-schema.sql
   >> (failed: Look at the exception message)
    * * * * * *
    * Failure *
    * * * * * *
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2018-07-08 19:38:32,815 [main] INFO  (DfReplaceSchemaTask#begin():92) - +------------------------------------------+
2018-07-08 19:38:32,818 [main] INFO  (DfReplaceSchemaTask#begin():93) - |                                          |
2018-07-08 19:38:32,818 [main] INFO  (DfReplaceSchemaTask#begin():94) - |              ReplaceSchema               |
2018-07-08 19:38:32,823 [main] INFO  (DfReplaceSchemaTask#begin():102) - |                                          |
2018-07-08 19:38:32,823 [main] INFO  (DfReplaceSchemaTask#begin():103) - +------------------------------------------+
2018-07-08 19:38:32,824 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():401) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2018-07-08 19:38:33,923 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 19:38:33,923 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 19:38:33,924 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 19:38:33,924 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 19:38:33,932 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2018-07-08 19:38:34,243 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.6.40
2018-07-08 19:38:34,244 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2018-07-08 19:38:34,256 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():229) - 
2018-07-08 19:38:34,256 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():230) - * * * * * * * * * * *
2018-07-08 19:38:34,256 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():231) - *                   *
2018-07-08 19:38:34,257 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():232) - * Initialize Schema *
2018-07-08 19:38:34,258 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():233) - *                   *
2018-07-08 19:38:34,258 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():234) - * * * * * * * * * * *
2018-07-08 19:38:34,274 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2018-07-08 19:38:34,274 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {twitter.$$NoNameSchema$$ as main}
2018-07-08 19:38:34,274 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2018-07-08 19:38:34,296 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table FAVOLITE
2018-07-08 19:38:34,301 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table FOLLOW
2018-07-08 19:38:34,305 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table REPLY
2018-07-08 19:38:34,309 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table RETWEET
2018-07-08 19:38:34,314 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table TWEET
2018-07-08 19:38:34,324 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table FAVOLITE
2018-07-08 19:38:34,326 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table FOLLOW
2018-07-08 19:38:34,329 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table REPLY
2018-07-08 19:38:34,333 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table RETWEET
2018-07-08 19:38:34,335 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table TWEET
2018-07-08 19:38:34,359 [main] INFO  (DfCreateSchemaProcess#createSchema():266) - 
2018-07-08 19:38:34,360 [main] INFO  (DfCreateSchemaProcess#createSchema():267) - * * * * * * * * *
2018-07-08 19:38:34,360 [main] INFO  (DfCreateSchemaProcess#createSchema():268) - *               *
2018-07-08 19:38:34,360 [main] INFO  (DfCreateSchemaProcess#createSchema():269) - * Create Schema *
2018-07-08 19:38:34,361 [main] INFO  (DfCreateSchemaProcess#createSchema():270) - *               *
2018-07-08 19:38:34,361 [main] INFO  (DfCreateSchemaProcess#createSchema():271) - * * * * * * * * *
2018-07-08 19:38:34,367 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: replace-schema.sql
2018-07-08 19:38:34,370 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE FAVOLITE
(
	FAVOLITE_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'お気に入りID : お気に入りID',
	USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID
',
	TWEET_ID BIGINT NOT NULL COMMENT 'ツイートID : お気に入りしたツイートID
',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : お気に入りした時間',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時
',
	PRIMARY KEY (FAVOLITE_ID)
) COMMENT = 'お気に入り'
2018-07-08 19:38:34,449 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE FOLLOW
(
	FOLLOW_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'フォローID : フォローID',
	FOLLOWEE_ID BIGINT NOT NULL COMMENT 'フォロイーID : フォロイーID
フォローする人の会員IDが入る
',
	FOLLOWER_ID BIGINT NOT NULL COMMENT 'フォロワーID : フォロワーID
フォローされる人のIDが入る',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
フォローされているかをT / Fで判定する
',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : フォローした日時',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (FOLLOW_ID),
	CONSTRAINT UQ_NEW_TABLE_XXX UNIQUE (FOLLOWEE_ID, FOLLOWER_ID)
) COMMENT = 'フォロー'
2018-07-08 19:38:34,461 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE REPLY
(
	REPLY_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'リプライID : リプライID',
	REPLYEE_ID BIGINT NOT NULL COMMENT 'リプライした会員ID : リプライした会員ID
',
	REPLYER_ID BIGINT NOT NULL COMMENT 'リプライされた会員ID : リプライされた会員のID',
	REPLYEE_TWEET_ID BIGINT NOT NULL COMMENT 'リプライしたツイートID : リプライしたツイートのID
',
	REPLYER_TWEET_ID BIGINT NOT NULL COMMENT 'リプライされたツイートID : リプライされたツイートのID',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : リプライした日時',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (REPLY_ID)
) COMMENT = 'リプライ'
2018-07-08 19:38:34,471 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE RETWEET
(
	RETWEET_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'リツイートID : リツイートID',
	USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID
リツイートする人の会員IDが入る
',
	TWEET_ID BIGINT NOT NULL COMMENT 'ツイートID : ツイートID
リツイートされるツイートIDが格納される',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
リツイートしたかどうかを見る
一回リツイートして辞めてもう一回リツイートをするときにTにして表示できるようにする
',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : 登録日時',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (RETWEET_ID),
	CONSTRAINT UQ_NEW_TABLE_XXX UNIQUE (USER_ID, TWEET_ID)
) COMMENT = 'リツイート'
2018-07-08 19:38:34,554 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'ツイートID : ツイートID',
	USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID
',
	TWEET VARCHAR(140) NOT NULL COMMENT 'ツイート : ツイート
140文字制限されているので最大長140に設定',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : ツイートした時間',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'ツイート'
2018-07-08 19:38:34,564 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE USER
(
	USER_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員ID',
	USER_NAME VARCHAR(64) NOT NULL COMMENT '会員名称 : 会員名称。
このデータが名前として表示される。',
	MAIL_ADDRESS VARCHAR(256) NOT NULL UNIQUE COMMENT 'メールアドレス : メールアドレス',
	BIRTH_DATE DATE COMMENT '誕生日 : 誕生日
時間までは考慮しない
特に入力する必要もないのでNULLを許容する',
	PROFILE_SENTENCE VARCHAR(200) NOT NULL COMMENT 'プロフィール文 : プロフィール文
長いのも困るので300文字',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : 登録日時
ユーザがサービスに登録した日時を格納する',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時
',
	PRIMARY KEY (USER_ID)
) ENGINE = InnoDB COMMENT = '会員 : 会員テーブル' DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci
2018-07-08 19:38:34,646 [main] INFO  (DfSqlFileFireMan#fire():93) - {Create Schema}: success=5 failure=1 *break (in 1 files)
2018-07-08 19:38:34,696 [main] ERROR (DfDBFluteTaskUtil#logException():150) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute DBFlute Task 'ReplaceSchema'.

[Advice]
Check the exception messages and the stack traces.

[Database Product]
MySQL 5.6.40

[JDBC Driver]
MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
* * * * * * * * * */
org.dbflute.exception.SQLFailureException: Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute the SQL!

[SQL File]
playsql/replace-schema.sql

[Executed SQL]
CREATE TABLE USER
(
	USER_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員ID',
	USER_NAME VARCHAR(64) NOT NULL COMMENT '会員名称 : 会員名称。
このデータが名前として表示される。',
	MAIL_ADDRESS VARCHAR(256) NOT NULL UNIQUE COMMENT 'メールアドレス : メールアドレス',
	BIRTH_DATE DATE COMMENT '誕生日 : 誕生日
時間までは考慮しない
特に入力する必要もないのでNULLを許容する',
	PROFILE_SENTENCE VARCHAR(200) NOT NULL COMMENT 'プロフィール文 : プロフィール文
長いのも困るので300文字',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : 登録日時
ユーザがサービスに登録した日時を格納する',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時
',
	PRIMARY KEY (USER_ID)
) ENGINE = InnoDB COMMENT = '会員 : 会員テーブル' DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci

[SQLState]
42000

[ErrorCode]
1071

[SQLException]
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException
Specified key was too long; max key length is 767 bytes
* * * * * * * * * */
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerBase.throwSQLFailureException(DfSqlFileRunnerBase.java:587)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.execSQL(DfSqlFileRunnerExecute.java:80)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerBase.runTransaction(DfSqlFileRunnerBase.java:122)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileFireMan.processSqlFile(DfSqlFileFireMan.java:173)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileFireMan.fire(DfSqlFileFireMan.java:71)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.createSchema(DfCreateSchemaProcess.java:274)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.execute(DfCreateSchemaProcess.java:143)
	at org.dbflute.task.DfReplaceSchemaTask.createSchema(DfReplaceSchemaTask.java:301)
	at org.dbflute.task.DfReplaceSchemaTask.executeCoreProcess(DfReplaceSchemaTask.java:246)
	at org.dbflute.task.DfReplaceSchemaTask.processReplaceSchema(DfReplaceSchemaTask.java:232)
	at org.dbflute.task.DfReplaceSchemaTask.doExecute(DfReplaceSchemaTask.java:158)
	at org.dbflute.task.bs.DfAbstractTexenTask$1.callActualExecute(DfAbstractTexenTask.java:129)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTexenTask.execute(DfAbstractTexenTask.java:151)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Specified key was too long; max key length is 767 bytes
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2482)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2440)
	at com.mysql.jdbc.StatementImpl.executeInternal(StatementImpl.java:845)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:745)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.processNonDispatch(DfSqlFileRunnerExecute.java:98)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema.processNonDispatch(DfCreateSchemaProcess.java:460)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.execSQL(DfSqlFileRunnerExecute.java:66)
	... 29 more
2018-07-08 19:38:34,742 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2018-07-08 19:38:34,747 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s948ms *Abort

  DBFLUTE_CLIENT: {demo}
    database  = mysql (MySQL 5.6.40)
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Create Schema}: success=5 failure=1 *break (in 1 files)
  x replace-schema.sql
   >> (failed: Look at the exception message)
    * * * * * *
    * Failure *
    * * * * * *
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2018-07-08 19:39:17,022 [main] INFO  (DfReplaceSchemaTask#begin():92) - +------------------------------------------+
2018-07-08 19:39:17,024 [main] INFO  (DfReplaceSchemaTask#begin():93) - |                                          |
2018-07-08 19:39:17,025 [main] INFO  (DfReplaceSchemaTask#begin():94) - |              ReplaceSchema               |
2018-07-08 19:39:17,030 [main] INFO  (DfReplaceSchemaTask#begin():102) - |                                          |
2018-07-08 19:39:17,030 [main] INFO  (DfReplaceSchemaTask#begin():103) - +------------------------------------------+
2018-07-08 19:39:17,031 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():401) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2018-07-08 19:39:18,478 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 19:39:18,478 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 19:39:18,478 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 19:39:18,478 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 19:39:18,488 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2018-07-08 19:39:18,797 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.6.40
2018-07-08 19:39:18,797 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2018-07-08 19:39:18,809 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():229) - 
2018-07-08 19:39:18,809 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():230) - * * * * * * * * * * *
2018-07-08 19:39:18,809 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():231) - *                   *
2018-07-08 19:39:18,811 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():232) - * Initialize Schema *
2018-07-08 19:39:18,811 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():233) - *                   *
2018-07-08 19:39:18,811 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():234) - * * * * * * * * * * *
2018-07-08 19:39:18,824 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2018-07-08 19:39:18,825 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {twitter.$$NoNameSchema$$ as main}
2018-07-08 19:39:18,825 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2018-07-08 19:39:18,848 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table FAVOLITE
2018-07-08 19:39:18,852 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table FOLLOW
2018-07-08 19:39:18,856 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table REPLY
2018-07-08 19:39:18,861 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table RETWEET
2018-07-08 19:39:18,865 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table TWEET
2018-07-08 19:39:18,874 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table FAVOLITE
2018-07-08 19:39:18,876 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table FOLLOW
2018-07-08 19:39:18,879 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table REPLY
2018-07-08 19:39:18,881 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table RETWEET
2018-07-08 19:39:18,883 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table TWEET
2018-07-08 19:39:18,904 [main] INFO  (DfCreateSchemaProcess#createSchema():266) - 
2018-07-08 19:39:18,904 [main] INFO  (DfCreateSchemaProcess#createSchema():267) - * * * * * * * * *
2018-07-08 19:39:18,904 [main] INFO  (DfCreateSchemaProcess#createSchema():268) - *               *
2018-07-08 19:39:18,904 [main] INFO  (DfCreateSchemaProcess#createSchema():269) - * Create Schema *
2018-07-08 19:39:18,905 [main] INFO  (DfCreateSchemaProcess#createSchema():270) - *               *
2018-07-08 19:39:18,905 [main] INFO  (DfCreateSchemaProcess#createSchema():271) - * * * * * * * * *
2018-07-08 19:39:18,911 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: replace-schema.sql
2018-07-08 19:39:18,916 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE FAVOLITE
(
	FAVOLITE_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'お気に入りID : お気に入りID',
	USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID
',
	TWEET_ID BIGINT NOT NULL COMMENT 'ツイートID : お気に入りしたツイートID
',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : お気に入りした時間',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時
',
	PRIMARY KEY (FAVOLITE_ID)
) COMMENT = 'お気に入り'
2018-07-08 19:39:18,928 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE FOLLOW
(
	FOLLOW_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'フォローID : フォローID',
	FOLLOWEE_ID BIGINT NOT NULL COMMENT 'フォロイーID : フォロイーID
フォローする人の会員IDが入る
',
	FOLLOWER_ID BIGINT NOT NULL COMMENT 'フォロワーID : フォロワーID
フォローされる人のIDが入る',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
フォローされているかをT / Fで判定する
',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : フォローした日時',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (FOLLOW_ID),
	CONSTRAINT UQ_NEW_TABLE_XXX UNIQUE (FOLLOWEE_ID, FOLLOWER_ID)
) COMMENT = 'フォロー'
2018-07-08 19:39:18,996 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE REPLY
(
	REPLY_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'リプライID : リプライID',
	REPLYEE_ID BIGINT NOT NULL COMMENT 'リプライした会員ID : リプライした会員ID
',
	REPLYER_ID BIGINT NOT NULL COMMENT 'リプライされた会員ID : リプライされた会員のID',
	REPLYEE_TWEET_ID BIGINT NOT NULL COMMENT 'リプライしたツイートID : リプライしたツイートのID
',
	REPLYER_TWEET_ID BIGINT NOT NULL COMMENT 'リプライされたツイートID : リプライされたツイートのID',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : リプライした日時',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (REPLY_ID)
) COMMENT = 'リプライ'
2018-07-08 19:39:19,007 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE RETWEET
(
	RETWEET_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'リツイートID : リツイートID',
	USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID
リツイートする人の会員IDが入る
',
	TWEET_ID BIGINT NOT NULL COMMENT 'ツイートID : ツイートID
リツイートされるツイートIDが格納される',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
リツイートしたかどうかを見る
一回リツイートして辞めてもう一回リツイートをするときにTにして表示できるようにする
',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : 登録日時',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (RETWEET_ID),
	CONSTRAINT UQ_NEW_TABLE_XXX UNIQUE (USER_ID, TWEET_ID)
) COMMENT = 'リツイート'
2018-07-08 19:39:19,018 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'ツイートID : ツイートID',
	USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID
',
	TWEET VARCHAR(140) NOT NULL COMMENT 'ツイート : ツイート
140文字制限されているので最大長140に設定',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : ツイートした時間',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'ツイート'
2018-07-08 19:39:19,101 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE USER
(
	USER_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員ID',
	USER_NAME VARCHAR(64) NOT NULL COMMENT '会員名称 : 会員名称。
このデータが名前として表示される。',
	MAIL_ADDRESS VARCHAR(255) NOT NULL UNIQUE COMMENT 'メールアドレス : メールアドレス',
	BIRTH_DATE DATE COMMENT '誕生日 : 誕生日
時間までは考慮しない
特に入力する必要もないのでNULLを許容する',
	PROFILE_SENTENCE VARCHAR(200) NOT NULL COMMENT 'プロフィール文 : プロフィール文
長いのも困るので300文字',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : 登録日時
ユーザがサービスに登録した日時を格納する',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時
',
	PRIMARY KEY (USER_ID)
) ENGINE = InnoDB COMMENT = '会員 : 会員テーブル' DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci
2018-07-08 19:39:19,111 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE FAVOLITE
	ADD CONSTRAINT FK_FAVOLITE_TWEET FOREIGN KEY (TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:39:19,125 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYEE_TWEET FOREIGN KEY (REPLYEE_TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:39:19,234 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYER_TWEET FOREIGN KEY (REPLYER_TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:39:19,256 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE RETWEET
	ADD CONSTRAINT FK_RETWEET_TWEET FOREIGN KEY (TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:39:19,270 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FAVOLITE
	ADD CONSTRAINT FK_FAVOLITE_USER FOREIGN KEY (USER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:39:19,283 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOW
	ADD CONSTRAINT FK_FOLLOWEE_USER FOREIGN KEY (FOLLOWEE_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:39:19,296 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOW
	ADD CONSTRAINT FK_FOLLOWER_USER FOREIGN KEY (FOLLOWER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:39:19,310 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYEE_USER FOREIGN KEY (REPLYEE_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:39:19,325 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYER_USER FOREIGN KEY (REPLYER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:39:19,349 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE RETWEET
	ADD CONSTRAINT FK_RETWEET_USER FOREIGN KEY (USER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:39:19,362 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
	ADD CONSTRAINT FK_TWEET_USER FOREIGN KEY (USER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-08 19:39:19,383 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=17 failure=0
2018-07-08 19:39:19,383 [main] INFO  (DfSqlFileFireMan#fire():93) - {Create Schema}: success=17 failure=0 (in 1 files)
2018-07-08 19:39:19,464 [main] INFO  (DfLoadDataProcess#execute():130) - 
2018-07-08 19:39:19,464 [main] INFO  (DfLoadDataProcess#execute():131) - * * * * * * * * * * *
2018-07-08 19:39:19,464 [main] INFO  (DfLoadDataProcess#execute():132) - *                   *
2018-07-08 19:39:19,464 [main] INFO  (DfLoadDataProcess#execute():133) - * Load Data         *
2018-07-08 19:39:19,465 [main] INFO  (DfLoadDataProcess#execute():134) - *                   *
2018-07-08 19:39:19,465 [main] INFO  (DfLoadDataProcess#execute():135) - * * * * * * * * * * *
2018-07-08 19:39:19,485 [main] INFO  (DfTakeFinallyProcess#takeFinally():237) - 
2018-07-08 19:39:19,485 [main] INFO  (DfTakeFinallyProcess#takeFinally():238) - * * * * * * * **
2018-07-08 19:39:19,485 [main] INFO  (DfTakeFinallyProcess#takeFinally():239) - *              *
2018-07-08 19:39:19,485 [main] INFO  (DfTakeFinallyProcess#takeFinally():240) - * Take Finally *
2018-07-08 19:39:19,485 [main] INFO  (DfTakeFinallyProcess#takeFinally():241) - *              *
2018-07-08 19:39:19,485 [main] INFO  (DfTakeFinallyProcess#takeFinally():242) - * * * * * * * **
2018-07-08 19:39:19,491 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: take-finally.sql
2018-07-08 19:39:19,492 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2018-07-08 19:39:19,492 [main] INFO  (DfSqlFileFireMan#fire():93) - {Take Finally}: success=0 failure=0 (in 1 files)
2018-07-08 19:39:19,493 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2018-07-08 19:39:19,498 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m02s494ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql (MySQL 5.6.40)
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Create Schema}: success=17 failure=0 (in 1 files)
  o replace-schema.sql

 {Load Data}: loaded-files=0
  - (no data file)

 {Take Finally}: success=0 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2018-07-08 19:39:25,126 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2018-07-08 19:39:25,129 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2018-07-08 19:39:25,129 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2018-07-08 19:39:25,129 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2018-07-08 19:39:25,129 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2018-07-08 19:39:25,149 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 19:39:25,149 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 19:39:25,150 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 19:39:25,150 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 19:39:25,195 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2018-07-08 19:39:25,196 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2018-07-08 19:39:25,196 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2018-07-08 19:39:25,206 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 19:39:25,296 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2018-07-08 19:39:25,306 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2018-07-08 19:39:25,635 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.6.40
2018-07-08 19:39:25,636 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2018-07-08 19:39:25,637 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2018-07-08 19:39:25,638 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2018-07-08 19:39:25,638 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {twitter.$$NoNameSchema$$ as main}
2018-07-08 19:39:25,639 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2018-07-08 19:39:25,647 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'twitter' order by table_name asc
2018-07-08 19:39:25,653 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'twitter' order by table_name asc, column_name asc
2018-07-08 19:39:25,665 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'twitter' and DATA_TYPE = 'datetime'
2018-07-08 19:39:25,676 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2018-07-08 19:39:25,676 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2018-07-08 19:39:25,676 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2018-07-08 19:39:25,677 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.FAVOLITE(TABLE) // お気に入り
2018-07-08 19:39:25,709 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.FOLLOW(TABLE) // フォロー
2018-07-08 19:39:25,718 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.REPLY(TABLE) // リプライ
2018-07-08 19:39:25,731 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.RETWEET(TABLE) // リツイート
2018-07-08 19:39:25,742 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.TWEET(TABLE) // ツイート
2018-07-08 19:39:25,758 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.USER(TABLE) // 会員 : 会員テーブル
2018-07-08 19:39:25,765 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2018-07-08 19:39:25,765 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2018-07-08 19:39:25,765 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 6
2018-07-08 19:39:25,766 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2018-07-08 19:39:25,766 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2018-07-08 19:39:25,767 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2018-07-08 19:39:25,770 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2018-07-08 19:39:25,771 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-demo.xml
2018-07-08 19:39:25,771 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2018-07-08 19:39:25,790 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2018-07-08 19:39:25,791 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 19:39:25,896 [main] INFO  (DfSchemaDiff#setupDocumentAuthorOfNextSchema():419) - *Cannot get git branch of next schema.
java.lang.IllegalArgumentException: The argument 'object' should not be null.
	at org.dbflute.optional.OptionalObject.of(OptionalObject.java:69)
	at org.dbflute.optional.OptionalThing.of(OptionalThing.java:47)
	at org.dbflute.logic.doc.supplement.author.DfDocumentAuthorLogic.getGitBranch(DfDocumentAuthorLogic.java:92)
	at org.dbflute.logic.jdbc.schemadiff.DfSchemaDiff.setupDocumentAuthorOfNextSchema(DfSchemaDiff.java:417)
	at org.dbflute.logic.jdbc.schemadiff.DfSchemaDiff.loadNextSchema(DfSchemaDiff.java:406)
	at org.dbflute.logic.jdbc.schemaxml.DfSchemaXmlSerializer.doLoadNextSchema(DfSchemaXmlSerializer.java:1551)
	at org.dbflute.logic.jdbc.schemaxml.DfSchemaXmlSerializer.loadNextSchema(DfSchemaXmlSerializer.java:1543)
	at org.dbflute.logic.jdbc.schemaxml.DfSchemaXmlSerializer.serialize(DfSchemaXmlSerializer.java:332)
	at org.apache.torque.task.TorqueJDBCTransformTask.doExecute(TorqueJDBCTransformTask.java:127)
	at org.dbflute.task.bs.DfAbstractTask$1.callActualExecute(DfAbstractTask.java:113)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTask.execute(DfAbstractTask.java:135)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.helper.SingleCheckExecutor.executeTargets(SingleCheckExecutor.java:38)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:416)
	at org.apache.tools.ant.taskdefs.CallTarget.execute(CallTarget.java:105)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
2018-07-08 19:39:25,967 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1555) -  -> different from previous (schema diff)
2018-07-08 19:39:25,969 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1557) - ...Serializing schema-diff:
2018-07-08 19:39:25,970 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1558) -   filePath = ./schema/project-history-demo.diffmap
2018-07-08 19:39:25,981 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2018-07-08 19:39:25,990 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s872ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql (MySQL 5.6.40)
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2018-07-08 19:39:26,554 [main] INFO  (TorqueDocumentationTask#begin():187) - +------------------------------------------+
2018-07-08 19:39:26,556 [main] INFO  (TorqueDocumentationTask#begin():188) - |                                          |
2018-07-08 19:39:26,556 [main] INFO  (TorqueDocumentationTask#begin():189) - |                   Doc                    |
2018-07-08 19:39:26,556 [main] INFO  (TorqueDocumentationTask#begin():197) - |                                          |
2018-07-08 19:39:26,557 [main] INFO  (TorqueDocumentationTask#begin():198) - +------------------------------------------+
2018-07-08 19:39:26,571 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 19:39:26,571 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 19:39:26,572 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 19:39:26,572 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 19:39:26,573 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():259) - 
2018-07-08 19:39:26,574 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():260) - * * * * * * * * * * *
2018-07-08 19:39:26,574 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():261) - *                   *
2018-07-08 19:39:26,574 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():262) - *    Schema HTML    *
2018-07-08 19:39:26,574 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():263) - *                   *
2018-07-08 19:39:26,575 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():264) - * * * * * * * * * * *
2018-07-08 19:39:26,673 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 19:39:26,744 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2018-07-08 19:39:26,856 [main] INFO  (Database#doEnableDocumentOutputDirectory():1224) - ...Setting up documentOutputDirectory: ./output/doc
2018-07-08 19:39:26,864 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2018-07-08 19:39:26,865 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2018-07-08 19:39:26,865 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2018-07-08 19:39:26,866 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2018-07-08 19:39:26,866 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2018-07-08 19:39:26,867 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2018-07-08 19:39:26,869 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2018-07-08 19:39:26,869 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2018-07-08 19:39:26,870 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2018-07-08 19:39:26,879 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():233) - ...Loading schema history
2018-07-08 19:39:26,902 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():237) -  -> found history: count=4
2018-07-08 19:39:27,124 [main] INFO  (DfRefreshMan#resolveProjectAutoDetect():105) - *Cannot auto-detect your refresh Eclipse proejct.
2018-07-08 19:39:27,126 [main] INFO  (DfRefreshResourceProcess#show():299) - /===========================================================================
2018-07-08 19:39:27,126 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Refreshing [$$AutoDetect$$] by http://localhost:8386/
2018-07-08 19:39:27,132 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Retrying refreshing by default secondary URL http://localhost:8387/
2018-07-08 19:39:27,133 [main] INFO  (DfRefreshResourceProcess#show():299) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to refresh the resources.

[Project List]
[$$AutoDetect$$]

[Request URL]
http://localhost:8386/

[IOExpception]
ConnectException
Connection refused (Connection refused)
* * * * * * * * * */
2018-07-08 19:39:27,134 [main] INFO  (DfRefreshResourceProcess#show():299) - ==========/
2018-07-08 19:39:27,138 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s593ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2018-07-08 19:39:28,644 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2018-07-08 19:39:28,645 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2018-07-08 19:39:28,645 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2018-07-08 19:39:28,646 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2018-07-08 19:39:28,646 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2018-07-08 19:39:28,663 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 19:39:28,663 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 19:39:28,663 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 19:39:28,663 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 19:39:28,677 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2018-07-08 19:39:28,677 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2018-07-08 19:39:28,701 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 19:39:28,745 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2018-07-08 19:39:28,891 [main] INFO  (Database#doEnableGenerateOutputDirectory():1192) - ...Setting up generateOutputDirectory: ../src/main/java
2018-07-08 19:39:28,894 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2018-07-08 19:39:28,894 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2018-07-08 19:39:28,894 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2018-07-08 19:39:28,895 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2018-07-08 19:39:28,895 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2018-07-08 19:39:28,896 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2018-07-08 19:39:28,898 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2018-07-08 19:39:28,898 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2018-07-08 19:39:28,899 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2018-07-08 19:39:28,908 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2018-07-08 19:39:28,908 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2018-07-08 19:39:28,908 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2018-07-08 19:39:28,909 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2018-07-08 19:39:28,909 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2018-07-08 19:39:28,909 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2018-07-08 19:39:28,909 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2018-07-08 19:39:28,909 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2018-07-08 19:39:28,909 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2018-07-08 19:39:28,910 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2018-07-08 19:39:28,918 [main] INFO  (Database#info():2785) - public void parseAllCommon() {
2018-07-08 19:39:28,919 [main] INFO  (Database#info():2785) -     parse('DBCurrent');
2018-07-08 19:39:28,923 [main] INFO  (Database#info():2785) -     parse('DBFluteConfig');
2018-07-08 19:39:28,936 [main] INFO  (Database#info():2785) -     parse('DBFluteInitializer');
2018-07-08 19:39:28,940 [main] INFO  (Database#info():2785) -     parse('DBMetaInstanceHandler');
2018-07-08 19:39:28,953 [main] INFO  (Database#info():2785) -     parse('EntityDefinedCommonColumn');
2018-07-08 19:39:28,956 [main] INFO  (Database#info():2785) -     parse('ImplementedBehaviorSelector');
2018-07-08 19:39:28,961 [main] INFO  (Database#info():2785) -     parse('ImplementedCommonColumnAutoSetupper');
2018-07-08 19:39:28,965 [main] INFO  (Database#info():2785) -     parse('ImplementedInvokerAssistant');
2018-07-08 19:39:28,982 [main] INFO  (Database#info():2785) -     parse('ImplementedSqlClauseCreator');
2018-07-08 19:39:28,985 [main] INFO  (Database#info():2785) - }
2018-07-08 19:39:28,985 [main] INFO  (Database#info():2785) - public void parseContainerConfig() {
2018-07-08 19:39:28,985 [main] INFO  (Database#info():2785) -     parse('demo/dbflute/allcommon/DBFluteBeansJavaConfig.java')
2018-07-08 19:39:28,999 [main] INFO  (Database#info():2785) - }
2018-07-08 19:39:29,006 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2018-07-08 19:39:29,025 [main] INFO  (DfOldClassHandler#info():1045) - }
2018-07-08 19:39:29,025 [main] INFO  (Database#info():2785) - public void parseTableClass() {
2018-07-08 19:39:29,026 [main] INFO  (Database#info():2785) -     parse('FAVOLITE');
2018-07-08 19:39:29,269 [main] INFO  (Database#info():2785) -     parse('FOLLOW');
2018-07-08 19:39:29,375 [main] INFO  (Database#info():2785) -     parse('REPLY');
2018-07-08 19:39:29,520 [main] INFO  (Database#info():2785) -     parse('RETWEET');
2018-07-08 19:39:29,631 [main] INFO  (Database#info():2785) -     parse('TWEET');
2018-07-08 19:39:29,775 [main] INFO  (Database#info():2785) -     parse('USER');
2018-07-08 19:39:29,950 [main] INFO  (Database#info():2785) - }
2018-07-08 19:39:29,951 [main] INFO  (Database#info():2785) -  
2018-07-08 19:39:29,968 [main] INFO  (DfRefreshMan#resolveProjectAutoDetect():105) - *Cannot auto-detect your refresh Eclipse proejct.
2018-07-08 19:39:29,969 [main] INFO  (DfRefreshResourceProcess#show():299) - /===========================================================================
2018-07-08 19:39:29,970 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Refreshing [$$AutoDetect$$] by http://localhost:8386/
2018-07-08 19:39:29,971 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Retrying refreshing by default secondary URL http://localhost:8387/
2018-07-08 19:39:29,972 [main] INFO  (DfRefreshResourceProcess#show():299) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to refresh the resources.

[Project List]
[$$AutoDetect$$]

[Request URL]
http://localhost:8386/

[IOExpception]
ConnectException
Connection refused (Connection refused)
* * * * * * * * * */
2018-07-08 19:39:29,973 [main] INFO  (DfRefreshResourceProcess#show():299) - ==========/
2018-07-08 19:39:29,978 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s343ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2018-07-08 19:39:30,611 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2018-07-08 19:39:30,613 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2018-07-08 19:39:30,613 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2018-07-08 19:39:30,613 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2018-07-08 19:39:30,613 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2018-07-08 19:39:30,625 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 19:39:30,625 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 19:39:30,626 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 19:39:30,626 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 19:39:30,643 [main] INFO  (DfSqlFileFireMan#fire():93) - {Fired SQL}: success=0 failure=0 (in 0 files)
2018-07-08 19:39:30,650 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s044ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2018-07-08 19:39:31,145 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2018-07-08 19:39:31,147 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2018-07-08 19:39:31,147 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2018-07-08 19:39:31,147 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2018-07-08 19:39:31,147 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2018-07-08 19:39:31,159 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 19:39:31,159 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 19:39:31,159 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 19:39:31,159 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 19:39:31,167 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2018-07-08 19:39:31,167 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2018-07-08 19:39:31,171 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 19:39:31,226 [main] INFO  (DfSqlFileFireMan#fire():93) - {Fired SQL}: success=0 failure=0 (in 0 files)
2018-07-08 19:39:31,247 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2018-07-08 19:39:31,247 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2018-07-08 19:39:31,248 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2018-07-08 19:39:31,248 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2018-07-08 19:39:31,248 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2018-07-08 19:39:31,248 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2018-07-08 19:39:31,248 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2018-07-08 19:39:31,248 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2018-07-08 19:39:31,250 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2018-07-08 19:39:31,378 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1208) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2018-07-08 19:39:31,380 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2018-07-08 19:39:31,386 [main] INFO  (DfOldClassHandler#info():1045) - }
2018-07-08 19:39:31,386 [main] INFO  (Database#info():2785) - public void parseCustomizeEntity() {
2018-07-08 19:39:31,388 [main] INFO  (Database#info():2785) - }
2018-07-08 19:39:31,396 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2018-07-08 19:39:31,398 [main] INFO  (DfRefreshMan#resolveProjectAutoDetect():105) - *Cannot auto-detect your refresh Eclipse proejct.
2018-07-08 19:39:31,399 [main] INFO  (DfRefreshResourceProcess#show():299) - /===========================================================================
2018-07-08 19:39:31,399 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Refreshing [$$AutoDetect$$] by http://localhost:8386/
2018-07-08 19:39:31,400 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Retrying refreshing by default secondary URL http://localhost:8387/
2018-07-08 19:39:31,402 [main] INFO  (DfRefreshResourceProcess#show():299) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to refresh the resources.

[Project List]
[$$AutoDetect$$]

[Request URL]
http://localhost:8386/

[IOExpception]
ConnectException
Connection refused (Connection refused)
* * * * * * * * * */
2018-07-08 19:39:31,402 [main] INFO  (DfRefreshResourceProcess#show():299) - ==========/
2018-07-08 19:39:31,405 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s267ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2018-07-08 19:59:45,249 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2018-07-08 19:59:45,252 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2018-07-08 19:59:45,252 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2018-07-08 19:59:45,252 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2018-07-08 19:59:45,253 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2018-07-08 19:59:45,272 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 19:59:45,272 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 19:59:45,273 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 19:59:45,273 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 19:59:45,309 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2018-07-08 19:59:45,310 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2018-07-08 19:59:45,310 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2018-07-08 19:59:45,321 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 19:59:45,407 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2018-07-08 19:59:45,415 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2018-07-08 19:59:45,763 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.6.40
2018-07-08 19:59:45,764 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2018-07-08 19:59:45,765 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2018-07-08 19:59:45,766 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2018-07-08 19:59:45,766 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {twitter.$$NoNameSchema$$ as main}
2018-07-08 19:59:45,767 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2018-07-08 19:59:45,779 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'twitter' order by table_name asc
2018-07-08 19:59:45,786 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'twitter' order by table_name asc, column_name asc
2018-07-08 19:59:45,800 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'twitter' and DATA_TYPE = 'datetime'
2018-07-08 19:59:45,810 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2018-07-08 19:59:45,810 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2018-07-08 19:59:45,811 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2018-07-08 19:59:45,811 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.FAVOLITE(TABLE) // お気に入り
2018-07-08 19:59:45,855 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.FOLLOW(TABLE) // フォロー
2018-07-08 19:59:45,869 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.REPLY(TABLE) // リプライ
2018-07-08 19:59:45,887 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.RETWEET(TABLE) // リツイート
2018-07-08 19:59:45,907 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.TWEET(TABLE) // ツイート
2018-07-08 19:59:45,915 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.USER(TABLE) // 会員 : 会員テーブル
2018-07-08 19:59:45,924 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2018-07-08 19:59:45,924 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2018-07-08 19:59:45,924 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 6
2018-07-08 19:59:45,924 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2018-07-08 19:59:45,925 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2018-07-08 19:59:45,926 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2018-07-08 19:59:45,929 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2018-07-08 19:59:45,929 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-demo.xml
2018-07-08 19:59:45,929 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2018-07-08 19:59:45,952 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2018-07-08 19:59:45,954 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 19:59:46,065 [main] INFO  (DfSchemaDiff#setupDocumentAuthorOfNextSchema():419) - *Cannot get git branch of next schema.
java.lang.IllegalArgumentException: The argument 'object' should not be null.
	at org.dbflute.optional.OptionalObject.of(OptionalObject.java:69)
	at org.dbflute.optional.OptionalThing.of(OptionalThing.java:47)
	at org.dbflute.logic.doc.supplement.author.DfDocumentAuthorLogic.getGitBranch(DfDocumentAuthorLogic.java:92)
	at org.dbflute.logic.jdbc.schemadiff.DfSchemaDiff.setupDocumentAuthorOfNextSchema(DfSchemaDiff.java:417)
	at org.dbflute.logic.jdbc.schemadiff.DfSchemaDiff.loadNextSchema(DfSchemaDiff.java:406)
	at org.dbflute.logic.jdbc.schemaxml.DfSchemaXmlSerializer.doLoadNextSchema(DfSchemaXmlSerializer.java:1551)
	at org.dbflute.logic.jdbc.schemaxml.DfSchemaXmlSerializer.loadNextSchema(DfSchemaXmlSerializer.java:1543)
	at org.dbflute.logic.jdbc.schemaxml.DfSchemaXmlSerializer.serialize(DfSchemaXmlSerializer.java:332)
	at org.apache.torque.task.TorqueJDBCTransformTask.doExecute(TorqueJDBCTransformTask.java:127)
	at org.dbflute.task.bs.DfAbstractTask$1.callActualExecute(DfAbstractTask.java:113)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTask.execute(DfAbstractTask.java:135)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.helper.SingleCheckExecutor.executeTargets(SingleCheckExecutor.java:38)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:416)
	at org.apache.tools.ant.taskdefs.CallTarget.execute(CallTarget.java:105)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
2018-07-08 19:59:46,115 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1565) -  -> same as previous (schema diff)
2018-07-08 19:59:46,115 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2018-07-08 19:59:46,124 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s887ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql (MySQL 5.6.40)
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2018-07-08 19:59:46,677 [main] INFO  (TorqueDocumentationTask#begin():187) - +------------------------------------------+
2018-07-08 19:59:46,678 [main] INFO  (TorqueDocumentationTask#begin():188) - |                                          |
2018-07-08 19:59:46,679 [main] INFO  (TorqueDocumentationTask#begin():189) - |                   Doc                    |
2018-07-08 19:59:46,679 [main] INFO  (TorqueDocumentationTask#begin():197) - |                                          |
2018-07-08 19:59:46,679 [main] INFO  (TorqueDocumentationTask#begin():198) - +------------------------------------------+
2018-07-08 19:59:46,695 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 19:59:46,695 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 19:59:46,695 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 19:59:46,696 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 19:59:46,697 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():259) - 
2018-07-08 19:59:46,697 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():260) - * * * * * * * * * * *
2018-07-08 19:59:46,697 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():261) - *                   *
2018-07-08 19:59:46,697 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():262) - *    Schema HTML    *
2018-07-08 19:59:46,698 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():263) - *                   *
2018-07-08 19:59:46,698 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():264) - * * * * * * * * * * *
2018-07-08 19:59:46,789 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 19:59:46,852 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2018-07-08 19:59:46,960 [main] INFO  (Database#doEnableDocumentOutputDirectory():1224) - ...Setting up documentOutputDirectory: ./output/doc
2018-07-08 19:59:46,967 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2018-07-08 19:59:46,967 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2018-07-08 19:59:46,968 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2018-07-08 19:59:46,969 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2018-07-08 19:59:46,969 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2018-07-08 19:59:46,970 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2018-07-08 19:59:46,971 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2018-07-08 19:59:46,972 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2018-07-08 19:59:46,973 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2018-07-08 19:59:46,979 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():233) - ...Loading schema history
2018-07-08 19:59:47,008 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():237) -  -> found history: count=4
2018-07-08 19:59:47,214 [main] INFO  (DfRefreshMan#resolveProjectAutoDetect():105) - *Cannot auto-detect your refresh Eclipse proejct.
2018-07-08 19:59:47,217 [main] INFO  (DfRefreshResourceProcess#show():299) - /===========================================================================
2018-07-08 19:59:47,217 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Refreshing [$$AutoDetect$$] by http://localhost:8386/
2018-07-08 19:59:47,222 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Retrying refreshing by default secondary URL http://localhost:8387/
2018-07-08 19:59:47,223 [main] INFO  (DfRefreshResourceProcess#show():299) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to refresh the resources.

[Project List]
[$$AutoDetect$$]

[Request URL]
http://localhost:8386/

[IOExpception]
ConnectException
Connection refused (Connection refused)
* * * * * * * * * */
2018-07-08 19:59:47,224 [main] INFO  (DfRefreshResourceProcess#show():299) - ==========/
2018-07-08 19:59:47,227 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s559ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2018-07-08 19:59:48,777 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2018-07-08 19:59:48,779 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2018-07-08 19:59:48,780 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2018-07-08 19:59:48,780 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2018-07-08 19:59:48,780 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2018-07-08 19:59:48,797 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 19:59:48,797 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 19:59:48,797 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 19:59:48,797 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 19:59:48,813 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2018-07-08 19:59:48,813 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2018-07-08 19:59:48,841 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 19:59:48,902 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2018-07-08 19:59:49,085 [main] INFO  (Database#doEnableGenerateOutputDirectory():1192) - ...Setting up generateOutputDirectory: ../src/main/java
2018-07-08 19:59:49,088 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2018-07-08 19:59:49,089 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2018-07-08 19:59:49,089 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2018-07-08 19:59:49,090 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2018-07-08 19:59:49,090 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2018-07-08 19:59:49,092 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2018-07-08 19:59:49,093 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2018-07-08 19:59:49,094 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2018-07-08 19:59:49,095 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2018-07-08 19:59:49,105 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2018-07-08 19:59:49,105 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2018-07-08 19:59:49,105 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2018-07-08 19:59:49,105 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2018-07-08 19:59:49,105 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2018-07-08 19:59:49,106 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2018-07-08 19:59:49,106 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2018-07-08 19:59:49,106 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2018-07-08 19:59:49,106 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2018-07-08 19:59:49,106 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2018-07-08 19:59:49,118 [main] INFO  (Database#info():2785) - public void parseAllCommon() {
2018-07-08 19:59:49,119 [main] INFO  (Database#info():2785) -     parse('DBCurrent');
2018-07-08 19:59:49,124 [main] INFO  (Database#info():2785) -     parse('DBFluteConfig');
2018-07-08 19:59:49,134 [main] INFO  (Database#info():2785) -     parse('DBFluteInitializer');
2018-07-08 19:59:49,137 [main] INFO  (Database#info():2785) -     parse('DBMetaInstanceHandler');
2018-07-08 19:59:49,187 [main] INFO  (Database#info():2785) -     parse('EntityDefinedCommonColumn');
2018-07-08 19:59:49,191 [main] INFO  (Database#info():2785) -     parse('ImplementedBehaviorSelector');
2018-07-08 19:59:49,201 [main] INFO  (Database#info():2785) -     parse('ImplementedCommonColumnAutoSetupper');
2018-07-08 19:59:49,205 [main] INFO  (Database#info():2785) -     parse('ImplementedInvokerAssistant');
2018-07-08 19:59:49,217 [main] INFO  (Database#info():2785) -     parse('ImplementedSqlClauseCreator');
2018-07-08 19:59:49,221 [main] INFO  (Database#info():2785) - }
2018-07-08 19:59:49,221 [main] INFO  (Database#info():2785) - public void parseContainerConfig() {
2018-07-08 19:59:49,222 [main] INFO  (Database#info():2785) -     parse('demo/dbflute/allcommon/DBFluteBeansJavaConfig.java')
2018-07-08 19:59:49,232 [main] INFO  (Database#info():2785) - }
2018-07-08 19:59:49,235 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2018-07-08 19:59:49,251 [main] INFO  (DfOldClassHandler#info():1045) - }
2018-07-08 19:59:49,251 [main] INFO  (Database#info():2785) - public void parseTableClass() {
2018-07-08 19:59:49,252 [main] INFO  (Database#info():2785) -     parse('FAVOLITE');
2018-07-08 19:59:49,487 [main] INFO  (Database#info():2785) -     parse('FOLLOW');
2018-07-08 19:59:49,635 [main] INFO  (Database#info():2785) -     parse('REPLY');
2018-07-08 19:59:49,789 [main] INFO  (Database#info():2785) -     parse('RETWEET');
2018-07-08 19:59:49,906 [main] INFO  (Database#info():2785) -     parse('TWEET');
2018-07-08 19:59:50,042 [main] INFO  (Database#info():2785) -     parse('USER');
2018-07-08 19:59:50,204 [main] INFO  (Database#info():2785) - }
2018-07-08 19:59:50,205 [main] INFO  (Database#info():2785) -  
2018-07-08 19:59:50,216 [main] INFO  (DfRefreshMan#resolveProjectAutoDetect():105) - *Cannot auto-detect your refresh Eclipse proejct.
2018-07-08 19:59:50,217 [main] INFO  (DfRefreshResourceProcess#show():299) - /===========================================================================
2018-07-08 19:59:50,217 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Refreshing [$$AutoDetect$$] by http://localhost:8386/
2018-07-08 19:59:50,218 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Retrying refreshing by default secondary URL http://localhost:8387/
2018-07-08 19:59:50,219 [main] INFO  (DfRefreshResourceProcess#show():299) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to refresh the resources.

[Project List]
[$$AutoDetect$$]

[Request URL]
http://localhost:8386/

[IOExpception]
ConnectException
Connection refused (Connection refused)
* * * * * * * * * */
2018-07-08 19:59:50,219 [main] INFO  (DfRefreshResourceProcess#show():299) - ==========/
2018-07-08 19:59:50,223 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s460ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2018-07-08 19:59:50,833 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2018-07-08 19:59:50,835 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2018-07-08 19:59:50,835 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2018-07-08 19:59:50,835 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2018-07-08 19:59:50,835 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2018-07-08 19:59:50,847 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 19:59:50,848 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 19:59:50,848 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 19:59:50,848 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 19:59:50,866 [main] INFO  (DfSqlFileFireMan#fire():93) - {Fired SQL}: success=0 failure=0 (in 0 files)
2018-07-08 19:59:50,873 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s045ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2018-07-08 19:59:51,371 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2018-07-08 19:59:51,372 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2018-07-08 19:59:51,372 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2018-07-08 19:59:51,372 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2018-07-08 19:59:51,373 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2018-07-08 19:59:51,384 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-08 19:59:51,385 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-08 19:59:51,385 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-08 19:59:51,385 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-08 19:59:51,393 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2018-07-08 19:59:51,393 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2018-07-08 19:59:51,397 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-08 19:59:51,447 [main] INFO  (DfSqlFileFireMan#fire():93) - {Fired SQL}: success=0 failure=0 (in 0 files)
2018-07-08 19:59:51,468 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2018-07-08 19:59:51,468 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2018-07-08 19:59:51,469 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2018-07-08 19:59:51,469 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2018-07-08 19:59:51,469 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2018-07-08 19:59:51,469 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2018-07-08 19:59:51,469 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2018-07-08 19:59:51,469 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2018-07-08 19:59:51,471 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2018-07-08 19:59:51,591 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1208) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2018-07-08 19:59:51,594 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2018-07-08 19:59:51,602 [main] INFO  (DfOldClassHandler#info():1045) - }
2018-07-08 19:59:51,603 [main] INFO  (Database#info():2785) - public void parseCustomizeEntity() {
2018-07-08 19:59:51,604 [main] INFO  (Database#info():2785) - }
2018-07-08 19:59:51,609 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2018-07-08 19:59:51,611 [main] INFO  (DfRefreshMan#resolveProjectAutoDetect():105) - *Cannot auto-detect your refresh Eclipse proejct.
2018-07-08 19:59:51,612 [main] INFO  (DfRefreshResourceProcess#show():299) - /===========================================================================
2018-07-08 19:59:51,612 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Refreshing [$$AutoDetect$$] by http://localhost:8386/
2018-07-08 19:59:51,613 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Retrying refreshing by default secondary URL http://localhost:8387/
2018-07-08 19:59:51,613 [main] INFO  (DfRefreshResourceProcess#show():299) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to refresh the resources.

[Project List]
[$$AutoDetect$$]

[Request URL]
http://localhost:8386/

[IOExpception]
ConnectException
Connection refused (Connection refused)
* * * * * * * * * */
2018-07-08 19:59:51,614 [main] INFO  (DfRefreshResourceProcess#show():299) - ==========/
2018-07-08 19:59:51,667 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s304ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2018-07-11 21:11:45,736 [main] INFO  (DfReplaceSchemaTask#begin():92) - +------------------------------------------+
2018-07-11 21:11:45,738 [main] INFO  (DfReplaceSchemaTask#begin():93) - |                                          |
2018-07-11 21:11:45,739 [main] INFO  (DfReplaceSchemaTask#begin():94) - |              ReplaceSchema               |
2018-07-11 21:11:45,744 [main] INFO  (DfReplaceSchemaTask#begin():102) - |                                          |
2018-07-11 21:11:45,744 [main] INFO  (DfReplaceSchemaTask#begin():103) - +------------------------------------------+
2018-07-11 21:11:45,745 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():401) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2018-07-11 21:11:47,959 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-11 21:11:47,959 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-11 21:11:47,959 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-11 21:11:47,959 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-11 21:11:47,967 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2018-07-11 21:11:48,279 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.6.40
2018-07-11 21:11:48,280 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2018-07-11 21:11:48,292 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():229) - 
2018-07-11 21:11:48,293 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():230) - * * * * * * * * * * *
2018-07-11 21:11:48,293 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():231) - *                   *
2018-07-11 21:11:48,294 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():232) - * Initialize Schema *
2018-07-11 21:11:48,294 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():233) - *                   *
2018-07-11 21:11:48,295 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():234) - * * * * * * * * * * *
2018-07-11 21:11:48,309 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2018-07-11 21:11:48,309 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {twitter.$$NoNameSchema$$ as main}
2018-07-11 21:11:48,310 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2018-07-11 21:11:48,357 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table FAVOLITE
2018-07-11 21:11:48,366 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table FOLLOW
2018-07-11 21:11:48,373 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table REPLY
2018-07-11 21:11:48,379 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table RETWEET
2018-07-11 21:11:48,406 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table FAVOLITE drop foreign key FK_FAVOLITE_TWEET
2018-07-11 21:11:48,418 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table FAVOLITE drop foreign key FK_FAVOLITE_USER
2018-07-11 21:11:48,427 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table FOLLOW drop foreign key FK_FOLLOWEE_USER
2018-07-11 21:11:48,434 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table FOLLOW drop foreign key FK_FOLLOWER_USER
2018-07-11 21:11:48,443 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table REPLY drop foreign key FK_REPLYEE_USER
2018-07-11 21:11:48,450 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table REPLY drop foreign key FK_REPLYEE_TWEET
2018-07-11 21:11:48,456 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table REPLY drop foreign key FK_REPLYER_USER
2018-07-11 21:11:48,465 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table REPLY drop foreign key FK_REPLYER_TWEET
2018-07-11 21:11:48,478 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table RETWEET drop foreign key FK_RETWEET_TWEET
2018-07-11 21:11:48,485 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table RETWEET drop foreign key FK_RETWEET_USER
2018-07-11 21:11:48,499 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - alter table TWEET drop foreign key FK_TWEET_USER
2018-07-11 21:11:48,508 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table FAVOLITE
2018-07-11 21:11:48,510 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table FOLLOW
2018-07-11 21:11:48,512 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table REPLY
2018-07-11 21:11:48,514 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table RETWEET
2018-07-11 21:11:48,516 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table TWEET
2018-07-11 21:11:48,518 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table USER
2018-07-11 21:11:48,538 [main] INFO  (DfCreateSchemaProcess#createSchema():266) - 
2018-07-11 21:11:48,538 [main] INFO  (DfCreateSchemaProcess#createSchema():267) - * * * * * * * * *
2018-07-11 21:11:48,538 [main] INFO  (DfCreateSchemaProcess#createSchema():268) - *               *
2018-07-11 21:11:48,538 [main] INFO  (DfCreateSchemaProcess#createSchema():269) - * Create Schema *
2018-07-11 21:11:48,538 [main] INFO  (DfCreateSchemaProcess#createSchema():270) - *               *
2018-07-11 21:11:48,538 [main] INFO  (DfCreateSchemaProcess#createSchema():271) - * * * * * * * * *
2018-07-11 21:11:48,542 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: replace-schema.sql
2018-07-11 21:11:48,545 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Tables */

CREATE TABLE FAVOLITE
(
	FAVOLITE_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'お気に入りID : お気に入りID',
	USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID
',
	TWEET_ID BIGINT NOT NULL COMMENT 'ツイートID : お気に入りしたツイートID
',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : お気に入りした時間',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時
',
	PRIMARY KEY (FAVOLITE_ID)
) COMMENT = 'お気に入り'
2018-07-11 21:11:48,582 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE FOLLOW
(
	FOLLOW_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'フォローID : フォローID',
	FOLLOWEE_ID BIGINT NOT NULL COMMENT 'フォロイーID : フォロイーID
フォローする人の会員IDが入る
',
	FOLLOWER_ID BIGINT NOT NULL COMMENT 'フォロワーID : フォロワーID
フォローされる人のIDが入る',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
フォローされているかをT / Fで判定する
',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : フォローした日時',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (FOLLOW_ID),
	CONSTRAINT UQ_NEW_TABLE_XXX UNIQUE (FOLLOWEE_ID, FOLLOWER_ID)
) COMMENT = 'フォロー'
2018-07-11 21:11:48,592 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE REPLY
(
	REPLY_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'リプライID : リプライID',
	REPLYEE_ID BIGINT NOT NULL COMMENT 'リプライした会員ID : リプライした会員ID
',
	REPLYER_ID BIGINT NOT NULL COMMENT 'リプライされた会員ID : リプライされた会員のID',
	REPLYEE_TWEET_ID BIGINT NOT NULL COMMENT 'リプライしたツイートID : リプライしたツイートのID
',
	REPLYER_TWEET_ID BIGINT NOT NULL COMMENT 'リプライされたツイートID : リプライされたツイートのID',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : リプライした日時',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (REPLY_ID)
) COMMENT = 'リプライ'
2018-07-11 21:11:48,601 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE RETWEET
(
	RETWEET_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'リツイートID : リツイートID',
	USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID
リツイートする人の会員IDが入る
',
	TWEET_ID BIGINT NOT NULL COMMENT 'ツイートID : ツイートID
リツイートされるツイートIDが格納される',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
リツイートしたかどうかを見る
一回リツイートして辞めてもう一回リツイートをするときにTにして表示できるようにする
',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : 登録日時',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (RETWEET_ID),
	CONSTRAINT UQ_NEW_TABLE_XXX UNIQUE (USER_ID, TWEET_ID)
) COMMENT = 'リツイート'
2018-07-11 21:11:48,693 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE TWEET
(
	TWEET_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT 'ツイートID : ツイートID',
	USER_ID BIGINT NOT NULL COMMENT '会員ID : 会員ID
',
	TWEET VARCHAR(140) NOT NULL COMMENT 'ツイート : ツイート
140文字制限されているので最大長140に設定',
	DEL_FLG BOOLEAN NOT NULL COMMENT '削除フラグ : 削除フラグ
物理削除は怖いので論理削除を想定',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : ツイートした時間',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時',
	PRIMARY KEY (TWEET_ID)
) COMMENT = 'ツイート'
2018-07-11 21:11:48,703 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
CREATE TABLE USER
(
	USER_ID BIGINT NOT NULL UNIQUE AUTO_INCREMENT COMMENT '会員ID : 会員ID',
	USER_NAME VARCHAR(64) NOT NULL COMMENT '会員名称 : 会員名称。
このデータが名前として表示される。',
	PASSWORD VARCHAR(30) NOT NULL COMMENT 'パスワード : パスワード',
	MAIL_ADDRESS VARCHAR(255) NOT NULL UNIQUE COMMENT 'メールアドレス : メールアドレス',
	BIRTH_DATE DATE COMMENT '誕生日 : 誕生日
時間までは考慮しない
特に入力する必要もないのでNULLを許容する',
	PROFILE_SENTENCE VARCHAR(200) NOT NULL COMMENT 'プロフィール文 : プロフィール文
長いのも困るので300文字',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時 : 登録日時
ユーザがサービスに登録した日時を格納する',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時 : 更新日時
',
	PRIMARY KEY (USER_ID)
) ENGINE = InnoDB COMMENT = '会員 : 会員テーブル' DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci
2018-07-11 21:11:48,712 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
/* Create Foreign Keys */

ALTER TABLE FAVOLITE
	ADD CONSTRAINT FK_FAVOLITE_TWEET FOREIGN KEY (TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-11 21:11:48,824 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYEE_TWEET FOREIGN KEY (REPLYEE_TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-11 21:11:48,837 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYER_TWEET FOREIGN KEY (REPLYER_TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-11 21:11:48,849 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE RETWEET
	ADD CONSTRAINT FK_RETWEET_TWEET FOREIGN KEY (TWEET_ID)
	REFERENCES TWEET (TWEET_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-11 21:11:48,864 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FAVOLITE
	ADD CONSTRAINT FK_FAVOLITE_USER FOREIGN KEY (USER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-11 21:11:48,878 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOW
	ADD CONSTRAINT FK_FOLLOWEE_USER FOREIGN KEY (FOLLOWEE_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-11 21:11:48,893 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE FOLLOW
	ADD CONSTRAINT FK_FOLLOWER_USER FOREIGN KEY (FOLLOWER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-11 21:11:48,929 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYEE_USER FOREIGN KEY (REPLYEE_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-11 21:11:48,943 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE REPLY
	ADD CONSTRAINT FK_REPLYER_USER FOREIGN KEY (REPLYER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-11 21:11:48,958 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE RETWEET
	ADD CONSTRAINT FK_RETWEET_USER FOREIGN KEY (USER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-11 21:11:48,971 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
ALTER TABLE TWEET
	ADD CONSTRAINT FK_TWEET_USER FOREIGN KEY (USER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
2018-07-11 21:11:48,985 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=17 failure=0
2018-07-11 21:11:48,985 [main] INFO  (DfSqlFileFireMan#fire():93) - {Create Schema}: success=17 failure=0 (in 1 files)
2018-07-11 21:11:49,068 [main] INFO  (DfLoadDataProcess#execute():130) - 
2018-07-11 21:11:49,068 [main] INFO  (DfLoadDataProcess#execute():131) - * * * * * * * * * * *
2018-07-11 21:11:49,068 [main] INFO  (DfLoadDataProcess#execute():132) - *                   *
2018-07-11 21:11:49,068 [main] INFO  (DfLoadDataProcess#execute():133) - * Load Data         *
2018-07-11 21:11:49,068 [main] INFO  (DfLoadDataProcess#execute():134) - *                   *
2018-07-11 21:11:49,069 [main] INFO  (DfLoadDataProcess#execute():135) - * * * * * * * * * * *
2018-07-11 21:11:49,088 [main] INFO  (DfTakeFinallyProcess#takeFinally():237) - 
2018-07-11 21:11:49,088 [main] INFO  (DfTakeFinallyProcess#takeFinally():238) - * * * * * * * **
2018-07-11 21:11:49,088 [main] INFO  (DfTakeFinallyProcess#takeFinally():239) - *              *
2018-07-11 21:11:49,088 [main] INFO  (DfTakeFinallyProcess#takeFinally():240) - * Take Finally *
2018-07-11 21:11:49,089 [main] INFO  (DfTakeFinallyProcess#takeFinally():241) - *              *
2018-07-11 21:11:49,089 [main] INFO  (DfTakeFinallyProcess#takeFinally():242) - * * * * * * * **
2018-07-11 21:11:49,096 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: take-finally.sql
2018-07-11 21:11:49,097 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2018-07-11 21:11:49,097 [main] INFO  (DfSqlFileFireMan#fire():93) - {Take Finally}: success=0 failure=0 (in 1 files)
2018-07-11 21:11:49,098 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2018-07-11 21:11:49,103 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m03s384ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql (MySQL 5.6.40)
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Create Schema}: success=17 failure=0 (in 1 files)
  o replace-schema.sql

 {Load Data}: loaded-files=0
  - (no data file)

 {Take Finally}: success=0 failure=0 (in 1 files)
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2018-07-11 21:11:53,993 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2018-07-11 21:11:53,997 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2018-07-11 21:11:53,997 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2018-07-11 21:11:53,998 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2018-07-11 21:11:53,998 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2018-07-11 21:11:54,016 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-11 21:11:54,017 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-11 21:11:54,017 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-11 21:11:54,017 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-11 21:11:54,053 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2018-07-11 21:11:54,053 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2018-07-11 21:11:54,053 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2018-07-11 21:11:54,064 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-11 21:11:54,147 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2018-07-11 21:11:54,162 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2018-07-11 21:11:54,503 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 5.6.40
2018-07-11 21:11:54,504 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e ) for JDBC 4.0
2018-07-11 21:11:54,505 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2018-07-11 21:11:54,506 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2018-07-11 21:11:54,506 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {twitter.$$NoNameSchema$$ as main}
2018-07-11 21:11:54,506 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2018-07-11 21:11:54,517 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'twitter' order by table_name asc
2018-07-11 21:11:54,522 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'twitter' order by table_name asc, column_name asc
2018-07-11 21:11:54,536 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'twitter' and DATA_TYPE = 'datetime'
2018-07-11 21:11:54,548 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2018-07-11 21:11:54,548 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2018-07-11 21:11:54,548 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2018-07-11 21:11:54,549 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.FAVOLITE(TABLE) // お気に入り
2018-07-11 21:11:54,582 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.FOLLOW(TABLE) // フォロー
2018-07-11 21:11:54,592 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.REPLY(TABLE) // リプライ
2018-07-11 21:11:54,605 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.RETWEET(TABLE) // リツイート
2018-07-11 21:11:54,615 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.TWEET(TABLE) // ツイート
2018-07-11 21:11:54,634 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ twitter.USER(TABLE) // 会員 : 会員テーブル
2018-07-11 21:11:54,643 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2018-07-11 21:11:54,643 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2018-07-11 21:11:54,643 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 6
2018-07-11 21:11:54,644 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2018-07-11 21:11:54,644 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2018-07-11 21:11:54,645 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2018-07-11 21:11:54,648 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2018-07-11 21:11:54,648 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-demo.xml
2018-07-11 21:11:54,649 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2018-07-11 21:11:54,672 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2018-07-11 21:11:54,673 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-11 21:11:54,770 [main] INFO  (DfSchemaDiff#setupDocumentAuthorOfNextSchema():419) - *Cannot get git branch of next schema.
java.lang.IllegalArgumentException: The argument 'object' should not be null.
	at org.dbflute.optional.OptionalObject.of(OptionalObject.java:69)
	at org.dbflute.optional.OptionalThing.of(OptionalThing.java:47)
	at org.dbflute.logic.doc.supplement.author.DfDocumentAuthorLogic.getGitBranch(DfDocumentAuthorLogic.java:92)
	at org.dbflute.logic.jdbc.schemadiff.DfSchemaDiff.setupDocumentAuthorOfNextSchema(DfSchemaDiff.java:417)
	at org.dbflute.logic.jdbc.schemadiff.DfSchemaDiff.loadNextSchema(DfSchemaDiff.java:406)
	at org.dbflute.logic.jdbc.schemaxml.DfSchemaXmlSerializer.doLoadNextSchema(DfSchemaXmlSerializer.java:1551)
	at org.dbflute.logic.jdbc.schemaxml.DfSchemaXmlSerializer.loadNextSchema(DfSchemaXmlSerializer.java:1543)
	at org.dbflute.logic.jdbc.schemaxml.DfSchemaXmlSerializer.serialize(DfSchemaXmlSerializer.java:332)
	at org.apache.torque.task.TorqueJDBCTransformTask.doExecute(TorqueJDBCTransformTask.java:127)
	at org.dbflute.task.bs.DfAbstractTask$1.callActualExecute(DfAbstractTask.java:113)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTask.execute(DfAbstractTask.java:135)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.helper.SingleCheckExecutor.executeTargets(SingleCheckExecutor.java:38)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:416)
	at org.apache.tools.ant.taskdefs.CallTarget.execute(CallTarget.java:105)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
2018-07-11 21:11:54,840 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1555) -  -> different from previous (schema diff)
2018-07-11 21:11:54,842 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1557) - ...Serializing schema-diff:
2018-07-11 21:11:54,843 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1558) -   filePath = ./schema/project-history-demo.diffmap
2018-07-11 21:11:54,854 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2018-07-11 21:11:54,864 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s878ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql (MySQL 5.6.40)
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2018-07-11 21:11:55,428 [main] INFO  (TorqueDocumentationTask#begin():187) - +------------------------------------------+
2018-07-11 21:11:55,429 [main] INFO  (TorqueDocumentationTask#begin():188) - |                                          |
2018-07-11 21:11:55,429 [main] INFO  (TorqueDocumentationTask#begin():189) - |                   Doc                    |
2018-07-11 21:11:55,429 [main] INFO  (TorqueDocumentationTask#begin():197) - |                                          |
2018-07-11 21:11:55,430 [main] INFO  (TorqueDocumentationTask#begin():198) - +------------------------------------------+
2018-07-11 21:11:55,445 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-11 21:11:55,445 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-11 21:11:55,445 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-11 21:11:55,445 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-11 21:11:55,447 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():259) - 
2018-07-11 21:11:55,447 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():260) - * * * * * * * * * * *
2018-07-11 21:11:55,447 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():261) - *                   *
2018-07-11 21:11:55,447 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():262) - *    Schema HTML    *
2018-07-11 21:11:55,447 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():263) - *                   *
2018-07-11 21:11:55,448 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():264) - * * * * * * * * * * *
2018-07-11 21:11:55,533 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-11 21:11:55,601 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2018-07-11 21:11:55,712 [main] INFO  (Database#doEnableDocumentOutputDirectory():1224) - ...Setting up documentOutputDirectory: ./output/doc
2018-07-11 21:11:55,718 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2018-07-11 21:11:55,718 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2018-07-11 21:11:55,719 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2018-07-11 21:11:55,720 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2018-07-11 21:11:55,720 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2018-07-11 21:11:55,721 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2018-07-11 21:11:55,722 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2018-07-11 21:11:55,722 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2018-07-11 21:11:55,724 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2018-07-11 21:11:55,731 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():233) - ...Loading schema history
2018-07-11 21:11:55,753 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():237) -  -> found history: count=5
2018-07-11 21:11:55,952 [main] INFO  (DfRefreshMan#resolveProjectAutoDetect():105) - *Cannot auto-detect your refresh Eclipse proejct.
2018-07-11 21:11:55,954 [main] INFO  (DfRefreshResourceProcess#show():299) - /===========================================================================
2018-07-11 21:11:55,954 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Refreshing [$$AutoDetect$$] by http://localhost:8386/
2018-07-11 21:11:55,961 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Retrying refreshing by default secondary URL http://localhost:8387/
2018-07-11 21:11:55,962 [main] INFO  (DfRefreshResourceProcess#show():299) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to refresh the resources.

[Project List]
[$$AutoDetect$$]

[Request URL]
http://localhost:8386/

[IOExpception]
ConnectException
Connection refused (Connection refused)
* * * * * * * * * */
2018-07-11 21:11:55,963 [main] INFO  (DfRefreshResourceProcess#show():299) - ==========/
2018-07-11 21:11:55,965 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s548ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2018-07-11 21:11:57,453 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2018-07-11 21:11:57,455 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2018-07-11 21:11:57,455 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2018-07-11 21:11:57,455 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2018-07-11 21:11:57,455 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2018-07-11 21:11:57,470 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-11 21:11:57,470 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-11 21:11:57,470 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-11 21:11:57,470 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-11 21:11:57,482 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2018-07-11 21:11:57,482 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2018-07-11 21:11:57,505 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-11 21:11:57,563 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2018-07-11 21:11:57,737 [main] INFO  (Database#doEnableGenerateOutputDirectory():1192) - ...Setting up generateOutputDirectory: ../src/main/java
2018-07-11 21:11:57,740 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2018-07-11 21:11:57,740 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2018-07-11 21:11:57,741 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2018-07-11 21:11:57,742 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2018-07-11 21:11:57,742 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2018-07-11 21:11:57,743 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2018-07-11 21:11:57,744 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2018-07-11 21:11:57,745 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2018-07-11 21:11:57,747 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2018-07-11 21:11:57,756 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2018-07-11 21:11:57,756 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2018-07-11 21:11:57,757 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2018-07-11 21:11:57,757 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2018-07-11 21:11:57,757 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2018-07-11 21:11:57,758 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2018-07-11 21:11:57,758 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2018-07-11 21:11:57,758 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2018-07-11 21:11:57,758 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2018-07-11 21:11:57,759 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2018-07-11 21:11:57,771 [main] INFO  (Database#info():2785) - public void parseAllCommon() {
2018-07-11 21:11:57,773 [main] INFO  (Database#info():2785) -     parse('DBCurrent');
2018-07-11 21:11:57,777 [main] INFO  (Database#info():2785) -     parse('DBFluteConfig');
2018-07-11 21:11:57,792 [main] INFO  (Database#info():2785) -     parse('DBFluteInitializer');
2018-07-11 21:11:57,795 [main] INFO  (Database#info():2785) -     parse('DBMetaInstanceHandler');
2018-07-11 21:11:57,812 [main] INFO  (Database#info():2785) -     parse('EntityDefinedCommonColumn');
2018-07-11 21:11:57,815 [main] INFO  (Database#info():2785) -     parse('ImplementedBehaviorSelector');
2018-07-11 21:11:57,821 [main] INFO  (Database#info():2785) -     parse('ImplementedCommonColumnAutoSetupper');
2018-07-11 21:11:57,825 [main] INFO  (Database#info():2785) -     parse('ImplementedInvokerAssistant');
2018-07-11 21:11:57,832 [main] INFO  (Database#info():2785) -     parse('ImplementedSqlClauseCreator');
2018-07-11 21:11:57,835 [main] INFO  (Database#info():2785) - }
2018-07-11 21:11:57,836 [main] INFO  (Database#info():2785) - public void parseContainerConfig() {
2018-07-11 21:11:57,837 [main] INFO  (Database#info():2785) -     parse('demo/dbflute/allcommon/DBFluteBeansJavaConfig.java')
2018-07-11 21:11:57,853 [main] INFO  (Database#info():2785) - }
2018-07-11 21:11:57,858 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2018-07-11 21:11:57,876 [main] INFO  (DfOldClassHandler#info():1045) - }
2018-07-11 21:11:57,876 [main] INFO  (Database#info():2785) - public void parseTableClass() {
2018-07-11 21:11:57,877 [main] INFO  (Database#info():2785) -     parse('FAVOLITE');
2018-07-11 21:11:58,116 [main] INFO  (Database#info():2785) -     parse('FOLLOW');
2018-07-11 21:11:58,249 [main] INFO  (Database#info():2785) -     parse('REPLY');
2018-07-11 21:11:58,388 [main] INFO  (Database#info():2785) -     parse('RETWEET');
2018-07-11 21:11:58,497 [main] INFO  (Database#info():2785) -     parse('TWEET');
2018-07-11 21:11:58,636 [main] INFO  (Database#info():2785) -     parse('USER');
2018-07-11 21:11:58,813 [main] INFO  (Database#info():2785) - }
2018-07-11 21:11:58,813 [main] INFO  (Database#info():2785) -  
2018-07-11 21:11:58,825 [main] INFO  (DfRefreshMan#resolveProjectAutoDetect():105) - *Cannot auto-detect your refresh Eclipse proejct.
2018-07-11 21:11:58,826 [main] INFO  (DfRefreshResourceProcess#show():299) - /===========================================================================
2018-07-11 21:11:58,826 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Refreshing [$$AutoDetect$$] by http://localhost:8386/
2018-07-11 21:11:58,827 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Retrying refreshing by default secondary URL http://localhost:8387/
2018-07-11 21:11:58,828 [main] INFO  (DfRefreshResourceProcess#show():299) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to refresh the resources.

[Project List]
[$$AutoDetect$$]

[Request URL]
http://localhost:8386/

[IOExpception]
ConnectException
Connection refused (Connection refused)
* * * * * * * * * */
2018-07-11 21:11:58,828 [main] INFO  (DfRefreshResourceProcess#show():299) - ==========/
2018-07-11 21:11:58,832 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s391ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2018-07-11 21:11:59,453 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2018-07-11 21:11:59,454 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2018-07-11 21:11:59,454 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2018-07-11 21:11:59,454 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2018-07-11 21:11:59,455 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2018-07-11 21:11:59,467 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-11 21:11:59,467 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-11 21:11:59,467 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-11 21:11:59,467 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-11 21:11:59,484 [main] INFO  (DfSqlFileFireMan#fire():93) - {Fired SQL}: success=0 failure=0 (in 0 files)
2018-07-11 21:11:59,491 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s047ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2018-07-11 21:11:59,997 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2018-07-11 21:11:59,999 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2018-07-11 21:11:59,999 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2018-07-11 21:11:59,999 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2018-07-11 21:11:59,999 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2018-07-11 21:12:00,013 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2018-07-11 21:12:00,014 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2018-07-11 21:12:00,014 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:3306/twitter
2018-07-11 21:12:00,014 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = raqwel
2018-07-11 21:12:00,024 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2018-07-11 21:12:00,024 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2018-07-11 21:12:00,028 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2018-07-11 21:12:00,093 [main] INFO  (DfSqlFileFireMan#fire():93) - {Fired SQL}: success=0 failure=0 (in 0 files)
2018-07-11 21:12:00,116 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2018-07-11 21:12:00,116 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2018-07-11 21:12:00,116 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2018-07-11 21:12:00,116 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2018-07-11 21:12:00,116 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2018-07-11 21:12:00,117 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2018-07-11 21:12:00,117 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2018-07-11 21:12:00,117 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2018-07-11 21:12:00,119 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2018-07-11 21:12:00,255 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1208) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2018-07-11 21:12:00,258 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2018-07-11 21:12:00,269 [main] INFO  (DfOldClassHandler#info():1045) - }
2018-07-11 21:12:00,269 [main] INFO  (Database#info():2785) - public void parseCustomizeEntity() {
2018-07-11 21:12:00,270 [main] INFO  (Database#info():2785) - }
2018-07-11 21:12:00,278 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 0

- - - - - - - - - -/
2018-07-11 21:12:00,280 [main] INFO  (DfRefreshMan#resolveProjectAutoDetect():105) - *Cannot auto-detect your refresh Eclipse proejct.
2018-07-11 21:12:00,280 [main] INFO  (DfRefreshResourceProcess#show():299) - /===========================================================================
2018-07-11 21:12:00,281 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Refreshing [$$AutoDetect$$] by http://localhost:8386/
2018-07-11 21:12:00,282 [main] INFO  (DfRefreshResourceProcess#show():299) - ...Retrying refreshing by default secondary URL http://localhost:8387/
2018-07-11 21:12:00,282 [main] INFO  (DfRefreshResourceProcess#show():299) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to refresh the resources.

[Project List]
[$$AutoDetect$$]

[Request URL]
http://localhost:8386/

[IOExpception]
ConnectException
Connection refused (Connection refused)
* * * * * * * * * */
2018-07-11 21:12:00,283 [main] INFO  (DfRefreshResourceProcess#show():299) - ==========/
2018-07-11 21:12:00,286 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s296ms

  DBFLUTE_CLIENT: {demo}
    database  = mysql
    language  = java
    container = spring
    package   = demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:3306/twitter
    schema = {twitter.$$NoNameSchema$$ as main}
    user   = raqwel
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
